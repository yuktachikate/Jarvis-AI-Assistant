2025-06-09 17:16:51,970 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:16:56,064 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 17:16:56,065 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:16:56,066 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:16:56,067 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:16:56,068 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 17:16:56,069 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 17:16:56,069 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 17:16:56,069 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:16:56,069 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:16:56,069 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 17:16:56,069 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:16:56,069 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:16:56,070 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:16:56,341 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:16:56,342 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:16:56,342 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:16:56,343 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:16:56,344 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:16:56,344 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:16:56,344 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:16:56,344 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:16:56,344 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:16:56,344 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:16:56,344 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:16:56,344 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:16:56,530 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:16:56,531 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:16:56,532 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 17:16:56,533 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:16:56,533 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:16:56,533 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 17:16:56,805 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 17:16:56,808 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 17:16:56,820 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 17:16:56,823 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 17:16:56,823 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 17:16:56,824 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 17:16:56,824 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 17:16:56,824 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 17:16:57,714 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 17:16:57,719 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:16:57,720 - matplotlib - DEBUG - interactive is False
2025-06-09 17:16:57,720 - matplotlib - DEBUG - platform is darwin
2025-06-09 17:16:57,766 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:16:57,769 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 17:16:57,979 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 17:17:00,554 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:17:00,700 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:17:00,700 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:17:00,701 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:17:00,701 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:17:00,702 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:17:00,702 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:17:00,702 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:17:00,703 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:17:00,829 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:17:00,833 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:00,869 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:00,876 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:00,919 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:17:01,056 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:17:01,056 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:17:01,057 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:17:01,057 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:17:01,058 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:17:01,058 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:17:01,058 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:17:01,059 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:17:01,060 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:17:01,246 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:17:01,505 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 17:17:01,535 - jarvis_app - INFO - Audio output test successful
2025-06-09 17:17:05,029 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:17:05,035 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:05,039 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:05,048 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:05,121 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:17:05,264 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:17:05,264 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:17:05,264 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:17:05,265 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:17:05,265 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:17:05,266 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:17:05,266 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:17:05,266 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:17:05,267 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:17:05,267 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:17:05,267 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:17:05,267 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:17:05,267 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:17:05,448 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:17:05,582 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 17:17:05,736 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 17:17:06,037 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 17:17:06,038 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 17:17:06,040 - jarvis_app - INFO - Starting Jarvis AI Assistant
2025-06-09 17:17:06,040 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 17:17:06,040 - jarvis_app - INFO - TTS worker thread started
2025-06-09 17:17:06,041 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 17:17:06,041 - jarvis_app - INFO - Running with audio output
2025-06-09 17:17:06,041 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 17:17:06,041 - jarvis_app - INFO - Starting Flask server on port 5000
2025-06-09 17:17:44,805 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 17:17:48,458 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:17:48,458 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:17:48,458 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,458 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:17:48,458 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 17:17:48,458 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 17:17:48,459 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:17:48,460 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 17:17:48,461 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 17:17:48,462 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:17:48,463 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:17:48,464 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:17:48,787 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:17:48,788 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:17:48,788 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:17:48,789 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:17:48,790 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:17:48,790 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:17:48,931 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 17:17:48,932 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:17:48,933 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:17:48,934 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 17:17:49,237 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 17:17:49,240 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 17:17:49,244 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 17:17:49,247 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 17:17:49,247 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 17:17:49,249 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 17:17:49,249 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 17:17:49,250 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 17:17:50,110 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 17:17:50,114 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:17:50,116 - matplotlib - DEBUG - interactive is False
2025-06-09 17:17:50,116 - matplotlib - DEBUG - platform is darwin
2025-06-09 17:17:50,163 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:17:50,167 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 17:17:50,378 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 17:17:52,970 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:17:53,132 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:17:53,132 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:17:53,133 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:17:53,133 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:17:53,134 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:17:53,134 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:17:53,134 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:17:53,135 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:17:53,262 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:17:53,266 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:53,305 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:53,311 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:53,355 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:17:53,485 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:17:53,486 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:17:53,486 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:17:53,487 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:17:53,487 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:17:53,487 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:17:53,488 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:17:53,489 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:17:53,677 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:17:53,934 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 17:17:53,969 - jarvis_app - INFO - Audio output test successful
2025-06-09 17:17:56,987 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:17:56,991 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:56,995 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:57,004 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:17:57,081 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:17:57,236 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:17:57,236 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:17:57,237 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:17:57,237 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:17:57,238 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:17:57,238 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:17:57,238 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:17:57,239 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:17:57,239 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:17:57,239 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:17:57,239 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:17:57,239 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:17:57,239 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:17:57,239 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:17:57,239 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:17:57,422 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:17:57,557 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 17:17:57,714 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 17:17:57,981 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 17:17:57,982 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 17:17:57,984 - jarvis_app - INFO - Starting Jarvis AI Assistant
2025-06-09 17:17:57,984 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 17:17:57,985 - jarvis_app - INFO - TTS worker thread started
2025-06-09 17:17:57,985 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 17:17:57,985 - jarvis_app - INFO - Running with audio output
2025-06-09 17:17:57,985 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 17:17:57,985 - jarvis_app - INFO - Starting Flask server on port 5001
2025-06-09 17:17:57,990 - jarvis_app - INFO - Audio output stream opened
2025-06-09 17:17:57,990 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 17:17:57,992 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 17:17:58,033 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5001
 * Running on http://192.168.1.86:5001
2025-06-09 17:17:58,033 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 17:17:58,147 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 17:17:58,586 - jarvis_app - INFO - TTS generated 59152 samples
2025-06-09 17:18:01,179 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:18:01,301 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 17:18:01,302 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 17:18:01,302 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 17:18:01,303 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:18:01] "GET /api/tts-test?id=bd9d20e7-b130-497b-9c86-d0f48b4658c0&vscodeBrowserReqId=1749514681297 HTTP/1.1" 200 -
2025-06-09 17:18:01,305 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 17:18:01,470 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 17:18:01,869 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 17:18:02,027 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 17:18:02,288 - jarvis_app - INFO - TTS generated 91168 samples
2025-06-09 17:18:06,332 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:48:39,860 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:48:44,469 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 17:48:44,470 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,471 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 17:48:44,472 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:48:44,473 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:48:44,474 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:48:44,475 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 17:48:44,736 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:48:44,737 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:48:44,738 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:48:44,738 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:48:44,739 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:48:44,739 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 17:48:44,891 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:48:44,892 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:48:44,893 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:48:44,895 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 17:48:45,128 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 17:48:45,130 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 17:48:45,133 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 17:48:45,135 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 17:48:45,135 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 17:48:45,137 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 17:48:45,137 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 17:48:45,137 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 17:48:45,999 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 17:48:46,003 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:48:46,005 - matplotlib - DEBUG - interactive is False
2025-06-09 17:48:46,005 - matplotlib - DEBUG - platform is darwin
2025-06-09 17:48:46,061 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:48:46,065 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 17:48:46,300 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 17:48:48,822 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:48:48,987 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:48:48,988 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:48:48,988 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:48:48,989 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:48:48,990 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:48:48,990 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:48:48,990 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:48:49,121 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:48:49,125 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:48:49,164 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:48:49,170 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:48:49,218 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:48:49,345 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:48:49,345 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:48:49,345 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:48:49,346 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:48:49,347 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:48:49,347 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:48:49,347 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:48:49,348 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:48:49,528 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:48:49,690 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 17:48:49,719 - jarvis_app - INFO - Audio output test successful
2025-06-09 17:48:53,068 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:48:53,072 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:48:53,076 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:48:53,085 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:48:53,162 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:48:53,313 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:48:53,313 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:48:53,313 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:48:53,314 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:48:53,314 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:48:53,315 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:48:53,315 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:48:53,315 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:48:53,316 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:48:53,316 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:48:53,316 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:48:53,316 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:48:53,316 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:48:53,497 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:48:53,633 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 17:48:53,798 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 17:48:54,066 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 17:48:54,066 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 17:48:54,068 - jarvis_app - INFO - Starting Jarvis AI Assistant
2025-06-09 17:48:54,069 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 17:48:54,069 - jarvis_app - INFO - TTS worker thread started
2025-06-09 17:48:54,069 - jarvis_app - INFO - Running with audio output
2025-06-09 17:48:54,069 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 17:48:54,069 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 17:48:54,069 - jarvis_app - INFO - Starting Flask server on port 5001
2025-06-09 17:49:16,291 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:49:16] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:49:16,294 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 17:49:16,294 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 17:49:16,294 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:49:16] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 17:49:16,294 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 17:49:16,294 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 17:49:16,295 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:49:16] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 17:49:19,159 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 17:49:22,900 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 17:49:22,901 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 17:49:22,902 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:49:22,903 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 17:49:22,904 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:22,905 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:22,906 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 17:49:23,153 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:23,154 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:23,155 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:49:23,155 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:23,156 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:23,157 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 17:49:23,336 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:23,337 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:23,338 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:23,340 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 17:49:23,629 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 17:49:23,632 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 17:49:23,635 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 17:49:23,637 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 17:49:23,637 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 17:49:23,639 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 17:49:23,639 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 17:49:23,639 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 17:49:24,505 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 17:49:24,510 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:49:24,511 - matplotlib - DEBUG - interactive is False
2025-06-09 17:49:24,511 - matplotlib - DEBUG - platform is darwin
2025-06-09 17:49:24,564 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:49:24,568 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 17:49:24,774 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 17:49:27,409 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:49:27,569 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:49:27,569 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:49:27,570 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:49:27,570 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:49:27,571 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:49:27,571 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:49:27,572 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:49:27,572 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:49:27,716 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:49:27,720 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:27,760 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:27,768 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:27,820 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:49:27,973 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:49:27,973 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:49:27,973 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:49:27,973 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:49:27,973 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:49:27,973 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:49:27,974 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:49:27,974 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:49:27,975 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:49:27,975 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:49:27,975 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:49:27,976 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:49:27,977 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:49:28,165 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:49:28,296 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 17:49:28,326 - jarvis_app - INFO - Audio output test successful
2025-06-09 17:49:31,355 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:49:31,359 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:31,362 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:31,369 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:31,449 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:49:31,629 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:49:31,629 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:49:31,629 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:49:31,630 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:49:31,630 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:49:31,631 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:49:31,631 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:49:31,631 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:49:31,632 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:49:31,633 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:49:31,817 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:49:31,957 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 17:49:32,136 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 17:49:32,426 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 17:49:32,427 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 17:49:32,429 - jarvis_app - INFO - Starting Jarvis AI Assistant
2025-06-09 17:49:32,429 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 17:49:32,429 - jarvis_app - INFO - TTS worker thread started
2025-06-09 17:49:32,429 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 17:49:32,429 - jarvis_app - INFO - Running with audio output
2025-06-09 17:49:32,429 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 17:49:32,430 - jarvis_app - INFO - Starting Flask server on port 5001
2025-06-09 17:49:45,603 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,235 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 17:49:49,236 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,237 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 17:49:49,238 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:49:49,239 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:49,240 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:49,241 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,530 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:49,531 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:49,532 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:49:49,532 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:49,533 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:49,533 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:49:49,710 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:49:49,711 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 17:49:49,712 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:49,713 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:49:49,715 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 17:49:50,012 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 17:49:50,015 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 17:49:50,017 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 17:49:50,020 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 17:49:50,020 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 17:49:50,023 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 17:49:50,023 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 17:49:50,023 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 17:49:51,084 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 17:49:51,088 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:49:51,089 - matplotlib - DEBUG - interactive is False
2025-06-09 17:49:51,089 - matplotlib - DEBUG - platform is darwin
2025-06-09 17:49:51,146 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:49:51,149 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 17:49:51,502 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 17:49:54,199 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:49:54,353 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:49:54,353 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:49:54,353 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:49:54,354 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:49:54,354 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:49:54,355 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:49:54,355 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:49:54,356 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:49:54,356 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:49:54,494 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:49:54,498 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:54,538 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:54,545 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:54,595 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:49:54,734 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:49:54,734 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:49:54,735 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:49:54,735 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:49:54,736 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:49:54,736 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:49:54,736 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:49:54,737 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:49:54,737 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:49:54,737 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:49:54,737 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:49:54,737 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:49:54,737 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:49:54,737 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:49:54,738 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:49:54,923 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:49:55,052 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 17:49:55,082 - jarvis_app - INFO - Audio output test successful
2025-06-09 17:49:58,212 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:49:58,216 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:58,220 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:58,228 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:49:58,309 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:49:58,473 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:49:58,473 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:49:58,474 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:49:58,474 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:49:58,475 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:49:58,475 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:49:58,475 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:49:58,476 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:49:58,477 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:49:58,668 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:49:58,807 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 17:49:59,025 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 17:49:59,336 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 17:49:59,337 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 17:49:59,339 - jarvis_app - INFO - Starting Jarvis AI Assistant
2025-06-09 17:49:59,339 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 17:49:59,340 - jarvis_app - INFO - TTS worker thread started
2025-06-09 17:49:59,340 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 17:49:59,340 - jarvis_app - INFO - Running with audio output
2025-06-09 17:49:59,340 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 17:49:59,340 - jarvis_app - INFO - Starting Flask server on port 5001
2025-06-09 17:50:23,739 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 17:50:27,536 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:50:27,536 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:50:27,536 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,536 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:50:27,536 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 17:50:27,536 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 17:50:27,537 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 17:50:27,538 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:50:27,539 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 17:50:27,540 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:50:27,541 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:50:27,542 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:50:27,843 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:50:27,844 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:50:27,844 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:50:27,845 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:50:27,846 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:50:27,846 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:50:28,062 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 17:50:28,063 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:50:28,064 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:50:28,066 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 17:50:28,367 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 17:50:28,370 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 17:50:28,373 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 17:50:28,375 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 17:50:28,375 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 17:50:28,377 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 17:50:28,377 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 17:50:28,377 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 17:50:29,338 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 17:50:29,342 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:50:29,344 - matplotlib - DEBUG - interactive is False
2025-06-09 17:50:29,344 - matplotlib - DEBUG - platform is darwin
2025-06-09 17:50:29,394 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:50:29,397 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 17:50:29,611 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 17:50:32,324 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:50:32,458 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:50:32,458 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:50:32,458 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:50:32,459 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:50:32,459 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:50:32,460 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:50:32,460 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:50:32,461 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:50:32,461 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:50:32,595 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:50:32,599 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:50:32,637 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:50:32,644 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:50:32,697 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:50:32,838 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:50:32,839 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:50:32,839 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:50:32,840 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:50:32,841 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:50:32,841 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:50:32,841 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:50:32,842 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:50:33,023 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:50:33,153 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 17:50:33,182 - jarvis_app - INFO - Audio output test successful
2025-06-09 17:50:36,205 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:50:36,210 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:50:36,214 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:50:36,226 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:50:36,303 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:50:36,465 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:50:36,465 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:50:36,466 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:50:36,466 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:50:36,467 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:50:36,467 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:50:36,467 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:50:36,468 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:50:36,469 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:50:36,653 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:50:36,785 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 17:50:36,949 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 17:50:37,245 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:50:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:50:37,250 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 17:50:37,251 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 17:50:37,253 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:50:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:50:37,253 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 17:50:37,253 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 17:50:37,253 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 17:50:37,254 - jarvis_app - INFO - TTS worker thread started
2025-06-09 17:50:37,254 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 17:50:37,254 - jarvis_app - INFO - Running with audio output
2025-06-09 17:50:37,254 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 17:50:37,254 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 17:50:37,254 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 17:50:37,260 - jarvis_app - INFO - Audio output stream opened
2025-06-09 17:50:37,260 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 17:50:37,261 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 17:50:37,302 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 17:50:37,303 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 17:50:37,453 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 17:50:37,911 - jarvis_app - INFO - TTS generated 59664 samples
2025-06-09 17:50:38,259 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:50:38] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 17:50:38,259 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:50:38] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 17:50:40,528 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:50:53,065 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:50:53,070 - jarvis_app - INFO - Audio file saved
2025-06-09 17:50:53,093 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:50:53,094 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:50:53] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:50:53,094 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:50:58,754 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:50:58,757 - jarvis_app - INFO - Audio file saved
2025-06-09 17:50:58,775 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:50:58,777 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:50:58] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:50:59,125 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:51:02,105 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:51:02,108 - jarvis_app - INFO - Audio file saved
2025-06-09 17:51:02,130 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:51:02,131 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:02] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:51:02,131 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:51:06,446 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:51:06,451 - jarvis_app - INFO - Audio file saved
2025-06-09 17:51:06,471 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:51:06,472 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:06] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:51:06,472 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:51:42,878 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:42] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:51:42,878 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 17:51:42,879 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 17:51:43,884 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:43] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 17:51:43,884 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:43] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 17:51:49,986 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:49] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:51:49,989 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:49] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:51:49,989 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 17:51:49,990 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 17:51:50,995 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:50] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 17:51:50,995 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:50] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 17:51:51,502 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:51:51,502 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryII6rNoAOLot1Gxo9
2025-06-09 17:51:51,504 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'blob' ('audio/wav')>)])
2025-06-09 17:51:51,505 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryII6rNoAOLot1Gxo9
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 18770
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:51:51,505 - jarvis_app - INFO - Received audio file: blob
2025-06-09 17:51:51,507 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:51:51,537 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:51:51,538 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:51] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:51:51,538 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:51:54,622 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:51:54,622 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryyWaDAUeXnMRqtAl2
2025-06-09 17:51:54,623 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'blob' ('audio/wav')>)])
2025-06-09 17:51:54,624 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryyWaDAUeXnMRqtAl2
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 18892
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:51:54,624 - jarvis_app - INFO - Received audio file: blob
2025-06-09 17:51:54,628 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:51:54,657 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:51:54,658 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:54] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:51:54,658 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:51:56,611 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:51:56,611 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarywIhrqJH6TXlA6QTx
2025-06-09 17:51:56,612 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'blob' ('audio/wav')>)])
2025-06-09 17:51:56,612 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarywIhrqJH6TXlA6QTx
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 22552
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:51:56,612 - jarvis_app - INFO - Received audio file: blob
2025-06-09 17:51:56,631 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:51:56,663 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:51:56,664 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:56] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:51:56,664 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:51:58,178 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:58] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:51:58,188 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 17:51:58,189 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 17:51:59,191 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:59] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 17:51:59,195 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:51:59] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 17:52:00,967 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:52:00,967 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryiDvaY2jPO7CmU9Tp
2025-06-09 17:52:00,969 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'blob' ('audio/wav')>)])
2025-06-09 17:52:00,969 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryiDvaY2jPO7CmU9Tp
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 23553
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:52:00,969 - jarvis_app - INFO - Received audio file: blob
2025-06-09 17:52:00,972 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:52:01,002 - jarvis_app - ERROR - Error transcribing audio: [Errno 2] No such file or directory: 'ffmpeg'
2025-06-09 17:52:01,003 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:52:01] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:52:01,003 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:57:50,850 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 17:57:54,876 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 17:57:54,877 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 17:57:54,878 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,879 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:57:54,880 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:57:54,881 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:57:54,883 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:57:55,203 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:57:55,204 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:57:55,205 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:57:55,205 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:57:55,206 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:57:55,206 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 17:57:55,349 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 17:57:55,350 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - stack []
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:57:55,351 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 17:57:55,353 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 17:57:55,605 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 17:57:55,609 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 17:57:55,613 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 17:57:55,615 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 17:57:55,615 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 17:57:55,617 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 17:57:55,618 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 17:57:55,618 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 17:57:56,402 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 17:57:56,407 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:57:56,408 - matplotlib - DEBUG - interactive is False
2025-06-09 17:57:56,408 - matplotlib - DEBUG - platform is darwin
2025-06-09 17:57:56,480 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 17:57:56,483 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 17:57:56,737 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 17:57:59,252 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:57:59,411 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:57:59,412 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:57:59,412 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:57:59,413 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:57:59,413 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:57:59,414 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:57:59,414 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:57:59,550 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:57:59,554 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:57:59,607 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:57:59,614 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:57:59,656 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:57:59,786 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:57:59,787 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:57:59,787 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:57:59,788 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:57:59,789 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:57:59,789 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:57:59,789 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:57:59,790 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:57:59,971 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:58:00,159 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 17:58:00,192 - jarvis_app - INFO - Audio output test successful
2025-06-09 17:58:03,462 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 17:58:03,467 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:58:03,470 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:58:03,478 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 17:58:03,565 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 17:58:03,735 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 17:58:03,735 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 17:58:03,736 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 17:58:03,736 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 17:58:03,737 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 17:58:03,737 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 17:58:03,737 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 17:58:03,738 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 17:58:03,739 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 17:58:03,926 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 17:58:04,066 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 17:58:04,235 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 17:58:04,533 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 17:58:04,534 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 17:58:04,537 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 17:58:04,537 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 17:58:04,538 - jarvis_app - INFO - TTS worker thread started
2025-06-09 17:58:04,538 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 17:58:04,538 - jarvis_app - INFO - Running with audio output
2025-06-09 17:58:04,538 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 17:58:04,538 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 17:58:41,779 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:58:41] "GET /api/status HTTP/1.1" 200 -
2025-06-09 17:58:41,780 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 17:58:41,781 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 17:58:42,786 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:58:42] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 17:58:42,786 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:58:42] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 17:58:44,878 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:58:44,879 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryKiSMydrfgdI1POpG
2025-06-09 17:58:44,881 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 17:58:44,881 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryKiSMydrfgdI1POpG
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 22600
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:58:44,881 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 17:58:44,884 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:58:52,745 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:58:52,746 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryuBmr01wLJ93R7loA
2025-06-09 17:58:52,749 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 17:58:52,749 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryuBmr01wLJ93R7loA
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 55059
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:58:52,749 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 17:58:52,752 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:59:05,647 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:59:05,647 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryCYJ1XGAgDODsyeE1
2025-06-09 17:59:05,648 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 17:59:05,648 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryCYJ1XGAgDODsyeE1
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 33127
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:59:05,648 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 17:59:05,650 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:59:06,396 - jarvis_app - ERROR - Error transcribing audio: cannot reshape tensor of 0 elements into shape [1, 0, 12, -1] because the unspecified dimension size -1 can be any value and is ambiguous
2025-06-09 17:59:06,397 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:59:06] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:59:06,397 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:59:06,761 - jarvis_app - ERROR - Error transcribing audio: cannot reshape tensor of 0 elements into shape [1, 0, 12, -1] because the unspecified dimension size -1 can be any value and is ambiguous
2025-06-09 17:59:06,761 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:59:06] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:59:06,761 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "I couldn't understand that. Please try again."}
2025-06-09 17:59:11,540 - jarvis_app - INFO - Transcription result: Hey Jarvis!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
2025-06-09 17:59:11,540 - jarvis_app - INFO - Sending prompt to OpenAI: 
2025-06-09 17:59:11,540 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'}
2025-06-09 17:59:11,540 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 17:59:13,209 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4f909a28-498a-4993-bf5c-436262306815', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ''}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 17:59:13,294 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 17:59:13,295 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 17:59:13,330 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1683b37c0>
2025-06-09 17:59:13,331 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167022dc0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 17:59:13,351 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167f66c50>
2025-06-09 17:59:13,351 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 17:59:13,352 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 17:59:13,352 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 17:59:13,352 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 17:59:13,352 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 17:59:14,721 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 00:59:14 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'343'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'348'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199986'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_c001e341be50aeae0b581415bdd2754f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=htp2aiooDIgjjHNGWdZAl6deYATHMijk1sjjnlIBquY-1749517154-1.0.1.1-LcQQe5ApumE1I0AXN1NrK65zoCcwJ4pLcdSN8hhgEljuaAvWCQpxJaNWXH9gKedhvau5AO8jtUaBTCga3OKiF6pYYdXAAFjV.Ma5w5WJEt8; path=/; expires=Tue, 10-Jun-25 01:29:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=7xbPB2Kw4Ae7ERGJIyYHs1uWZEt1N8xibyDPvu2yixI-1749517154717-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d4ecc08e071758-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 17:59:14,724 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 17:59:14,725 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 00:59:14 GMT'), ('content-type', 'text/event-stream; charset=utf-8'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'personal-tqzlct'), ('openai-processing-ms', '343'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '348'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199986'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '3ms'), ('x-request-id', 'req_c001e341be50aeae0b581415bdd2754f'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=htp2aiooDIgjjHNGWdZAl6deYATHMijk1sjjnlIBquY-1749517154-1.0.1.1-LcQQe5ApumE1I0AXN1NrK65zoCcwJ4pLcdSN8hhgEljuaAvWCQpxJaNWXH9gKedhvau5AO8jtUaBTCga3OKiF6pYYdXAAFjV.Ma5w5WJEt8; path=/; expires=Tue, 10-Jun-25 01:29:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=7xbPB2Kw4Ae7ERGJIyYHs1uWZEt1N8xibyDPvu2yixI-1749517154717-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d4ecc08e071758-SJC'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 17:59:14,725 - openai._base_client - DEBUG - request_id: req_c001e341be50aeae0b581415bdd2754f
2025-06-09 17:59:14,726 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 17:59:14,751 - jarvis_app - DEBUG - Sending message to client: 'Hello!'
2025-06-09 17:59:14,752 - jarvis_app - INFO - TTS processing phrase: 'Hello!'
2025-06-09 17:59:14,755 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Hello']
2025-06-09 17:59:14,879 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 17:59:14,886 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 17:59:14,886 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 17:59:14,886 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 17:59:14,886 - jarvis_app - INFO - Full response: Hello! How can I assist you today?
2025-06-09 17:59:14,886 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}
2025-06-09 17:59:14,887 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:59:14] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:59:14,929 - root - DEBUG - line: b'h_\xc9\x99_l_\xcb\x88o\xca\x8a\n'
2025-06-09 17:59:15,170 - jarvis_app - INFO - TTS generated 23824 samples
2025-06-09 17:59:16,163 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:59:16,163 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 17:59:16,167 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 17:59:16,336 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 17:59:16,623 - jarvis_app - INFO - TTS generated 36624 samples
2025-06-09 17:59:18,193 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:59:23,331 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:59:23,331 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarykQJ3MmoovSXDr78v
2025-06-09 17:59:23,334 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 17:59:23,334 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarykQJ3MmoovSXDr78v
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 105711
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:59:23,335 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 17:59:23,336 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:59:24,323 - jarvis_app - INFO - Transcription result: Hey Javis, can you tell me a little about Barcelona?
2025-06-09 17:59:24,324 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:59:24] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:59:24,324 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Javis, can you tell me a little about Barcelona?'}
2025-06-09 17:59:40,754 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 17:59:40,754 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarySmKBWuask6agOW9R
2025-06-09 17:59:40,756 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 17:59:40,756 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarySmKBWuask6agOW9R
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 93853
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 17:59:40,756 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 17:59:40,758 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 17:59:41,708 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about Barcelona?
2025-06-09 17:59:41,709 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about Barcelona
2025-06-09 17:59:41,709 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about Barcelona?'}
2025-06-09 17:59:41,709 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 17:59:41,710 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f0ec7556-28dd-4f92-b730-483118021ba8', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ', can you tell me a little about Barcelona'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 17:59:41,711 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 17:59:41,712 - httpcore.connection - DEBUG - close.started
2025-06-09 17:59:41,712 - httpcore.connection - DEBUG - close.complete
2025-06-09 17:59:41,712 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 17:59:41,729 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167f0bac0>
2025-06-09 17:59:41,729 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167022dc0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 17:59:41,745 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167f0bc70>
2025-06-09 17:59:41,745 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 17:59:41,745 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 17:59:41,745 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 17:59:41,745 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 17:59:41,745 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 17:59:42,520 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 00:59:42 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'427'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'432'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199977'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'6ms'), (b'x-request-id', b'req_b0c9b3b7e1098e16e2826e0154dfcc1e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d4ed71fdaa680c-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 17:59:42,521 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 17:59:42,522 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 00:59:42 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '427', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '432', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199977', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '6ms', 'x-request-id': 'req_b0c9b3b7e1098e16e2826e0154dfcc1e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d4ed71fdaa680c-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 17:59:42,522 - openai._base_client - DEBUG - request_id: req_b0c9b3b7e1098e16e2826e0154dfcc1e
2025-06-09 17:59:42,522 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 17:59:42,690 - jarvis_app - DEBUG - Sending message to client: 'Barcelona is the capital of Catalonia, Spain.'
2025-06-09 17:59:42,690 - jarvis_app - INFO - TTS processing phrase: 'Barcelona is the capital of Catalonia, Spain.'
2025-06-09 17:59:42,698 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Barcelona is the capital of Catalonia']
2025-06-09 17:59:42,886 - root - DEBUG - line: b'b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99 \xc9\xaa_z \xc3\xb0_\xc9\x99 k_\xcb\x88\xc3\xa6_p_\xc9\xaa_\xc9\xbe_\xc9\x99l \xca\x8c_v k_\xcb\x8c\xc3\xa6_\xc9\xbe_\xc9\x90_l_\xcb\x88o\xca\x8a_n_i\xc9\x99\n'
2025-06-09 17:59:42,887 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Spain']
2025-06-09 17:59:43,014 - jarvis_app - DEBUG - Sending message to client: 'It's known for its art and architecture, particularly works by Antoni Gaudí, such as the Sagrada Família and Park Güell.'
2025-06-09 17:59:43,018 - root - DEBUG - line: b's_p_\xcb\x88e\xc9\xaa_n\n'
2025-06-09 17:59:43,426 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 17:59:43,426 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 17:59:43,426 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 17:59:43,426 - jarvis_app - INFO - Full response: Barcelona is the capital of Catalonia, Spain. It's known for its art and architecture, particularly works by Antoni Gaudí, such as the Sagrada Família and Park Güell. The city boasts beautiful beaches, a vibrant cultural scene, and historic neighborhoods like the Gothic Quarter. It's also famous for its football club, FC Barcelona.
2025-06-09 17:59:43,427 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 17:59:43] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 17:59:43,449 - jarvis_app - INFO - TTS generated 64016 samples
2025-06-09 17:59:43,728 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "Barcelona is the capital of Catalonia, Spain. It's known for its art and architecture, particularly works by Antoni Gaudí, such as the Sagrada Família and Park Güell. The city boasts beautiful beaches, a vibrant cultural scene, and historic neighborhoods like the Gothic Quarter. It's also famous for its football club, FC Barcelona."}
2025-06-09 17:59:44,954 - jarvis_app - DEBUG - Sending message to client: 'The city boasts beautiful beaches, a vibrant cultural scene, and historic neighborhoods like the Gothic Quarter.'
2025-06-09 17:59:46,265 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:59:46,266 - jarvis_app - INFO - TTS processing phrase: 'It's known for its art and architecture, particularly works by Antoni Gaudí, such as the Sagrada Família and Park Güell.'
2025-06-09 17:59:46,274 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "It's known for its art and architecture"]
2025-06-09 17:59:46,453 - root - DEBUG - line: b'\xc9\xaa_t_s n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_t__ \xc3\xa6_n_d \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k_\xc9\xaa_t_\xcb\x8c\xc9\x9b_k_t\xca\x83_\xc9\x9a\n'
2025-06-09 17:59:46,453 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'particularly works by Antoni Gaudí']
2025-06-09 17:59:46,578 - root - DEBUG - line: b'p_\xc9\x9a_t_\xcb\x88\xc9\xaa_k_j_\xca\x8a_l_\xc9\x9a_l_i w_\xcb\x88\xc9\x9c\xcb\x90_k_s b_a\xc9\xaa \xc3\xa6_n_t_\xcb\x88o\xca\x8a_n_i \xc9\xa1_\xcb\x88\xc9\x94\xcb\x90_d_i\n'
2025-06-09 17:59:46,578 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'such as the Sagrada Família and Park Güell']
2025-06-09 17:59:46,703 - root - DEBUG - line: b's_\xcb\x88\xca\x8c_t\xca\x83 _\xc9\x90_z \xc3\xb0_\xc9\x99 s_\xc3\xa6_\xc9\xa1_\xc9\xb9_\xcb\x88\xc9\x91\xcb\x90_d_\xc9\x99 f_\xc3\xa6_m_\xcb\x88\xc9\xaa_l_i\xc9\x99__ \xc3\xa6_n_d p_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k \xc9\xa1_\xcb\x88u\xcb\x90_\xc9\x9b_l\n'
2025-06-09 17:59:47,447 - jarvis_app - INFO - TTS generated 135184 samples
2025-06-09 17:59:49,020 - jarvis_app - DEBUG - Sending message to client: 'It's also famous for its football club, FC Barcelona.'
2025-06-09 17:59:53,489 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:59:53,489 - jarvis_app - INFO - TTS processing phrase: 'The city boasts beautiful beaches, a vibrant cultural scene, and historic neighborhoods like the Gothic Quarter.'
2025-06-09 17:59:53,494 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The city boasts beautiful beaches']
2025-06-09 17:59:53,674 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\xaa_\xc9\xbe_i b_\xcb\x88o\xca\x8a_s_t_s b_j_\xcb\x88u\xcb\x90_\xc9\xbe_i_f_\xc9\x99l b_\xcb\x88i\xcb\x90_t\xca\x83_\xe1\xb5\xbb_z\n'
2025-06-09 17:59:53,674 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'a vibrant cultural scene']
2025-06-09 17:59:53,802 - root - DEBUG - line: b'\xc9\x90 v_\xcb\x88a\xc9\xaa_b_\xc9\xb9_\xc9\x99_n_t k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a_\xc9\xb9_\xc9\x99l s_\xcb\x88i\xcb\x90_n\n'
2025-06-09 17:59:53,802 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and historic neighborhoods like the Gothic Quarter']
2025-06-09 17:59:53,927 - root - DEBUG - line: b'\xc3\xa6_n_d h_\xc9\xaa_s_t_\xcb\x88\xc9\x94\xcb\x90_\xc9\xb9_\xc9\xaa_k n_\xcb\x88e\xc9\xaa_b_\xc9\x9a_h_\xcb\x8c\xca\x8a_d_z l_\xcb\x88a\xc9\xaa_k \xc3\xb0_\xc9\x99 \xc9\xa1_\xcb\x88\xc9\x91\xcb\x90_\xce\xb8_\xc9\xaa_k k_w_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_\xc9\xbe_\xc9\x9a\n'
2025-06-09 17:59:54,679 - jarvis_app - INFO - TTS generated 118544 samples
2025-06-09 17:59:59,965 - jarvis_app - INFO - TTS playback completed
2025-06-09 17:59:59,965 - jarvis_app - INFO - TTS processing phrase: 'It's also famous for its football club, FC Barcelona.'
2025-06-09 17:59:59,970 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "It's also famous for its football club"]
2025-06-09 18:00:00,153 - root - DEBUG - line: b'\xc9\xaa_t_s \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a f_\xcb\x88e\xc9\xaa_m_\xc9\x99_s f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s f_\xcb\x88\xca\x8a_t_b_\xc9\x94\xcb\x90_l k_l_\xcb\x88\xca\x8c_b\n'
2025-06-09 18:00:00,153 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'FC Barcelona']
2025-06-09 18:00:00,279 - root - DEBUG - line: b'\xcb\x8c\xc9\x9b_f_s_\xcb\x88i\xcb\x90 b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99\n'
2025-06-09 18:00:00,746 - jarvis_app - INFO - TTS generated 72208 samples
2025-06-09 18:00:03,931 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:00:49,500 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:00:49,500 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryWBgJZsZerjBLxfIw
2025-06-09 18:00:49,514 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:00:49,514 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryWBgJZsZerjBLxfIw
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 71765
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:00:49,514 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:00:49,516 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:00:50,250 - jarvis_app - INFO - Transcription result: 
2025-06-09 18:00:50,251 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:00:50] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:00:55,443 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:00:55,443 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryk1whhODXZJ1YmYPQ
2025-06-09 18:00:55,446 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:00:55,446 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryk1whhODXZJ1YmYPQ
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 125676
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:00:55,446 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:00:55,448 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:00:56,424 - jarvis_app - INFO - Transcription result: Hey, Javis, can you tell me about iOS 26?
2025-06-09 18:00:56,425 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:00:56] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:00:56,425 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javis, can you tell me about iOS 26?'}
2025-06-09 18:01:02,422 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:01:02,422 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryuBN1q4AsLoOSBN1G
2025-06-09 18:01:02,423 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:01:02,423 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryuBN1q4AsLoOSBN1G
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 95806
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:01:02,423 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:01:02,424 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:01:04,426 - jarvis_app - INFO - Transcription result: Hey, Javis, can you tell me about iOS 26?
2025-06-09 18:01:04,427 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:01:04] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:01:04,453 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javis, can you tell me about iOS 26?'}
2025-06-09 18:01:09,414 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:01:09,414 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary7TAqFEOBn43K7YEz
2025-06-09 18:01:09,417 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:01:09,417 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7TAqFEOBn43K7YEz
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 95095
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:01:09,417 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:01:09,419 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:01:10,394 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me about iOS 26?
2025-06-09 18:01:10,394 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me about iOS 26
2025-06-09 18:01:10,394 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 18:01:10,396 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0a8d43e8-9297-4e3c-b9ef-4f800ee30424', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ', can you tell me about iOS 26'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 18:01:10,397 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 18:01:10,397 - httpcore.connection - DEBUG - close.started
2025-06-09 18:01:10,397 - httpcore.connection - DEBUG - close.complete
2025-06-09 18:01:10,397 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 18:01:10,426 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167f0b6a0>
2025-06-09 18:01:10,426 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167022dc0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 18:01:10,444 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167f0a1a0>
2025-06-09 18:01:10,444 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 18:01:10,444 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 18:01:10,444 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 18:01:10,444 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 18:01:10,444 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 18:01:10,476 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me about iOS 26?'}
2025-06-09 18:01:11,191 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 01:01:11 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'367'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'373'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199980'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'6ms'), (b'x-request-id', b'req_65001917874580aeac635c3795ddf4ee'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d4ef9c594b3c35-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 18:01:11,192 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 18:01:11,192 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 01:01:11 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '367', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '373', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199980', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '6ms', 'x-request-id': 'req_65001917874580aeac635c3795ddf4ee', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d4ef9c594b3c35-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 18:01:11,193 - openai._base_client - DEBUG - request_id: req_65001917874580aeac635c3795ddf4ee
2025-06-09 18:01:11,193 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 18:01:11,516 - jarvis_app - DEBUG - Sending message to client: 'As of my last knowledge update in October 2023, iOS 26 has not been officially released or announced.'
2025-06-09 18:01:11,516 - jarvis_app - INFO - TTS processing phrase: 'As of my last knowledge update in October 2023, iOS 26 has not been officially released or announced.'
2025-06-09 18:01:11,522 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'As of my last knowledge update in October twenty twenty three']
2025-06-09 18:01:11,713 - root - DEBUG - line: b'\xc3\xa6_z \xca\x8c_v m_a\xc9\xaa l_\xcb\x88\xc3\xa6_s_t n_\xcb\x88\xc9\x91\xcb\x90_l_\xc9\xaa_d\xca\x92 \xcb\x88\xca\x8c_p_d_e\xc9\xaa_t \xc9\xaa_n \xc9\x91\xcb\x90_k_t_\xcb\x88o\xca\x8a_b_\xc9\x9a t_w_\xcb\x88\xc9\x9b_n_t_i t_w_\xcb\x88\xc9\x9b_n_t_i \xce\xb8_\xc9\xb9_\xcb\x88i\xcb\x90\n'
2025-06-09 18:01:11,713 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'iOS twenty six has not been officially released or announced']
2025-06-09 18:01:11,840 - jarvis_app - DEBUG - Sending message to client: 'Apple typically updates iOS annually, so any details about iOS 26 would be speculative.'
2025-06-09 18:01:11,841 - root - DEBUG - line: b'\xcb\x88a\xc9\xaa \xcb\x8co\xca\x8a_\xcb\x88\xc9\x9b_s t_w_\xcb\x88\xc9\x9b_n_t_i s_\xcb\x88\xc9\xaa_k_s h_\xc9\x99_z_n_\xc9\x91\xcb\x90_t b_\xcb\x8c\xc9\xaa_n \xc9\x99_f_\xcb\x88\xc9\xaa_\xca\x83_\xc9\x99l_i \xc9\xb9_\xe1\xb5\xbb_l_\xcb\x88i\xcb\x90_s_t__ \xc9\x94\xcb\x90_\xc9\xb9 \xc9\x90_n_\xcb\x88a\xca\x8a_n_s_t\n'
2025-06-09 18:01:12,047 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 18:01:12,047 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 18:01:12,048 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 18:01:12,048 - jarvis_app - INFO - Full response: As of my last knowledge update in October 2023, iOS 26 has not been officially released or announced. Apple typically updates iOS annually, so any details about iOS 26 would be speculative. For accurate information, check official Apple announcements or credible tech news sources.
2025-06-09 18:01:12,048 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:01:12] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:01:12,486 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'As of my last knowledge update in October 2023, iOS 26 has not been officially released or announced. Apple typically updates iOS annually, so any details about iOS 26 would be speculative. For accurate information, check official Apple announcements or credible tech news sources.'}
2025-06-09 18:01:12,596 - jarvis_app - INFO - TTS generated 135184 samples
2025-06-09 18:01:16,196 - jarvis_app - DEBUG - Sending message to client: 'For accurate information, check official Apple announcements or credible tech news sources.'
2025-06-09 18:01:18,636 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:01:18,637 - jarvis_app - INFO - TTS processing phrase: 'Apple typically updates iOS annually, so any details about iOS 26 would be speculative.'
2025-06-09 18:01:18,641 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Apple typically updates iOS annually']
2025-06-09 18:01:18,807 - root - DEBUG - line: b'\xcb\x88\xc3\xa6_p_\xc9\x99l t_\xcb\x88\xc9\xaa_p_\xc9\xaa_k_l_i_ \xcb\x88\xca\x8c_p_d_e\xc9\xaa_t_s \xcb\x88a\xc9\xaa \xcb\x8co\xca\x8a_\xcb\x88\xc9\x9b_s \xcb\x88\xc3\xa6_n_j_u\xcb\x90_\xc9\x99l_i\n'
2025-06-09 18:01:18,808 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'so any details about iOS twenty six would be speculative']
2025-06-09 18:01:18,946 - root - DEBUG - line: b's_\xcb\x8co\xca\x8a \xcb\x8c\xc9\x9b_n_i d_i\xcb\x90_t_\xcb\x88e\xc9\xaa_l_z \xc9\x90_b_\xcb\x8ca\xca\x8a_t \xcb\x88a\xc9\xaa \xcb\x8co\xca\x8a_\xcb\x88\xc9\x9b_s t_w_\xcb\x88\xc9\x9b_n_t_i s_\xcb\x88\xc9\xaa_k_s w_\xca\x8a_d b_i\xcb\x90 s_p_\xcb\x88\xc9\x9b_k_j_\xca\x8a_l_\xc9\x99_t_\xcb\x8c\xc9\xaa_v\n'
2025-06-09 18:01:19,704 - jarvis_app - INFO - TTS generated 127760 samples
2025-06-09 18:01:25,407 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:01:25,409 - jarvis_app - INFO - TTS processing phrase: 'For accurate information, check official Apple announcements or credible tech news sources.'
2025-06-09 18:01:25,411 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'For accurate information']
2025-06-09 18:01:25,584 - root - DEBUG - line: b'f_\xc9\x94\xcb\x90_\xc9\xb9 \xcb\x88\xc3\xa6_k_j_\xca\x8a_\xc9\xb9_\xc9\x99_t \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n\n'
2025-06-09 18:01:25,584 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'check official Apple announcements or credible tech news sources']
2025-06-09 18:01:25,722 - root - DEBUG - line: b't\xca\x83_\xcb\x88\xc9\x9b_k \xc9\x99_f_\xcb\x88\xc9\xaa_\xca\x83_\xc9\x99l \xcb\x88\xc3\xa6_p_\xc9\x99l \xc9\x90_n_\xcb\x88a\xca\x8a_n_s_m_\xc9\x99_n_t_s__ \xc9\x94\xcb\x90\xc9\xb9 k_\xc9\xb9_\xcb\x88\xc9\x9b_d_\xc9\xaa_b_\xc9\x99l t_\xcb\x88\xc9\x9b_k n_\xcb\x88u\xcb\x90_z s_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_s_\xe1\xb5\xbb_z\n'
2025-06-09 18:01:26,348 - jarvis_app - INFO - TTS generated 94992 samples
2025-06-09 18:01:30,567 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:02:39,580 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:39] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:02:39,581 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:02:39,582 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:02:40,583 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:40] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:02:40,587 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:40] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:02:44,010 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:44] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:02:44,012 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:02:44,013 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:02:44,021 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:44] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:02:45,016 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:45] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:02:45,018 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:45] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:02:50,962 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:02:50,962 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryC8J22LOUKKvsq6LT
2025-06-09 18:02:50,963 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:02:50,963 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryC8J22LOUKKvsq6LT
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 84882
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:02:50,963 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:02:50,966 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:02:52,084 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about bug?
2025-06-09 18:02:52,085 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about bug
2025-06-09 18:02:52,085 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about bug?'}
2025-06-09 18:02:52,085 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 18:02:52,086 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7fb0dece-300b-496f-bed9-214d63f7143f', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ', can you tell me a little about bug'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 18:02:52,087 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 18:02:52,088 - httpcore.connection - DEBUG - close.started
2025-06-09 18:02:52,088 - httpcore.connection - DEBUG - close.complete
2025-06-09 18:02:52,088 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 18:02:52,120 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167eda020>
2025-06-09 18:02:52,120 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167022dc0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 18:02:52,137 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167edb0d0>
2025-06-09 18:02:52,137 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 18:02:52,138 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 18:02:52,138 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 18:02:52,138 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 18:02:52,138 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 18:02:52,533 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 01:02:52 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'193'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'199'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199977'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'6ms'), (b'x-request-id', b'req_1b60791bca93ae443fd9b63ebba015e0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d4f217ef63cee9-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 18:02:52,533 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 18:02:52,534 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 01:02:52 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '193', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '199', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199977', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '6ms', 'x-request-id': 'req_1b60791bca93ae443fd9b63ebba015e0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d4f217ef63cee9-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 18:02:52,534 - openai._base_client - DEBUG - request_id: req_1b60791bca93ae443fd9b63ebba015e0
2025-06-09 18:02:52,534 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 18:02:52,864 - jarvis_app - DEBUG - Sending message to client: 'A bug typically refers to an error or flaw in software or hardware that causes it to malfunction or produce incorrect results.'
2025-06-09 18:02:52,864 - jarvis_app - INFO - TTS processing phrase: 'A bug typically refers to an error or flaw in software or hardware that causes it to malfunction or produce incorrect results.'
2025-06-09 18:02:52,872 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'A bug typically refers to an error or flaw in software or hardware that causes it to malfunction or produce incorrect results']
2025-06-09 18:02:53,080 - root - DEBUG - line: b'\xc9\x90 b_\xcb\x88\xca\x8c_\xc9\xa1 t_\xcb\x88\xc9\xaa_p_\xc9\xaa_k_l_i \xc9\xb9_\xe1\xb5\xbb_f_\xcb\x88\xc9\x9c\xcb\x90_z t_\xca\x8a \xc9\x90_n \xcb\x88\xc9\x9b_\xc9\xb9_\xc9\x9a__ \xc9\x94\xcb\x90\xc9\xb9 f_l_\xcb\x88\xc9\x94\xcb\x90 \xc9\xaa_n s_\xcb\x88\xc9\x94_f_t_w_\xc9\x9b\xc9\xb9__ \xc9\x94\xcb\x90\xc9\xb9 h_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_d_w_\xc9\x9b\xc9\xb9 \xc3\xb0_\xc3\xa6_t k_\xcb\x88\xc9\x94\xcb\x90_z_\xe1\xb5\xbb_z \xc9\xaa_t t_\xc9\x99 m_\xcb\x8c\xc3\xa6_l_f_\xcb\x88\xca\x8c_\xc5\x8b_k_\xca\x83_\xc9\x99_n__ \xc9\x94\xcb\x90\xc9\xb9 p_\xc9\xb9_\xc9\x99_d_\xcb\x88u\xcb\x90_s \xc9\xaa_\xc5\x8b_k_\xc9\x9a_\xc9\xb9_\xcb\x88\xc9\x9b_k_t \xc9\xb9_\xc9\xaa_z_\xcb\x88\xca\x8c_l_t_s\n'
2025-06-09 18:02:53,128 - jarvis_app - DEBUG - Sending message to client: 'In a broader sense, "bug" can also refer to insects or other small creatures.'
2025-06-09 18:02:53,311 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 18:02:53,311 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 18:02:53,311 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 18:02:53,312 - jarvis_app - INFO - Full response: A bug typically refers to an error or flaw in software or hardware that causes it to malfunction or produce incorrect results. In a broader sense, "bug" can also refer to insects or other small creatures. In computing, bugs can range from minor issues to critical vulnerabilities.
2025-06-09 18:02:53,312 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:02:53] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:02:53,855 - jarvis_app - INFO - TTS generated 137232 samples
2025-06-09 18:02:54,044 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'A bug typically refers to an error or flaw in software or hardware that causes it to malfunction or produce incorrect results. In a broader sense, "bug" can also refer to insects or other small creatures. In computing, bugs can range from minor issues to critical vulnerabilities.'}
2025-06-09 18:02:56,984 - jarvis_app - DEBUG - Sending message to client: 'In computing, bugs can range from minor issues to critical vulnerabilities.'
2025-06-09 18:02:59,988 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:02:59,988 - jarvis_app - INFO - TTS processing phrase: 'In a broader sense, "bug" can also refer to insects or other small creatures.'
2025-06-09 18:02:59,994 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'In a broader sense']
2025-06-09 18:03:00,173 - root - DEBUG - line: b'\xc9\xaa_n \xc9\x90 b_\xc9\xb9_\xcb\x88\xc9\x94\xcb\x90_d_\xc9\x9a s_\xcb\x88\xc9\x9b_n_s\n'
2025-06-09 18:03:00,174 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'bug can also refer to insects or other small creatures']
2025-06-09 18:03:00,306 - root - DEBUG - line: b'b_\xcb\x88\xca\x8c_\xc9\xa1 k_\xc3\xa6_n \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a \xc9\xb9_\xe1\xb5\xbb_f_\xcb\x88\xc9\x9c\xcb\x90 t_\xca\x8a \xcb\x88\xc9\xaa_n_s_\xc9\x9b_k_t_s__ \xc9\x94\xcb\x90_\xc9\xb9 \xcb\x88\xca\x8c_\xc3\xb0_\xc9\x9a s_m_\xcb\x88\xc9\x94\xcb\x90_l k_\xc9\xb9_\xcb\x88i\xcb\x90_t\xca\x83_\xc9\x9a_z\n'
2025-06-09 18:03:00,870 - jarvis_app - INFO - TTS generated 89616 samples
2025-06-09 18:03:04,842 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:03:04,844 - jarvis_app - INFO - TTS processing phrase: 'In computing, bugs can range from minor issues to critical vulnerabilities.'
2025-06-09 18:03:04,849 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'In computing']
2025-06-09 18:03:05,032 - root - DEBUG - line: b'\xc9\xaa_n k_\xc9\x99_m_p_j_\xcb\x88u\xcb\x90_\xc9\xbe_\xc9\xaa_\xc5\x8b\n'
2025-06-09 18:03:05,032 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'bugs can range from minor issues to critical vulnerabilities']
2025-06-09 18:03:05,170 - root - DEBUG - line: b'b_\xcb\x88\xca\x8c_\xc9\xa1_z k_\xc3\xa6_n \xc9\xb9_\xcb\x88e\xc9\xaa_n_d\xca\x92 f_\xc9\xb9_\xca\x8c_m m_\xcb\x88a\xc9\xaa_n_\xc9\x9a_\xc9\xb9 \xcb\x88\xc9\xaa_\xca\x83_u\xcb\x90_z t_\xc9\x99 k_\xc9\xb9_\xcb\x88\xc9\xaa_\xc9\xbe_\xc9\xaa_k_\xc9\x99l v_\xcb\x8c\xca\x8c_l_n_\xc9\x9a_\xc9\xb9_\xc9\x99_b_\xcb\x88\xc9\xaa_l_\xe1\xb5\xbb_\xc9\xbe_i_z\n'
2025-06-09 18:03:05,842 - jarvis_app - INFO - TTS generated 87824 samples
2025-06-09 18:03:09,737 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:04:18,781 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:04:18] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:04:18,782 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:04:18,794 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:04:19,796 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:04:19] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:04:19,797 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:04:19] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:04:25,525 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:04:25,526 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryc9uAkefvT20sCtvB
2025-06-09 18:04:25,527 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:04:25,527 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryc9uAkefvT20sCtvB
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 73780
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:04:25,528 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:04:25,534 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:04:26,609 - jarvis_app - INFO - Transcription result: Hey Javis, can you tell me about a bug?
2025-06-09 18:04:26,610 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:04:26] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:04:26,610 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Javis, can you tell me about a bug?'}
2025-06-09 18:04:31,403 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:04:31,403 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryvZBQkJ7HRvSGSP6q
2025-06-09 18:04:31,404 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:04:31,404 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryvZBQkJ7HRvSGSP6q
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 79410
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:04:31,404 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:04:31,405 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:04:32,357 - jarvis_app - INFO - Transcription result: Hey Jarrways can you tell me about a bug?
2025-06-09 18:04:32,358 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:04:32] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:04:32,628 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarrways can you tell me about a bug?'}
2025-06-09 18:04:37,956 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:04:37,957 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryN4V87h3VIcQRskA6
2025-06-09 18:04:37,959 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:04:37,959 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryN4V87h3VIcQRskA6
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 92526
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:04:37,959 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:04:37,962 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:04:38,963 - jarvis_app - INFO - Transcription result: Hey, Javis, can you tell me something about the bug?
2025-06-09 18:04:38,964 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:04:38] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:04:38,965 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javis, can you tell me something about the bug?'}
2025-06-09 18:04:45,022 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:04:45,023 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryeZ2wntBWQlULtpKq
2025-06-09 18:04:45,025 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:04:45,025 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryeZ2wntBWQlULtpKq
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 108076
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:04:45,025 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:04:45,027 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:04:46,032 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me something about the dog bug?
2025-06-09 18:04:46,033 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me something about the dog bug
2025-06-09 18:04:46,033 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 18:04:46,034 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-50018554-e5c5-4267-9b5a-b202dc4a327f', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ', can you tell me something about the dog bug'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 18:04:46,035 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 18:04:46,036 - httpcore.connection - DEBUG - close.started
2025-06-09 18:04:46,036 - httpcore.connection - DEBUG - close.complete
2025-06-09 18:04:46,036 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 18:04:46,068 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167eda1d0>
2025-06-09 18:04:46,068 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167022dc0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 18:04:46,085 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x167f0a590>
2025-06-09 18:04:46,086 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 18:04:46,086 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 18:04:46,086 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 18:04:46,086 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 18:04:46,086 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 18:04:46,275 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 01:04:46 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'147'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'149'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199976'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'7ms'), (b'x-request-id', b'req_7d6b8c549fe47989446f2ee0a05f3cf8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d4f4e018acfaec-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 18:04:46,277 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 18:04:46,277 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 01:04:46 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '147', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '149', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199976', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_7d6b8c549fe47989446f2ee0a05f3cf8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d4f4e018acfaec-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 18:04:46,277 - openai._base_client - DEBUG - request_id: req_7d6b8c549fe47989446f2ee0a05f3cf8
2025-06-09 18:04:46,278 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 18:04:46,613 - jarvis_app - INFO - TTS processing phrase: 'The "dog bug" often refers to the canine parvovirus, a highly contagious virus affecting dogs, especially puppies.'
2025-06-09 18:04:46,619 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The dog bug often refers to the canine parvovirus']
2025-06-09 18:04:46,812 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 18:04:46,812 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 18:04:46,812 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 18:04:46,812 - jarvis_app - INFO - Full response: The "dog bug" often refers to the canine parvovirus, a highly contagious virus affecting dogs, especially puppies. It causes severe gastrointestinal distress and can be fatal if untreated. Vaccination is key for prevention.
2025-06-09 18:04:46,813 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:04:46] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:04:46,820 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 d_\xcb\x88\xc9\x91\xcb\x90_\xc9\xa1 b_\xcb\x88\xca\x8c_\xc9\xa1 \xcb\x88\xc9\x94_f_\xc9\x99_n \xc9\xb9_\xe1\xb5\xbb_f_\xcb\x88\xc9\x9c\xcb\x90_z t_\xc9\x99 \xc3\xb0_\xc9\x99 k_\xcb\x88e\xc9\xaa_n_a\xc9\xaa_n p_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\x99_v_\xcb\x8ca\xc9\xaa_\xc9\xb9_\xc9\x99_s\n'
2025-06-09 18:04:46,820 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'a highly contagious virus affecting dogs']
2025-06-09 18:04:46,838 - jarvis_app - DEBUG - Sending message to client: 'The "dog bug" often refers to the canine parvovirus, a highly contagious virus affecting dogs, especially puppies.'
2025-06-09 18:04:46,891 - jarvis_app - DEBUG - Sending message to client: 'It causes severe gastrointestinal distress and can be fatal if untreated.'
2025-06-09 18:04:46,891 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me something about the dog bug?'}
2025-06-09 18:04:46,892 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'The "dog bug" often refers to the canine parvovirus, a highly contagious virus affecting dogs, especially puppies. It causes severe gastrointestinal distress and can be fatal if untreated. Vaccination is key for prevention.'}
2025-06-09 18:04:46,953 - root - DEBUG - line: b'\xc9\x90 h_\xcb\x88a\xc9\xaa_l_i k_\xc9\x99_n_t_\xcb\x88e\xc9\xaa_d\xca\x92_\xc9\x99_s v_\xcb\x88a\xc9\xaa_\xc9\xb9_\xc9\x99_s \xc9\x90_f_\xcb\x88\xc9\x9b_k_t_\xc9\xaa_\xc5\x8b d_\xcb\x88\xc9\x91\xcb\x90_\xc9\xa1_z\n'
2025-06-09 18:04:46,953 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'especially puppies']
2025-06-09 18:04:47,088 - root - DEBUG - line: b'\xc9\xaa_s_p_\xcb\x88\xc9\x9b_\xca\x83_\xc9\x99l_i p_\xcb\x88\xca\x8c_p_\xc9\xaa_z\n'
2025-06-09 18:04:47,943 - jarvis_app - INFO - TTS generated 131856 samples
2025-06-09 18:04:50,548 - jarvis_app - DEBUG - Sending message to client: 'Vaccination is key for prevention.'
2025-06-09 18:04:53,834 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:04:53,834 - jarvis_app - INFO - TTS processing phrase: 'It causes severe gastrointestinal distress and can be fatal if untreated.'
2025-06-09 18:04:53,836 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'It causes severe gastrointestinal distress and can be fatal if untreated']
2025-06-09 18:04:53,982 - root - DEBUG - line: b'\xc9\xaa_t k_\xcb\x88\xc9\x94\xcb\x90_z_\xe1\xb5\xbb_z s_\xe1\xb5\xbb_v_\xcb\x88\xc9\xaa\xc9\xb9 \xc9\xa1_\xcb\x8c\xc3\xa6_s_t_\xc9\xb9_o\xca\x8a_\xc9\xaa_n_t_\xcb\x88\xc9\x9b_s_t_\xc9\xaa_n_\xc9\x99l d_\xc9\xaa_s_t_\xc9\xb9_\xcb\x88\xc9\x9b_s__ \xc3\xa6_n_d k_\xc3\xa6_n b_i\xcb\x90 f_\xcb\x88e\xc9\xaa_\xc9\xbe_\xc9\x99l__ \xc9\xaa_f \xca\x8c_n_t_\xc9\xb9_\xcb\x88i\xcb\x90_\xc9\xbe_\xe1\xb5\xbb_d\n'
2025-06-09 18:04:54,605 - jarvis_app - INFO - TTS generated 84752 samples
2025-06-09 18:04:58,358 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:04:58,358 - jarvis_app - INFO - TTS processing phrase: 'Vaccination is key for prevention.'
2025-06-09 18:04:58,360 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Vaccination is key for prevention']
2025-06-09 18:04:58,527 - root - DEBUG - line: b'v_\xcb\x8c\xc3\xa6_k_s_\xe1\xb5\xbb_n_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n \xc9\xaa_z k_\xcb\x88i\xcb\x90 f_\xc9\x94\xcb\x90\xc9\xb9 p_\xc9\xb9_\xc9\xaa_v_\xcb\x88\xc9\x9b_n_\xca\x83_\xc9\x99_n\n'
2025-06-09 18:04:58,870 - jarvis_app - INFO - TTS generated 48400 samples
2025-06-09 18:05:00,974 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:06:29,509 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 18:06:33,930 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 18:06:33,930 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 18:06:33,931 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,932 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 18:06:33,933 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 18:06:33,934 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 18:06:33,935 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 18:06:33,936 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 18:06:33,936 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 18:06:33,936 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 18:06:33,936 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 18:06:33,936 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:06:33,936 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:06:33,937 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 18:06:34,247 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:06:34,248 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:06:34,248 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:06:34,249 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:06:34,250 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:06:34,250 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 18:06:34,444 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 18:06:34,445 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:06:34,446 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:06:34,448 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 18:06:34,808 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 18:06:34,810 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 18:06:34,815 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 18:06:34,818 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 18:06:34,818 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 18:06:34,820 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 18:06:34,820 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 18:06:34,820 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 18:06:35,865 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 18:06:35,869 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 18:06:35,870 - matplotlib - DEBUG - interactive is False
2025-06-09 18:06:35,871 - matplotlib - DEBUG - platform is darwin
2025-06-09 18:06:35,915 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 18:06:35,917 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 18:06:36,117 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 18:06:38,764 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:06:38,912 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:06:38,912 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:06:38,912 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:06:38,913 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:06:38,914 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:06:38,914 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:06:38,914 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:06:39,055 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 18:06:39,059 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:06:39,102 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:06:39,108 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:06:39,150 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:06:39,278 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:06:39,278 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:06:39,278 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:06:39,278 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:06:39,278 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:06:39,278 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:06:39,278 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:06:39,279 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:06:39,279 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:06:39,280 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:06:39,280 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:06:39,280 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:06:39,281 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:06:39,282 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 18:06:39,464 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 18:06:39,636 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 18:06:39,665 - jarvis_app - INFO - Audio output test successful
2025-06-09 18:06:42,942 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 18:06:42,946 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:06:42,951 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:06:42,961 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:06:43,031 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:06:43,182 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:06:43,182 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:06:43,182 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:06:43,183 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:06:43,183 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:06:43,184 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:06:43,184 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:06:43,184 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:06:43,185 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 18:06:43,366 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 18:06:43,502 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 18:06:43,663 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 18:06:43,937 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 18:06:43,937 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 18:06:43,941 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 18:06:43,941 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 18:06:43,941 - jarvis_app - INFO - TTS worker thread started
2025-06-09 18:06:43,941 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 18:06:43,941 - jarvis_app - INFO - Running with audio output
2025-06-09 18:06:43,941 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 18:06:43,941 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 18:07:45,903 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 18:07:49,813 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 18:07:49,813 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 18:07:49,814 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:07:49,815 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 18:07:49,816 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 18:07:49,817 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:07:49,818 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:07:49,819 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:07:50,110 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:07:50,111 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:07:50,112 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:07:50,112 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:07:50,113 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:07:50,113 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:07:50,278 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 18:07:50,279 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:07:50,280 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:07:50,282 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 18:07:50,613 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 18:07:50,617 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 18:07:50,622 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 18:07:50,626 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 18:07:50,626 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 18:07:50,628 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 18:07:50,628 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 18:07:50,628 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 18:07:51,560 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 18:07:51,565 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 18:07:51,567 - matplotlib - DEBUG - interactive is False
2025-06-09 18:07:51,567 - matplotlib - DEBUG - platform is darwin
2025-06-09 18:07:51,616 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 18:07:51,619 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 18:07:51,833 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 18:07:54,565 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:07:54,721 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:07:54,721 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:07:54,722 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:07:54,722 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:07:54,723 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:07:54,723 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:07:54,723 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:07:54,724 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:07:54,855 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 18:07:54,859 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:07:54,896 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:07:54,903 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:07:54,951 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:07:55,073 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:07:55,073 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:07:55,073 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:07:55,073 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:07:55,073 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:07:55,073 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:07:55,074 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:07:55,074 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:07:55,075 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:07:55,075 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:07:55,075 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:07:55,076 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:07:55,077 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 18:07:55,255 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 18:07:55,378 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 18:07:55,410 - jarvis_app - INFO - Audio output test successful
2025-06-09 18:07:58,459 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 18:07:58,463 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:07:58,467 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:07:58,475 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:07:58,548 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:07:58,700 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:07:58,700 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:07:58,701 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:07:58,701 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:07:58,702 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:07:58,703 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:07:58,703 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:07:58,703 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:07:58,704 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 18:07:58,882 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 18:07:59,014 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 18:07:59,162 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 18:07:59,432 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 18:07:59,432 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 18:07:59,435 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 18:07:59,435 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 18:07:59,435 - jarvis_app - INFO - TTS worker thread started
2025-06-09 18:07:59,435 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 18:07:59,435 - jarvis_app - INFO - Running with audio output
2025-06-09 18:07:59,435 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 18:07:59,435 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 18:07:59,442 - jarvis_app - INFO - Audio output stream opened
2025-06-09 18:07:59,442 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 18:07:59,443 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 18:07:59,482 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 18:07:59,482 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 18:07:59,597 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 18:07:59,970 - jarvis_app - INFO - TTS generated 61712 samples
2025-06-09 18:08:01,865 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:08:01,869 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:08:01,896 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:08:01,897 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:08:02,677 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:08:02,869 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:08:02] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:08:02,870 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:08:02] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:08:02,900 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:08:02] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:08:02,903 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:08:02] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:10:42,074 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 18:10:46,123 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 18:10:46,123 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,124 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,125 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 18:10:46,126 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:10:46,127 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:10:46,128 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:10:46,129 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 18:10:46,428 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:10:46,429 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:10:46,430 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,430 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:10:46,431 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:10:46,432 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 18:10:46,621 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 18:10:46,622 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack []
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:10:46,623 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 18:10:46,625 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 18:10:46,925 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 18:10:46,928 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 18:10:46,931 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 18:10:46,933 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 18:10:46,933 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 18:10:46,936 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 18:10:46,936 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 18:10:46,936 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 18:10:47,879 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 18:10:47,883 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 18:10:47,885 - matplotlib - DEBUG - interactive is False
2025-06-09 18:10:47,885 - matplotlib - DEBUG - platform is darwin
2025-06-09 18:10:47,938 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 18:10:47,941 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 18:10:48,166 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 18:10:50,888 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:10:51,051 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:10:51,051 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:10:51,052 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:10:51,052 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:10:51,053 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:10:51,053 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:10:51,053 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:10:51,054 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:10:51,193 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 18:10:51,197 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:10:51,241 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:10:51,248 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:10:51,318 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:10:51,465 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:10:51,465 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:10:51,466 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:10:51,466 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:10:51,467 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:10:51,467 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:10:51,468 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:10:51,468 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:10:51,469 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 18:10:51,653 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 18:10:51,779 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 18:10:51,809 - jarvis_app - INFO - Audio output test successful
2025-06-09 18:10:54,984 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 18:10:54,988 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:10:54,992 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:10:55,000 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 18:10:55,064 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 18:10:55,204 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 18:10:55,204 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 18:10:55,204 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 18:10:55,205 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 18:10:55,206 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 18:10:55,206 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 18:10:55,206 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 18:10:55,207 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 18:10:55,385 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 18:10:55,520 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 18:10:55,688 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 18:10:55,970 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 18:10:55,971 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 18:10:55,974 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 18:10:55,974 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 18:10:55,974 - jarvis_app - INFO - TTS worker thread started
2025-06-09 18:10:55,974 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 18:10:55,974 - jarvis_app - INFO - Running with audio output
2025-06-09 18:10:55,974 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 18:10:55,974 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 18:10:55,980 - jarvis_app - INFO - Audio output stream opened
2025-06-09 18:10:55,980 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 18:10:55,981 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 18:10:56,021 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 18:10:56,021 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 18:10:56,138 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 18:10:56,515 - jarvis_app - INFO - TTS generated 59920 samples
2025-06-09 18:10:57,515 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:10:57,519 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:10:57,539 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:10:57,540 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:10:58,523 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:10:58] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:10:58,524 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:10:58] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:10:58,542 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:10:58] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:10:58,546 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:10:58] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:10:59,330 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:17:12,680 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:17:12] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:17:12,682 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:17:12,682 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:17:12,683 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:17:12] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:17:12,897 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:17:12] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:17:12,898 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:17:12,898 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:17:13,686 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:17:13] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:17:13,688 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:17:13] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:17:13,903 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:17:13] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:17:13,904 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:17:13] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:18:06,910 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 18:18:06,910 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 18:18:06,910 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 18:18:06,910 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 18:18:06,910 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 18:18:06,911 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:18:06] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 18:18:06,915 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 18:18:07,105 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 18:18:07,527 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 18:18:07,680 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 18:18:07,943 - jarvis_app - INFO - TTS generated 93984 samples
2025-06-09 18:18:12,289 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:18:16,946 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:18:16,947 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryddqhxr7EjABptHwg
2025-06-09 18:18:16,952 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:18:16,952 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryddqhxr7EjABptHwg
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 122291
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:18:16,952 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:18:16,954 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:18:18,602 - jarvis_app - INFO - Transcription result: Hey Jarvis, I can hear you. Can you tell me a little about Tom Cruise?
2025-06-09 18:18:18,602 - jarvis_app - INFO - Sending prompt to OpenAI: , I can hear you. Can you tell me a little about Tom Cruise
2025-06-09 18:18:18,602 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 18:18:18,956 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, I can hear you. Can you tell me a little about Tom Cruise?'}
2025-06-09 18:18:19,064 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4eb6e685-96ab-4d7c-a3d4-9881854531af', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ', I can hear you. Can you tell me a little about Tom Cruise'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 18:18:19,126 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 18:18:19,126 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 18:18:19,158 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166d38910>
2025-06-09 18:18:19,159 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x165b972c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 18:18:19,174 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166d389a0>
2025-06-09 18:18:19,174 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 18:18:19,175 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 18:18:19,175 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 18:18:19,175 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 18:18:19,175 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 18:18:20,130 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 01:18:20 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'544'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'552'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199973'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'8ms'), (b'x-request-id', b'req_7625b2cbe4a5397fe8bd539d29b84c09'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=n89SRgaMCv61udQKebm33Nuex8UVxi6d8xjpZDsqPBA-1749518300-1.0.1.1-PcYqJuX8U_q6835Iffk2LHIW1rAHgfbTuKDrrzrqZF81404xYMGwZos0l8I34XPCcFmOXEODQUvlP21N.rh6WIwwGit1mtWtv9kIsL0kF8E; path=/; expires=Tue, 10-Jun-25 01:48:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=58BQuFhX7wELpZ9wHatriOHq9WtGFckDA55UcvOeq7c-1749518300027-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d508b9edb0fb65-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 18:18:20,132 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 18:18:20,133 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 01:18:20 GMT'), ('content-type', 'text/event-stream; charset=utf-8'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'personal-tqzlct'), ('openai-processing-ms', '544'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '552'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199973'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '8ms'), ('x-request-id', 'req_7625b2cbe4a5397fe8bd539d29b84c09'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=n89SRgaMCv61udQKebm33Nuex8UVxi6d8xjpZDsqPBA-1749518300-1.0.1.1-PcYqJuX8U_q6835Iffk2LHIW1rAHgfbTuKDrrzrqZF81404xYMGwZos0l8I34XPCcFmOXEODQUvlP21N.rh6WIwwGit1mtWtv9kIsL0kF8E; path=/; expires=Tue, 10-Jun-25 01:48:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=58BQuFhX7wELpZ9wHatriOHq9WtGFckDA55UcvOeq7c-1749518300027-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d508b9edb0fb65-SJC'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 18:18:20,133 - openai._base_client - DEBUG - request_id: req_7625b2cbe4a5397fe8bd539d29b84c09
2025-06-09 18:18:20,133 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 18:18:21,309 - jarvis_app - DEBUG - Sending message to client: 'Tom Cruise is an American actor and producer, known for his roles in blockbuster films like "Top Gun," "Mission: Impossible," and "Jerry Maguire." He was born on July 3, 1962, in Syracuse, New York.'
2025-06-09 18:18:21,309 - jarvis_app - INFO - TTS processing phrase: 'Tom Cruise is an American actor and producer, known for his roles in blockbuster films like "Top Gun," "Mission: Impossible," and "Jerry Maguire." He was born on July 3, 1962, in Syracuse, New York.'
2025-06-09 18:18:21,317 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Tom Cruise is an American actor and producer']
2025-06-09 18:18:21,487 - root - DEBUG - line: b't_\xcb\x88\xc9\x91\xcb\x90_m k_\xc9\xb9_\xcb\x88u\xcb\x90_z \xc9\xaa_z \xc9\x90_n \xc9\x90_m_\xcb\x88\xc9\x9b_\xc9\xb9_\xc9\xaa_k_\xc9\x99_n \xcb\x88\xc3\xa6_k_t_\xc9\x9a__ \xc3\xa6_n_d p_\xc9\xb9_\xc9\x99_d_\xcb\x88u\xcb\x90_s_\xc9\x9a\n'
2025-06-09 18:18:21,488 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'known for his roles in blockbuster films like Top Gun']
2025-06-09 18:18:21,618 - root - DEBUG - line: b'n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90\xc9\xb9 h_\xc9\xaa_z \xc9\xb9_\xcb\x88o\xca\x8a_l_z \xc9\xaa_n b_l_\xcb\x88\xc9\x91\xcb\x90_k_b_\xca\x8c_s_t_\xc9\x9a f_\xcb\x88\xc9\xaa_l_m_z l_\xcb\x88a\xc9\xaa_k t_\xcb\x88\xc9\x91\xcb\x90_p \xc9\xa1_\xcb\x88\xca\x8c_n\n'
2025-06-09 18:18:21,618 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Mission']
2025-06-09 18:18:21,741 - root - DEBUG - line: b'm_\xcb\x88\xc9\xaa_\xca\x83_\xc9\x99_n\n'
2025-06-09 18:18:21,741 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Impossible']
2025-06-09 18:18:21,873 - root - DEBUG - line: b'\xc9\xaa_m_p_\xcb\x88\xc9\x91\xcb\x90_s_\xe1\xb5\xbb_b_\xc9\x99l\n'
2025-06-09 18:18:21,873 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and Jerry Maguire']
2025-06-09 18:18:21,999 - root - DEBUG - line: b'\xc3\xa6_n_d d\xca\x92_\xcb\x88\xc9\x9b_\xc9\xb9_i m_\xc9\x99_\xc9\xa1_w_\xcb\x88a\xc9\xaa\xc9\x9a\n'
2025-06-09 18:18:22,513 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 18:18:22,513 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 18:18:22,513 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 18:18:22,514 - jarvis_app - INFO - Full response: Tom Cruise is an American actor and producer, known for his roles in blockbuster films like "Top Gun," "Mission: Impossible," and "Jerry Maguire." He was born on July 3, 1962, in Syracuse, New York. Cruise is notable for performing many of his own stunts and has received multiple awards, including three Golden Globes and three Academy Award nominations. He’s also known for his involvement in the Church of Scientology.
2025-06-09 18:18:22,514 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:18:22] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:18:22,902 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'He was born on July three']
2025-06-09 18:18:22,966 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Tom Cruise is an American actor and producer, known for his roles in blockbuster films like "Top Gun," "Mission: Impossible," and "Jerry Maguire." He was born on July 3, 1962, in Syracuse, New York. Cruise is notable for performing many of his own stunts and has received multiple awards, including three Golden Globes and three Academy Award nominations. He’s also known for his involvement in the Church of Scientology.'}
2025-06-09 18:18:23,070 - root - DEBUG - line: b'h_i\xcb\x90 w_\xca\x8c_z b_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_n \xcb\x8c\xc9\x94_n d\xca\x92_u\xcb\x90_l_\xcb\x88a\xc9\xaa \xce\xb8_\xc9\xb9_\xcb\x88i\xcb\x90\n'
2025-06-09 18:18:23,070 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'nineteen sixty two']
2025-06-09 18:18:23,182 - jarvis_app - DEBUG - Sending message to client: 'Cruise is notable for performing many of his own stunts and has received multiple awards, including three Golden Globes and three Academy Award nominations.'
2025-06-09 18:18:23,198 - root - DEBUG - line: b'n_\xcb\x88a\xc9\xaa_n_t_i\xcb\x90_n s_\xcb\x88\xc9\xaa_k_s_t_i t_\xcb\x88u\xcb\x90\n'
2025-06-09 18:18:23,198 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'in Syracuse']
2025-06-09 18:18:23,323 - root - DEBUG - line: b'\xc9\xaa_n s_\xcb\x88\xc9\xaa_\xc9\xb9_\xc9\x90_k_j_\xcb\x8cu\xcb\x90_s\n'
2025-06-09 18:18:23,323 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'New York']
2025-06-09 18:18:23,448 - root - DEBUG - line: b'n_\xcb\x88u\xcb\x90 j_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_k\n'
2025-06-09 18:18:24,051 - jarvis_app - INFO - TTS generated 253216 samples
2025-06-09 18:18:35,643 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:18:35,643 - jarvis_app - INFO - TTS processing phrase: 'Cruise is notable for performing many of his own stunts and has received multiple awards, including three Golden Globes and three Academy Award nominations.'
2025-06-09 18:18:35,650 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Cruise is notable for performing many of his own stunts and has received multiple awards']
2025-06-09 18:18:35,816 - root - DEBUG - line: b'k_\xc9\xb9_\xcb\x88u\xcb\x90_z \xc9\xaa_z n_\xcb\x88o\xca\x8a_\xc9\xbe_\xc9\x99_b_\xc9\x99l f_\xc9\x94\xcb\x90\xc9\xb9 p_\xc9\x9a_f_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_m_\xc9\xaa_\xc5\x8b m_\xcb\x88\xc9\x9b_n_\xc9\xaa__\xc9\x99_v h_\xc9\xaa_z \xcb\x88o\xca\x8a_n s_t_\xcb\x88\xca\x8c_n_t_s__ \xc3\xa6_n_d h_\xc9\x90_z \xc9\xb9_\xe1\xb5\xbb_s_\xcb\x88i\xcb\x90_v_d m_\xcb\x8c\xca\x8c_l_t_\xc9\xaa_p_\xc9\x99l \xc9\x90_w_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_d_z\n'
2025-06-09 18:18:35,816 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'including three Golden Globes and three Academy Award nominations']
2025-06-09 18:18:35,955 - root - DEBUG - line: b'\xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d_\xc9\xaa_\xc5\x8b \xce\xb8_\xc9\xb9_\xcb\x88i\xcb\x90 \xc9\xa1_\xcb\x88o\xca\x8a_l_d_\xc9\x99_n \xc9\xa1_l_\xcb\x88o\xca\x8a_b_z__ \xc3\xa6_n_d \xce\xb8_\xc9\xb9_\xcb\x88i\xcb\x90_ \xc9\x90_k_\xcb\x88\xc3\xa6_d_\xc9\x99_m_i_ \xc9\x90_w_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_d n_\xcb\x8c\xc9\x91\xcb\x90_m_\xe1\xb5\xbb_n_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n_z\n'
2025-06-09 18:18:37,031 - jarvis_app - INFO - TTS generated 164368 samples
2025-06-09 18:18:44,576 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:18:44,577 - jarvis_app - INFO - TTS processing phrase: 'He’s also known for his involvement in the Church of Scientology.'
2025-06-09 18:18:44,580 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'He’s also known for his involvement in the Church of Scientology']
2025-06-09 18:18:44,784 - root - DEBUG - line: b'h_i\xcb\x90_z \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90\xc9\xb9 h_\xc9\xaa_z \xc9\xaa_n_v_\xcb\x88\xc9\x91\xcb\x90_l_v_m_\xc9\x99_n_t \xc9\xaa_n_\xc3\xb0_\xc9\x99 t\xca\x83_\xcb\x88\xc9\x9c\xcb\x90_t\xca\x83 \xca\x8c_v s_a\xc9\xaa\xc9\x99_n_t_\xcb\x88\xc9\x91\xcb\x90_l_\xc9\x99_d\xca\x92_i\n'
2025-06-09 18:18:45,246 - jarvis_app - INFO - TTS generated 68112 samples
2025-06-09 18:18:48,430 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:18:48,492 - jarvis_app - DEBUG - Sending message to client: 'He’s also known for his involvement in the Church of Scientology.'
2025-06-09 18:49:06,938 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:49:06] "GET /api/status HTTP/1.1" 200 -
2025-06-09 18:49:06,943 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 18:49:06,943 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 18:49:07,946 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:49:07] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 18:49:07,948 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:49:07] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 18:49:10,801 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:49:10,801 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryARftk26lVYunhhsF
2025-06-09 18:49:10,803 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:49:10,803 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryARftk26lVYunhhsF
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 21544
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:49:10,803 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:49:10,805 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:49:11,902 - jarvis_app - INFO - Transcription result: new Jarvis
2025-06-09 18:49:11,903 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:49:11] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:49:11,903 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'new Jarvis'}
2025-06-09 18:49:17,141 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:49:17,141 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryJ1ifHRwkCAkMaCbY
2025-06-09 18:49:17,144 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:49:17,144 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryJ1ifHRwkCAkMaCbY
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 33481
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:49:17,144 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:49:17,147 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:49:18,074 - jarvis_app - INFO - Transcription result: Hey Jarvis.
2025-06-09 18:49:18,074 - jarvis_app - INFO - Sending prompt to OpenAI: 
2025-06-09 18:49:18,074 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis.'}
2025-06-09 18:49:18,076 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-01c2a6f3-356f-40a6-b169-88b05a1aae0c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ''}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 18:49:18,076 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 18:49:18,077 - httpcore.connection - DEBUG - close.started
2025-06-09 18:49:18,077 - httpcore.connection - DEBUG - close.complete
2025-06-09 18:49:18,077 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 18:49:18,107 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166d3a260>
2025-06-09 18:49:18,107 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x165b972c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 18:49:18,123 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166d39240>
2025-06-09 18:49:18,123 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 18:49:18,124 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 18:49:18,124 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 18:49:18,124 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 18:49:18,124 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 18:49:18,712 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 18:49:18,869 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 01:49:18 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'253'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'337'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199987'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'3ms'), (b'x-request-id', b'req_7e3f62e77a90d140c33138f3f513fc9c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=gCt8BPFQIQt5OxhxSogPa36Jn8lj0NJM02Wbws0PNvI-1749520158-1.0.1.1-QvGUTDBR3nDbUbMuHSKoz2wDofsGkLh1CRkjnIRazH3T0OPOYqEJzsV5IRGgArzrk4A5pB.Ma.WDygdSNxuYwl2z2CHmGAuwS8Q.J0VCgGk; path=/; expires=Tue, 10-Jun-25 02:19:18 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5361c4d9c1761-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 18:49:18,871 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 18:49:18,871 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 01:49:18 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '253', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '337', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199987', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '3ms', 'x-request-id': 'req_7e3f62e77a90d140c33138f3f513fc9c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=gCt8BPFQIQt5OxhxSogPa36Jn8lj0NJM02Wbws0PNvI-1749520158-1.0.1.1-QvGUTDBR3nDbUbMuHSKoz2wDofsGkLh1CRkjnIRazH3T0OPOYqEJzsV5IRGgArzrk4A5pB.Ma.WDygdSNxuYwl2z2CHmGAuwS8Q.J0VCgGk; path=/; expires=Tue, 10-Jun-25 02:19:18 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5361c4d9c1761-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 18:49:18,871 - openai._base_client - DEBUG - request_id: req_7e3f62e77a90d140c33138f3f513fc9c
2025-06-09 18:49:18,872 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 18:49:18,877 - jarvis_app - INFO - TTS processing phrase: 'Hello!'
2025-06-09 18:49:18,880 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Hello']
2025-06-09 18:49:18,935 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 18:49:18,936 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 18:49:18,936 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 18:49:18,936 - jarvis_app - INFO - Full response: Hello! How can I assist you today?
2025-06-09 18:49:18,937 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:49:18] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:49:18,937 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}
2025-06-09 18:49:18,989 - jarvis_app - DEBUG - Sending message to client: 'Hello!'
2025-06-09 18:49:19,065 - root - DEBUG - line: b'h_\xc9\x99_l_\xcb\x88o\xca\x8a\n'
2025-06-09 18:49:19,294 - jarvis_app - INFO - TTS generated 23056 samples
2025-06-09 18:49:20,439 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:49:20,440 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 18:49:20,445 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 18:49:20,613 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 18:49:20,915 - jarvis_app - INFO - TTS generated 38416 samples
2025-06-09 18:49:22,747 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:49:22,765 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 18:49:32,012 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:49:32,013 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryL0UNWjes6xg1dKPx
2025-06-09 18:49:32,015 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:49:32,016 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryL0UNWjes6xg1dKPx
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 120139
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:49:32,016 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:49:32,019 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:49:33,075 - jarvis_app - INFO - Transcription result: hey Javis tell me something about LA
2025-06-09 18:49:33,076 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:49:33] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:49:33,076 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'hey Javis tell me something about LA'}
2025-06-09 18:49:37,586 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 18:49:37,586 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryWCQAeiopMC3ThEOt
2025-06-09 18:49:37,588 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 18:49:37,588 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryWCQAeiopMC3ThEOt
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 77759
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 18:49:37,588 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 18:49:37,591 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 18:49:38,605 - jarvis_app - INFO - Transcription result: Hey Jarvis tell me something about LA
2025-06-09 18:49:38,606 - jarvis_app - INFO - Sending prompt to OpenAI: tell me something about LA
2025-06-09 18:49:38,606 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis tell me something about LA'}
2025-06-09 18:49:38,607 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b70610ca-3646-4f24-8691-1512aa728a51', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': 'tell me something about LA'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 18:49:38,608 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 18:49:38,609 - httpcore.connection - DEBUG - close.started
2025-06-09 18:49:38,609 - httpcore.connection - DEBUG - close.complete
2025-06-09 18:49:38,609 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 18:49:38,624 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166d3a0b0>
2025-06-09 18:49:38,624 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x165b972c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 18:49:38,642 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166d38460>
2025-06-09 18:49:38,642 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 18:49:38,642 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 18:49:38,642 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 18:49:38,642 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 18:49:38,642 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 18:49:38,885 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 18:49:40,600 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 01:49:40 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'317'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'322'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199981'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_a468283c5e93b797a143485d4a2618f6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5369c8d04f963-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 18:49:40,602 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 18:49:40,602 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 01:49:40 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '317', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '322', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199981', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_a468283c5e93b797a143485d4a2618f6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5369c8d04f963-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 18:49:40,602 - openai._base_client - DEBUG - request_id: req_a468283c5e93b797a143485d4a2618f6
2025-06-09 18:49:40,602 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 18:49:41,044 - jarvis_app - INFO - TTS processing phrase: 'Los Angeles, known as LA, is the largest city in California and the second-largest in the U.S.'
2025-06-09 18:49:41,044 - jarvis_app - DEBUG - Sending message to client: 'Los Angeles, known as LA, is the largest city in California and the second-largest in the U.S.'
2025-06-09 18:49:41,050 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Los Angeles']
2025-06-09 18:49:41,224 - root - DEBUG - line: b'l_\xcb\x8c\xc9\x91\xcb\x90_s \xcb\x88\xc3\xa6_n_d\xca\x92_\xc9\x99_l_\xc9\xaa_s\n'
2025-06-09 18:49:41,224 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'known as LA']
2025-06-09 18:49:41,368 - root - DEBUG - line: b'n_\xcb\x88o\xca\x8a_n \xc3\xa6_z \xcb\x8c\xc9\x9b_l_\xcb\x88e\xc9\xaa\n'
2025-06-09 18:49:41,368 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'is the largest city in California and the second largest in the U']
2025-06-09 18:49:41,497 - root - DEBUG - line: b'\xc9\xaa_z \xc3\xb0_\xc9\x99 l_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_d\xca\x92_\xc9\xaa_s_t s_\xcb\x88\xc9\xaa_\xc9\xbe_i_ \xc9\xaa_n k_\xcb\x8c\xc3\xa6_l_\xc9\xaa_f_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_n_i\xc9\x99__ \xc3\xa6_n_d \xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\x9b_k_\xc9\x99_n_d l_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_d\xca\x92_\xc9\xaa_s_t \xc9\xaa_n_\xc3\xb0_\xc9\x99 j_\xcb\x88u\xcb\x90\n'
2025-06-09 18:49:41,498 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'S']
2025-06-09 18:49:41,540 - jarvis_app - DEBUG - Sending message to client: 'It's famous for its entertainment industry, particularly Hollywood, beautiful beaches, and diverse culture.'
2025-06-09 18:49:41,622 - root - DEBUG - line: b'\xcb\x88\xc9\x9b_s\n'
2025-06-09 18:49:41,746 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 18:49:41,746 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 18:49:41,746 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 18:49:41,746 - jarvis_app - INFO - Full response: Los Angeles, known as LA, is the largest city in California and the second-largest in the U.S. It's famous for its entertainment industry, particularly Hollywood, beautiful beaches, and diverse culture. The city's attractions include the Griffith Observatory, Getty Center, and iconic landmarks like the Hollywood Sign.
2025-06-09 18:49:41,746 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "Los Angeles, known as LA, is the largest city in California and the second-largest in the U.S. It's famous for its entertainment industry, particularly Hollywood, beautiful beaches, and diverse culture. The city's attractions include the Griffith Observatory, Getty Center, and iconic landmarks like the Hollywood Sign."}
2025-06-09 18:49:41,747 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 18:49:41] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 18:49:42,346 - jarvis_app - INFO - TTS generated 118288 samples
2025-06-09 18:49:47,800 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:49:47,800 - jarvis_app - INFO - TTS processing phrase: 'It's famous for its entertainment industry, particularly Hollywood, beautiful beaches, and diverse culture.'
2025-06-09 18:49:47,810 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "It's famous for its entertainment industry"]
2025-06-09 18:49:47,966 - root - DEBUG - line: b'\xc9\xaa_t_s f_\xcb\x88e\xc9\xaa_m_\xc9\x99_s f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s \xcb\x8c\xc9\x9b_n_t_\xc9\x9a_t_\xcb\x88e\xc9\xaa_n_m_\xc9\x99_n_t \xcb\x88\xc9\xaa_n_d_\xca\x8c_s_t_\xc9\xb9_i\n'
2025-06-09 18:49:47,966 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'particularly Hollywood']
2025-06-09 18:49:48,095 - root - DEBUG - line: b'p_\xc9\x9a_t_\xcb\x88\xc9\xaa_k_j_\xca\x8a_l_\xc9\x9a_l_i h_\xcb\x88\xc9\x91\xcb\x90_l_i_w_\xcb\x8c\xca\x8a_d\n'
2025-06-09 18:49:48,095 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'beautiful beaches']
2025-06-09 18:49:48,219 - root - DEBUG - line: b'b_j_\xcb\x88u\xcb\x90_\xc9\xbe_i_f_\xc9\x99l b_\xcb\x88i\xcb\x90_t\xca\x83_\xe1\xb5\xbb_z\n'
2025-06-09 18:49:48,219 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and diverse culture']
2025-06-09 18:49:48,342 - root - DEBUG - line: b'\xc3\xa6_n_d d_a\xc9\xaa_v_\xcb\x88\xc9\x9c\xcb\x90_s k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a\n'
2025-06-09 18:49:49,022 - jarvis_app - INFO - TTS generated 123152 samples
2025-06-09 18:49:54,718 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:49:54,718 - jarvis_app - INFO - TTS processing phrase: 'The city's attractions include the Griffith Observatory, Getty Center, and iconic landmarks like the Hollywood Sign.'
2025-06-09 18:49:54,726 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "The city's attractions include the Griffith Observatory"]
2025-06-09 18:49:54,899 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\xaa_\xc9\xbe_i_z \xc9\x90_t_\xc9\xb9_\xcb\x88\xc3\xa6_k_\xca\x83_\xc9\x99_n_z \xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d \xc3\xb0_\xc9\x99 \xc9\xa1_\xc9\xb9_\xcb\x88\xc9\xaa_f_\xc9\xaa_\xce\xb8 \xc9\x99_b_z_\xcb\x88\xc9\x9c\xcb\x90_v_\xc9\x99_t_\xcb\x8c\xc9\x94\xcb\x90_\xc9\xb9_i\n'
2025-06-09 18:49:54,899 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Getty Center']
2025-06-09 18:49:55,023 - root - DEBUG - line: b'\xc9\xa1_\xcb\x88\xc9\x9b_\xc9\xbe_i s_\xcb\x88\xc9\x9b_n_t_\xc9\x9a\n'
2025-06-09 18:49:55,024 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and iconic landmarks like the Hollywood Sign']
2025-06-09 18:49:55,148 - root - DEBUG - line: b'\xc3\xa6_n_d a\xc9\xaa_k_\xcb\x88\xc9\x91\xcb\x90_n_\xc9\xaa_k l_\xcb\x88\xc3\xa6_n_d_m_\xc9\x91\xcb\x90\xc9\xb9_k_s l_\xcb\x88a\xc9\xaa_k \xc3\xb0_\xc9\x99 h_\xcb\x88\xc9\x91\xcb\x90_l_i_w_\xcb\x8c\xca\x8a_d s_\xcb\x88a\xc9\xaa_n\n'
2025-06-09 18:49:55,876 - jarvis_app - INFO - TTS generated 127760 samples
2025-06-09 18:50:01,754 - jarvis_app - INFO - TTS playback completed
2025-06-09 18:50:01,796 - jarvis_app - DEBUG - Sending message to client: 'The city's attractions include the Griffith Observatory, Getty Center, and iconic landmarks like the Hollywood Sign.'
2025-06-09 19:05:02,386 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:02] "GET /api/status HTTP/1.1" 200 -
2025-06-09 19:05:02,386 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:05:02,388 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:05:03,392 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:03] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:05:03,394 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:03] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:05:12,061 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:05:12,061 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryaeI82bOqrAUdZ8JV
2025-06-09 19:05:12,063 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:05:12,063 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryaeI82bOqrAUdZ8JV
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 125340
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:05:12,063 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:05:12,065 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:05:13,492 - jarvis_app - INFO - Transcription result: Hey, Javas, can you tell me a little about Google?
2025-06-09 19:05:13,493 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:13] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:05:13,493 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javas, can you tell me a little about Google?'}
2025-06-09 19:05:18,259 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:05:18,259 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryJJRNBh8n1pOKoCzI
2025-06-09 19:05:18,262 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:05:18,262 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryJJRNBh8n1pOKoCzI
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 93785
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:05:18,262 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:05:18,264 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:05:19,415 - jarvis_app - INFO - Transcription result: Hey, Jarvis, can you tell me a little about Google?
2025-06-09 19:05:19,416 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:19] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:05:19,416 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Jarvis, can you tell me a little about Google?'}
2025-06-09 19:05:36,098 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:36] "GET /api/status HTTP/1.1" 200 -
2025-06-09 19:05:36,118 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:05:36,119 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:05:37,121 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:37] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:05:37,122 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:37] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:05:41,637 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:05:41,637 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryUBvPdWFQkA65raUV
2025-06-09 19:05:41,639 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:05:41,639 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryUBvPdWFQkA65raUV
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 83221
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:05:41,639 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:05:41,641 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:05:42,816 - jarvis_app - INFO - Transcription result: Hey, Jarvis, can you tell me a little about Google?
2025-06-09 19:05:42,817 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:42] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:05:42,818 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Jarvis, can you tell me a little about Google?'}
2025-06-09 19:05:46,722 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:05:46,722 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:05:46,722 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:05:46,722 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:05:46,723 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:46] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:05:46,725 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:05:46,829 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:05:46,912 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:05:47,356 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:05:47,531 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:05:47,772 - jarvis_app - INFO - TTS generated 89632 samples
2025-06-09 19:05:51,926 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:05:55,510 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:05:55,510 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryP99ibuWzJDspqOfd
2025-06-09 19:05:55,512 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:05:55,512 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryP99ibuWzJDspqOfd
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 87253
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:05:55,512 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:05:55,515 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:05:56,657 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about Google?
2025-06-09 19:05:56,657 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about Google
2025-06-09 19:05:56,657 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about Google?'}
2025-06-09 19:05:56,657 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 19:05:56,658 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dd9fa93e-f24c-442d-a545-16e18f9324ba', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ', can you tell me a little about Google'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 19:05:56,660 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 19:05:56,660 - httpcore.connection - DEBUG - close.started
2025-06-09 19:05:56,661 - httpcore.connection - DEBUG - close.complete
2025-06-09 19:05:56,661 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 19:05:56,690 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166d393c0>
2025-06-09 19:05:56,690 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x165b972c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 19:05:56,709 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x166534460>
2025-06-09 19:05:56,709 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 19:05:56,709 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 19:05:56,709 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 19:05:56,709 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 19:05:56,709 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 19:05:57,569 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 02:05:57 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'476'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'481'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199978'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'6ms'), (b'x-request-id', b'req_78196177b6f8f454f45230f2bca0e6cd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=yG.SoyL6axGoFLriZxsattLnFGt29ug8eIsZrT2l2Mo-1749521157-1.0.1.1-.SGrLsgGUYwlD3txnNnqBezfXVHeAnc94u2ah8WJIVgFgXkd3S382cVqnpcsd3nIMmOq_xcgb7_h7StXAbRduVTVd17tSVAolmAoJU_a59o; path=/; expires=Tue, 10-Jun-25 02:35:57 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d54e7d8a50eb25-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 19:05:57,571 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 19:05:57,571 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 02:05:57 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '476', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '481', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199978', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '6ms', 'x-request-id': 'req_78196177b6f8f454f45230f2bca0e6cd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=yG.SoyL6axGoFLriZxsattLnFGt29ug8eIsZrT2l2Mo-1749521157-1.0.1.1-.SGrLsgGUYwlD3txnNnqBezfXVHeAnc94u2ah8WJIVgFgXkd3S382cVqnpcsd3nIMmOq_xcgb7_h7StXAbRduVTVd17tSVAolmAoJU_a59o; path=/; expires=Tue, 10-Jun-25 02:35:57 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d54e7d8a50eb25-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 19:05:57,571 - openai._base_client - DEBUG - request_id: req_78196177b6f8f454f45230f2bca0e6cd
2025-06-09 19:05:57,572 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 19:05:57,928 - jarvis_app - INFO - TTS processing phrase: 'Google is a multinational technology company specializing in internet-related services and products, including search engines, online advertising, cloud computing, software, and hardware.'
2025-06-09 19:05:57,928 - jarvis_app - DEBUG - Sending message to client: 'Google is a multinational technology company specializing in internet-related services and products, including search engines, online advertising, cloud computing, software, and hardware.'
2025-06-09 19:05:57,933 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Google is a multinational technology company specializing in internet related services and products']
2025-06-09 19:05:58,109 - root - DEBUG - line: b'\xc9\xa1_\xcb\x88u\xcb\x90_\xc9\xa1_\xc9\x99l \xc9\xaa_z \xc9\x90 m_\xcb\x8c\xca\x8c_l_t_\xc9\xaa_n_\xcb\x88\xc3\xa6_\xca\x83_\xc9\x99_n_\xc9\x99l t_\xc9\x9b_k_n_\xcb\x88\xc9\x91\xcb\x90_l_\xc9\x99_d\xca\x92_i k_\xcb\x88\xca\x8c_m_p_\xc9\x99_n_i s_p_\xcb\x88\xc9\x9b_\xca\x83_\xc9\x99l_\xcb\x8ca\xc9\xaa_z_\xc9\xaa_\xc5\x8b \xc9\xaa_n \xcb\x88\xc9\xaa_n_t_\xc9\x9a_n_\xcb\x8c\xc9\x9b_t \xc9\xb9_\xe1\xb5\xbb_l_\xcb\x88e\xc9\xaa_\xc9\xbe_\xe1\xb5\xbb_d s_\xcb\x88\xc9\x9c\xcb\x90_v_\xc9\xaa_s_\xe1\xb5\xbb_z__ \xc3\xa6_n_d p_\xc9\xb9_\xcb\x88\xc9\x91\xcb\x90_d_\xca\x8c_k_t_s\n'
2025-06-09 19:05:58,110 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'including search engines']
2025-06-09 19:05:58,246 - root - DEBUG - line: b'\xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d_\xc9\xaa_\xc5\x8b s_\xcb\x88\xc9\x9c\xcb\x90_t\xca\x83 \xcb\x88\xc9\x9b_n_d\xca\x92_\xc9\xaa_n_z\n'
2025-06-09 19:05:58,247 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'online advertising']
2025-06-09 19:05:58,390 - root - DEBUG - line: b'\xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n \xcb\x88\xc3\xa6_d_v_\xc9\x9a_t_\xcb\x8ca\xc9\xaa_z_\xc9\xaa_\xc5\x8b\n'
2025-06-09 19:05:58,390 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'cloud computing']
2025-06-09 19:05:58,530 - root - DEBUG - line: b'k_l_\xcb\x88a\xca\x8a_d k_\xc9\x99_m_p_j_\xcb\x88u\xcb\x90_\xc9\xbe_\xc9\xaa_\xc5\x8b\n'
2025-06-09 19:05:58,530 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'software']
2025-06-09 19:05:58,657 - root - DEBUG - line: b's_\xcb\x88\xc9\x94_f_t_w_\xc9\x9b\xc9\xb9\n'
2025-06-09 19:05:58,657 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and hardware']
2025-06-09 19:05:58,783 - root - DEBUG - line: b'\xc3\xa6_n_d h_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_d_w_\xc9\x9b\xc9\xb9\n'
2025-06-09 19:05:58,793 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 19:05:58,793 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 19:05:58,793 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 19:05:58,793 - jarvis_app - INFO - Full response: Google is a multinational technology company specializing in internet-related services and products, including search engines, online advertising, cloud computing, software, and hardware. Founded in 1998 by Larry Page and Sergey Brin, it is known for its search engine and products like Gmail, Google Drive, and Android. Google is a subsidiary of Alphabet Inc.
2025-06-09 19:05:58,793 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Google is a multinational technology company specializing in internet-related services and products, including search engines, online advertising, cloud computing, software, and hardware. Founded in 1998 by Larry Page and Sergey Brin, it is known for its search engine and products like Gmail, Google Drive, and Android. Google is a subsidiary of Alphabet Inc.'}
2025-06-09 19:05:58,794 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:05:58] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:05:58,872 - jarvis_app - DEBUG - Sending message to client: 'Founded in 1998 by Larry Page and Sergey Brin, it is known for its search engine and products like Gmail, Google Drive, and Android.'
2025-06-09 19:05:59,981 - jarvis_app - INFO - TTS generated 210448 samples
2025-06-09 19:06:09,618 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:06:09,618 - jarvis_app - INFO - TTS processing phrase: 'Founded in 1998 by Larry Page and Sergey Brin, it is known for its search engine and products like Gmail, Google Drive, and Android.'
2025-06-09 19:06:09,623 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Founded in nineteen ninety eight by Larry Page and Sergey Brin']
2025-06-09 19:06:09,786 - root - DEBUG - line: b'f_\xcb\x88a\xca\x8a_n_d_\xe1\xb5\xbb_d \xc9\xaa_n n_\xcb\x88a\xc9\xaa_n_t_i\xcb\x90_n n_\xcb\x88a\xc9\xaa_n_t_i_ \xcb\x88e\xc9\xaa_t b_a\xc9\xaa l_\xcb\x88\xc3\xa6_\xc9\xb9_i p_\xcb\x88e\xc9\xaa_d\xca\x92__ \xc3\xa6_n_d s_\xcb\x88\xc9\x9c\xcb\x90_d\xca\x92_i b_\xc9\xb9_\xcb\x88\xc9\xaa_n\n'
2025-06-09 19:06:09,787 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'it is known for its search engine and products like Gmail']
2025-06-09 19:06:09,915 - root - DEBUG - line: b'\xc9\xaa_\xc9\xbe \xc9\xaa_z n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s s_\xcb\x88\xc9\x9c\xcb\x90_t\xca\x83 \xcb\x88\xc9\x9b_n_d\xca\x92_\xc9\xaa_n__ \xc3\xa6_n_d p_\xc9\xb9_\xcb\x88\xc9\x91\xcb\x90_d_\xca\x8c_k_t_s l_\xcb\x88a\xc9\xaa_k d\xca\x92_\xcb\x88i\xcb\x90_m_\xcb\x88e\xc9\xaa_l\n'
2025-06-09 19:06:09,915 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Google Drive']
2025-06-09 19:06:10,073 - root - DEBUG - line: b'\xc9\xa1_\xcb\x88u\xcb\x90_\xc9\xa1_\xc9\x99l d_\xc9\xb9_\xcb\x88a\xc9\xaa_v\n'
2025-06-09 19:06:10,073 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and Android']
2025-06-09 19:06:10,205 - root - DEBUG - line: b'\xc3\xa6_n_d \xcb\x88\xc3\xa6_n_d_\xc9\xb9_\xc9\x94\xc9\xaa_d\n'
2025-06-09 19:06:11,107 - jarvis_app - INFO - TTS generated 156688 samples
2025-06-09 19:06:18,327 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:06:18,328 - jarvis_app - INFO - TTS processing phrase: 'Google is a subsidiary of Alphabet Inc.'
2025-06-09 19:06:18,329 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Google is a subsidiary of Alphabet Inc']
2025-06-09 19:06:18,497 - root - DEBUG - line: b'\xc9\xa1_\xcb\x88u\xcb\x90_\xc9\xa1_\xc9\x99l \xc9\xaa_z \xc9\x90 s_\xca\x8c_b_s_\xcb\x88\xc9\xaa_d_j_\xc9\x9a_\xc9\xb9_i_ \xca\x8c_v \xcb\x88\xc3\xa6_l_f_\xc9\x99_b_\xcb\x8c\xc9\x9b_t \xcb\x88\xc9\xaa_\xc5\x8b_k\n'
2025-06-09 19:06:18,912 - jarvis_app - INFO - TTS generated 56592 samples
2025-06-09 19:06:21,579 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:06:21,604 - jarvis_app - DEBUG - Sending message to client: 'Google is a subsidiary of Alphabet Inc.'
2025-06-09 19:06:58,502 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:06:58,502 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:06:58,502 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:06:58,502 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:06:58,503 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:06:58] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:06:58,504 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:06:58,672 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:06:59,014 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:06:59,090 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:06:59,234 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:06:59,492 - jarvis_app - INFO - TTS generated 91424 samples
2025-06-09 19:07:03,744 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:07:03,904 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:07:03,905 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:07:03,905 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:07:03,905 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:07:03,905 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:07:03,906 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:07:03] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:07:03,908 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:07:04,080 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:07:04,526 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:07:04,663 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:07:04,916 - jarvis_app - INFO - TTS generated 91936 samples
2025-06-09 19:07:07,692 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:07:07] "GET /api/status HTTP/1.1" 200 -
2025-06-09 19:07:07,694 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:07:07,694 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:07:08,699 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:07:08] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:07:08,700 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:07:08] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:07:09,167 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:07:09,540 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:07:09,541 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:07:09,541 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:07:09,541 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:07:09,541 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:07:09,541 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:07:09] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:07:09,543 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:07:09,720 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:07:10,172 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:07:10,318 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:07:10,551 - jarvis_app - INFO - TTS generated 89632 samples
2025-06-09 19:07:14,710 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:12:34,193 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 19:12:38,582 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 19:12:38,583 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,584 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 19:12:38,585 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 19:12:38,586 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:12:38,587 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:12:38,588 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:12:38,859 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:12:38,860 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 19:12:38,860 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:12:38,861 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:12:38,862 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 19:12:39,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:12:39,020 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:12:39,021 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:12:39,023 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 19:12:39,362 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 19:12:39,364 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 19:12:39,366 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 19:12:39,368 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 19:12:39,368 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 19:12:39,369 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 19:12:39,369 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 19:12:39,369 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 19:12:40,348 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 19:12:40,353 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 19:12:40,355 - matplotlib - DEBUG - interactive is False
2025-06-09 19:12:40,355 - matplotlib - DEBUG - platform is darwin
2025-06-09 19:12:40,410 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 19:12:40,413 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 19:12:40,653 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 19:12:43,422 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:12:43,626 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:12:43,627 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:12:43,627 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:12:43,628 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:12:43,629 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:12:43,629 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:12:43,629 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:12:43,776 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 19:12:43,780 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:12:43,823 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:12:43,831 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:12:43,887 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:12:44,032 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:12:44,033 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:12:44,033 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:12:44,034 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:12:44,034 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:12:44,035 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:12:44,035 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:12:44,036 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 19:12:44,224 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 19:12:44,426 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 19:12:44,465 - jarvis_app - INFO - Audio output test successful
2025-06-09 19:12:48,008 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 19:12:48,013 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:12:48,017 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:12:48,023 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:12:48,093 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:12:48,264 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:12:48,265 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:12:48,265 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:12:48,266 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:12:48,267 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:12:48,267 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:12:48,267 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:12:48,268 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 19:12:48,455 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 19:12:48,601 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 19:12:48,774 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 19:12:49,082 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 19:12:49,083 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 19:12:49,085 - jarvis_app - INFO - Starting Jarvis AI Assistant
2025-06-09 19:12:49,085 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 19:12:49,085 - jarvis_app - INFO - TTS worker thread started
2025-06-09 19:12:49,085 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 19:12:49,085 - jarvis_app - INFO - Running with audio output
2025-06-09 19:12:49,085 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 19:12:49,086 - jarvis_app - INFO - Starting Flask server on port 5001
2025-06-09 19:17:13,616 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:17:13] "GET /api/status HTTP/1.1" 200 -
2025-06-09 19:17:13,616 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:17:13,617 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:17:14,622 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:17:14] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:17:14,622 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:17:14] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:18:22,311 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 19:18:33,018 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 19:18:33,018 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:18:33,018 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,018 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 19:18:33,019 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 19:18:33,020 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 19:18:33,021 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:18:33,022 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:18:33,023 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:18:33,025 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:18:33,676 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:18:33,677 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:18:33,678 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:18:33,678 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:18:33,678 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 19:18:33,679 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:18:33,680 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:18:33,680 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:18:33,974 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 19:18:33,975 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:18:33,976 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:18:33,978 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 19:18:34,773 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 19:18:34,786 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 19:18:34,798 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 19:18:34,812 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 19:18:34,812 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 19:18:34,821 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 19:18:34,821 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 19:18:34,821 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 19:18:37,588 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 19:18:37,611 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 19:18:37,612 - matplotlib - DEBUG - interactive is False
2025-06-09 19:18:37,612 - matplotlib - DEBUG - platform is darwin
2025-06-09 19:18:37,726 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 19:18:37,734 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 19:18:38,227 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 19:18:42,432 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:18:43,520 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:18:43,521 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:18:43,521 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:18:43,521 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:18:43,522 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:18:43,523 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:18:43,523 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:18:43,524 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:18:43,525 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:18:43,526 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:18:43,527 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:18:43,527 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:18:43,527 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:18:43,528 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:18:43,774 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 19:18:43,782 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:18:43,910 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:18:43,920 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:18:43,982 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:18:44,137 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:18:44,138 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:18:44,138 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:18:44,139 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:18:44,140 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:18:44,140 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:18:44,140 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:18:44,142 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 19:18:44,325 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 19:18:44,513 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 19:18:44,623 - jarvis_app - INFO - Audio output test successful
2025-06-09 19:18:50,231 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 19:18:50,235 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:18:50,241 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:18:50,250 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:18:50,313 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:18:50,459 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:18:50,460 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:18:50,460 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:18:50,461 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:18:50,462 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:18:50,462 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:18:50,462 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:18:50,463 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 19:18:50,643 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 19:18:50,781 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 19:18:50,950 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 19:18:51,255 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 19:18:51,256 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 19:18:51,259 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 19:18:51,259 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 19:18:51,259 - jarvis_app - INFO - TTS worker thread started
2025-06-09 19:18:51,259 - jarvis_app - INFO - Running with audio output
2025-06-09 19:18:51,259 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 19:18:51,259 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 19:18:51,259 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 19:18:51,288 - jarvis_app - INFO - Audio output stream opened
2025-06-09 19:18:51,289 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 19:18:51,290 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 19:18:51,316 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 19:18:51,316 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 19:18:51,471 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 19:18:51,874 - jarvis_app - INFO - TTS generated 63504 samples
2025-06-09 19:18:51,882 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:18:51,884 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:18:52,885 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:18:52] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:18:52,885 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:18:52] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:18:54,864 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:18:55,800 - jarvis_app - INFO - Index page requested
2025-06-09 19:18:55,800 - jarvis_app - INFO - Welcome message queued
2025-06-09 19:18:55,800 - jarvis_app - INFO - TTS processing phrase: 'Hello! I'm Jarvis. How can I help you today?'
2025-06-09 19:18:55,801 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Hello']
2025-06-09 19:18:55,821 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:18:55] "HEAD / HTTP/1.1" 200 -
2025-06-09 19:18:55,896 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "Hello! I'm Jarvis. How can I help you today?"}
2025-06-09 19:18:55,900 - jarvis_app - DEBUG - Sending message to client: 'Hello! I'm Jarvis. How can I help you today?'
2025-06-09 19:18:55,971 - root - DEBUG - line: b'h_\xc9\x99_l_\xcb\x88o\xca\x8a\n'
2025-06-09 19:18:56,178 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm Jarvis"]
2025-06-09 19:18:56,314 - root - DEBUG - line: b'a\xc9\xaa_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s\n'
2025-06-09 19:18:56,547 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I help you today']
2025-06-09 19:18:56,711 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 19:18:56,995 - jarvis_app - INFO - TTS generated 89648 samples
2025-06-09 19:19:01,147 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:20:37,811 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:20:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 19:20:37,812 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:20:37,820 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:20:38,818 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:20:38] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:20:38,825 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:20:38] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:21:02,866 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:21:02,867 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:21:02,867 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:21:02,867 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:21:02,867 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:21:02,868 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:21:02] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:21:02,872 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:21:03,069 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:21:03,486 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:21:03,636 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:21:03,868 - jarvis_app - INFO - TTS generated 92192 samples
2025-06-09 19:21:08,164 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:21:14,743 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:21:14,744 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryNoFRX9NEpAgHwv9n
2025-06-09 19:21:14,747 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:21:14,747 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryNoFRX9NEpAgHwv9n
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 125567
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:21:14,747 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:21:14,760 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:21:16,975 - jarvis_app - INFO - Transcription result: Hey, Javis, can you tell me a little about Eureka?
2025-06-09 19:21:16,976 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:21:16] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:21:16,976 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javis, can you tell me a little about Eureka?'}
2025-06-09 19:21:36,296 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:21:36,296 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryLTU2grBcp3fBROPe
2025-06-09 19:21:36,299 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:21:36,299 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryLTU2grBcp3fBROPe
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 101911
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:21:36,299 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:21:36,301 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:21:37,510 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about Eureka?
2025-06-09 19:21:37,510 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about Eureka
2025-06-09 19:21:37,511 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about Eureka?'}
2025-06-09 19:21:37,729 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 19:21:38,762 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4ca1a0b6-9524-431e-a52c-24d95d0a1c5a', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ', can you tell me a little about Eureka'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 19:21:38,842 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 19:21:38,843 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 19:21:38,897 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17e058460>
2025-06-09 19:21:38,897 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1698af2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 19:21:38,914 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17e0585b0>
2025-06-09 19:21:38,914 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 19:21:38,915 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 19:21:38,915 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 19:21:38,915 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 19:21:38,915 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 19:21:39,457 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 02:21:39 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'215'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'219'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199977'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'6ms'), (b'x-request-id', b'req_6635bff5b1d1005e265ae30440598a65'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=BMs6p0dMivVp5yVb9Ip7DRpISZM6Mx4Ast.fohEtpIo-1749522099-1.0.1.1-WCUjCgyZZMnagJ1Rs9SA9NJOXnaXY4YeZY5MqmwXRFoW7QPWdLqx0nC80GwHGfX3rAoLWU7Bw4TF2pfZ1jwHXaI8qlPhs2hfJar.JOOfZbc; path=/; expires=Tue, 10-Jun-25 02:51:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ZNJo39U2HYAu904_yrtPMiFx5gFb7n380BidIh3.CYg-1749522099441-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5657e4969ce48-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 19:21:39,459 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 19:21:39,459 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 02:21:39 GMT'), ('content-type', 'text/event-stream; charset=utf-8'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'personal-tqzlct'), ('openai-processing-ms', '215'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '219'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199977'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '6ms'), ('x-request-id', 'req_6635bff5b1d1005e265ae30440598a65'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=BMs6p0dMivVp5yVb9Ip7DRpISZM6Mx4Ast.fohEtpIo-1749522099-1.0.1.1-WCUjCgyZZMnagJ1Rs9SA9NJOXnaXY4YeZY5MqmwXRFoW7QPWdLqx0nC80GwHGfX3rAoLWU7Bw4TF2pfZ1jwHXaI8qlPhs2hfJar.JOOfZbc; path=/; expires=Tue, 10-Jun-25 02:51:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ZNJo39U2HYAu904_yrtPMiFx5gFb7n380BidIh3.CYg-1749522099441-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d5657e4969ce48-SJC'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 19:21:39,459 - openai._base_client - DEBUG - request_id: req_6635bff5b1d1005e265ae30440598a65
2025-06-09 19:21:39,460 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 19:21:39,603 - jarvis_app - INFO - TTS processing phrase: 'Eureka can refer to several things, including:

1.'
2025-06-09 19:21:39,606 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Eureka can refer to several things']
2025-06-09 19:21:39,782 - root - DEBUG - line: b'j_u\xcb\x90_\xc9\xb9_\xcb\x88i\xcb\x90_k_\xc9\x90 k_\xc3\xa6_n \xc9\xb9_\xe1\xb5\xbb_f_\xcb\x88\xc9\x9c\xcb\x90 t_\xc9\x99 s_\xcb\x88\xc9\x9b_v_\xc9\xb9_\xc9\x99l \xce\xb8_\xcb\x88\xc9\xaa_\xc5\x8b_z\n'
2025-06-09 19:21:39,782 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'including']
2025-06-09 19:21:39,914 - root - DEBUG - line: b'\xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d_\xc9\xaa_\xc5\x8b\n'
2025-06-09 19:21:39,938 - jarvis_app - DEBUG - Sending message to client: 'Eureka can refer to several things, including:

1.'
2025-06-09 19:21:40,282 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'one']
2025-06-09 19:21:40,356 - jarvis_app - DEBUG - Sending message to client: '**Eureka Moment**: A sudden realization or discovery.
  
2.'
2025-06-09 19:21:40,433 - root - DEBUG - line: b'w_\xcb\x88\xca\x8c_n\n'
2025-06-09 19:21:40,657 - jarvis_app - INFO - TTS generated 76832 samples
2025-06-09 19:21:41,200 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 19:21:41,201 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 19:21:41,201 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 19:21:41,202 - jarvis_app - INFO - Full response: Eureka can refer to several things, including:

1. **Eureka Moment**: A sudden realization or discovery.
  
2. **Eureka, California**: A coastal city known for its Victorian architecture and proximity to redwood forests.

3. **Eureka Stockade**: A rebellion by gold miners in Australia in 1854 against oppressive mining licenses.

4. **Eureka (TV series)**: A science fiction comedy-drama focused on a town with scientific anomalies.

Let me know if you need more specific information!
2025-06-09 19:21:41,202 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Eureka can refer to several things, including:\n\n1. **Eureka Moment**: A sudden realization or discovery.\n  \n2. **Eureka, California**: A coastal city known for its Victorian architecture and proximity to redwood forests.\n\n3. **Eureka Stockade**: A rebellion by gold miners in Australia in 1854 against oppressive mining licenses.\n\n4. **Eureka (TV series)**: A science fiction comedy-drama focused on a town with scientific anomalies.\n\nLet me know if you need more specific information!'}
2025-06-09 19:21:41,203 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:21:41] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:21:44,259 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:21:44,259 - jarvis_app - INFO - TTS processing phrase: '**Eureka Moment**: A sudden realization or discovery.
  
2.'
2025-06-09 19:21:44,265 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', '**Eureka Moment**']
2025-06-09 19:21:44,445 - root - DEBUG - line: b'\xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k j_u\xcb\x90_\xc9\xb9_\xcb\x88i\xcb\x90_k_\xc9\x90 m_\xcb\x88o\xca\x8a_m_\xc9\x99_n_t \xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k\n'
2025-06-09 19:21:44,445 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'A sudden realization or discovery']
2025-06-09 19:21:44,574 - root - DEBUG - line: b'\xc9\x90 s_\xcb\x88\xca\x8c_d_\xc9\x99_n \xc9\xb9_\xcb\x8ci\xcb\x90__\xc9\x99_l_\xe1\xb5\xbb_z_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc9\x94\xcb\x90\xc9\xb9 d_\xc9\xaa_s_k_\xcb\x88\xca\x8c_v_\xc9\x9a_\xc9\xb9_i\n'
2025-06-09 19:21:45,179 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'two']
2025-06-09 19:21:45,315 - root - DEBUG - line: b't_\xcb\x88u\xcb\x90\n'
2025-06-09 19:21:45,503 - jarvis_app - INFO - TTS generated 125728 samples
2025-06-09 19:21:51,284 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:21:51,284 - jarvis_app - INFO - TTS processing phrase: '**Eureka, California**: A coastal city known for its Victorian architecture and proximity to redwood forests.

3.'
2025-06-09 19:21:51,288 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', '**Eureka']
2025-06-09 19:21:51,443 - root - DEBUG - line: b'\xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k j_u\xcb\x90_\xc9\xb9_\xcb\x88i\xcb\x90_k_\xc9\x90\n'
2025-06-09 19:21:51,443 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'California**']
2025-06-09 19:21:51,570 - root - DEBUG - line: b'k_\xcb\x8c\xc3\xa6_l_\xc9\xaa_f_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_n_i\xc9\x99 \xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k\n'
2025-06-09 19:21:51,570 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'A coastal city known for its Victorian architecture and proximity to redwood forests']
2025-06-09 19:21:51,699 - root - DEBUG - line: b'\xc9\x90 k_\xcb\x88o\xca\x8a_s_t_\xc9\x99l s_\xcb\x88\xc9\xaa_\xc9\xbe_i n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s v_\xc9\xaa_k_t_\xcb\x88\xc9\x94\xcb\x90_\xc9\xb9_i\xc9\x99_n \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k_\xc9\xaa_t_\xcb\x8c\xc9\x9b_k_t\xca\x83_\xc9\x9a__ \xc3\xa6_n_d p_\xc9\xb9_\xc9\x91\xcb\x90_k_s_\xcb\x88\xc9\xaa_m_\xe1\xb5\xbb_\xc9\xbe_i t_\xc9\x99 \xc9\xb9_\xcb\x88\xc9\x9b_d_w_\xca\x8a_d f_\xcb\x88\xc9\x94\xcb\x90_\xc9\xb9_\xc9\xaa_s_t_s\n'
2025-06-09 19:21:52,605 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'three']
2025-06-09 19:21:52,782 - root - DEBUG - line: b'\xce\xb8_\xc9\xb9_\xcb\x88i\xcb\x90\n'
2025-06-09 19:21:53,063 - jarvis_app - INFO - TTS generated 181792 samples
2025-06-09 19:22:01,403 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:22:01,403 - jarvis_app - INFO - TTS processing phrase: '**Eureka Stockade**: A rebellion by gold miners in Australia in 1854 against oppressive mining licenses.

4.'
2025-06-09 19:22:01,407 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', '**Eureka Stockade**']
2025-06-09 19:22:01,636 - root - DEBUG - line: b'\xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k j_u\xcb\x90_\xc9\xb9_\xcb\x88i\xcb\x90_k_\xc9\x90 s_t_\xcb\x88\xc9\x91\xcb\x90_k_e\xc9\xaa_d \xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k\n'
2025-06-09 19:22:01,636 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'A rebellion by gold miners in Australia in eighteen fifty four against oppressive mining licenses']
2025-06-09 19:22:01,775 - root - DEBUG - line: b'\xc9\x90 \xc9\xb9_\xe1\xb5\xbb_b_\xcb\x88\xc9\x9b_l_i\xc9\x99_n b_a\xc9\xaa \xc9\xa1_\xcb\x88o\xca\x8a_l_d m_\xcb\x88a\xc9\xaa_n_\xc9\x9a_z \xc9\xaa_n \xc9\x94\xcb\x90_s_t_\xc9\xb9_\xcb\x88e\xc9\xaa_l_i\xc9\x99 \xc9\xaa_n \xcb\x88e\xc9\xaa_t_i\xcb\x90_n f_\xcb\x88\xc9\xaa_f_t_i f_\xcb\x88\xc9\x94\xcb\x90_\xc9\xb9 \xc9\x90_\xc9\xa1_\xcb\x88\xc9\x9b_n_s_t \xc9\x99_p_\xc9\xb9_\xcb\x88\xc9\x9b_s_\xc9\xaa_v m_\xcb\x88a\xc9\xaa_n_\xc9\xaa_\xc5\x8b l_\xcb\x88a\xc9\xaa_s_\xc9\x99_n_s_\xe1\xb5\xbb_z\n'
2025-06-09 19:22:02,740 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'four']
2025-06-09 19:22:02,898 - root - DEBUG - line: b'f_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9\n'
2025-06-09 19:22:03,100 - jarvis_app - INFO - TTS generated 191264 samples
2025-06-09 19:22:11,861 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:22:11,861 - jarvis_app - INFO - TTS processing phrase: '**Eureka (TV series)**: A science fiction comedy-drama focused on a town with scientific anomalies.

Let me know if you need more specific information!'
2025-06-09 19:22:11,864 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', '**Eureka TV series**']
2025-06-09 19:22:12,018 - root - DEBUG - line: b'\xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k j_u\xcb\x90_\xc9\xb9_\xcb\x88i\xcb\x90_k_\xc9\x90 t_\xcb\x8ci\xcb\x90_v_\xcb\x88i\xcb\x90 s_\xcb\x88\xc9\xaa_\xc9\xb9_i_z \xcb\x88\xc3\xa6_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k_\xc9\x90_s_t_\xc9\x9a_\xc9\xb9_\xcb\x8c\xc9\xaa_s_k\n'
2025-06-09 19:22:12,018 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'A science fiction comedy drama focused on a town with scientific anomalies']
2025-06-09 19:22:12,154 - root - DEBUG - line: b'\xc9\x90 s_\xcb\x88a\xc9\xaa\xc9\x99_n_s f_\xcb\x88\xc9\xaa_k_\xca\x83_\xc9\x99_n k_\xcb\x88\xc9\x91\xcb\x90_m_\xc9\x99_d_i d_\xc9\xb9_\xcb\x88\xc9\x91\xcb\x90_m_\xc9\x99 f_\xcb\x88o\xca\x8a_k_\xc9\x99_s_t \xcb\x8c\xc9\x94_n \xc9\x90 t_\xcb\x88a\xca\x8a_n w_\xc9\xaa_\xc3\xb0 s_a\xc9\xaa\xc9\x99_n_t_\xcb\x88\xc9\xaa_f_\xc9\xaa_k \xc9\x90_n_\xcb\x88\xc9\x91\xcb\x90_m_\xc9\x99_l_i_z\n'
2025-06-09 19:22:13,013 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Let me know if you need more specific information']
2025-06-09 19:22:13,167 - root - DEBUG - line: b'l_\xcb\x88\xc9\x9b_t m_\xcb\x8ci\xcb\x90 n_\xcb\x88o\xca\x8a__ \xc9\xaa_f j_u\xcb\x90 n_\xcb\x88i\xcb\x90_d m_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9 s_p_\xc9\x99_s_\xcb\x88\xc9\xaa_f_\xc9\xaa_k \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n\n'
2025-06-09 19:22:13,569 - jarvis_app - INFO - TTS generated 204320 samples
2025-06-09 19:22:22,931 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:22:22,992 - jarvis_app - DEBUG - Sending message to client: '**Eureka, California**: A coastal city known for its Victorian architecture and proximity to redwood forests.

3.'
2025-06-09 19:22:22,994 - jarvis_app - DEBUG - Sending message to client: '**Eureka Stockade**: A rebellion by gold miners in Australia in 1854 against oppressive mining licenses.

4.'
2025-06-09 19:22:23,196 - jarvis_app - DEBUG - Sending message to client: '**Eureka (TV series)**: A science fiction comedy-drama focused on a town with scientific anomalies.

Let me know if you need more specific information!'
2025-06-09 19:22:35,765 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:22:35,765 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:35,766 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:22:35] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:22:35,766 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:35,766 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:35,766 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:22:35,776 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:22:35,980 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:22:36,522 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:22:36,729 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:22:37,011 - jarvis_app - INFO - TTS generated 92960 samples
2025-06-09 19:22:38,426 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:22:38] "GET /api/status HTTP/1.1" 200 -
2025-06-09 19:22:38,428 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:22:38,429 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:22:39,433 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:22:39] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:22:39,433 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:22:39] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:22:41,308 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:22:41,439 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:22:41,439 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:41,439 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:41,439 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:41,439 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:22:41,439 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:22:41] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:22:41,441 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:22:41,671 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:22:42,174 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:22:42,435 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:22:42,733 - jarvis_app - INFO - TTS generated 92448 samples
2025-06-09 19:22:47,029 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:22:47,667 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:22:47,667 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:47,667 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:47,667 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:22:47,667 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:22:47,668 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:22:47] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:22:47,671 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:22:47,855 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:22:48,248 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:22:48,407 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:22:48,664 - jarvis_app - INFO - TTS generated 91680 samples
2025-06-09 19:22:52,916 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:22:56,058 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:22:56,058 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryYS92sEqGghB2dZzX
2025-06-09 19:22:56,059 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:22:56,059 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryYS92sEqGghB2dZzX
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 71930
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:22:56,059 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:22:56,060 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:22:58,537 - jarvis_app - INFO - Transcription result: Hey Jarvis, how's your day going?
2025-06-09 19:22:58,537 - jarvis_app - INFO - Sending prompt to OpenAI: , how's your day going
2025-06-09 19:22:58,538 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "Hey Jarvis, how's your day going?"}
2025-06-09 19:22:58,539 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f759b28a-a58b-49a2-b285-097d4ef24ae3', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short.'}, {'role': 'user', 'content': ", how's your day going"}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 19:22:58,540 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 19:22:58,540 - httpcore.connection - DEBUG - close.started
2025-06-09 19:22:58,541 - httpcore.connection - DEBUG - close.complete
2025-06-09 19:22:58,541 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 19:22:58,562 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17e05b0d0>
2025-06-09 19:22:58,562 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x1698af2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 19:22:58,578 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a152c20>
2025-06-09 19:22:58,578 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 19:22:58,578 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 19:22:58,578 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 19:22:58,579 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 19:22:58,579 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 19:22:58,975 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 19:22:59,066 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 02:22:59 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'230'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'237'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199981'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'5ms'), (b'x-request-id', b'req_8a97514f3df2740603ebbab224e03e43'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d567703df1eb24-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 19:22:59,067 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 19:22:59,067 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 02:22:59 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '230', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '237', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199981', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_8a97514f3df2740603ebbab224e03e43', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d567703df1eb24-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 19:22:59,067 - openai._base_client - DEBUG - request_id: req_8a97514f3df2740603ebbab224e03e43
2025-06-09 19:22:59,067 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 19:22:59,378 - jarvis_app - INFO - TTS processing phrase: 'I'm here and ready to assist you!'
2025-06-09 19:22:59,378 - jarvis_app - DEBUG - Sending message to client: 'I'm here and ready to assist you!'
2025-06-09 19:22:59,380 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm here and ready to assist you"]
2025-06-09 19:22:59,509 - jarvis_app - DEBUG - Sending message to client: 'How can I help today?'
2025-06-09 19:22:59,513 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 19:22:59,513 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 19:22:59,513 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 19:22:59,513 - jarvis_app - INFO - Full response: I'm here and ready to assist you! How can I help today?
2025-06-09 19:22:59,514 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:22:59] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:22:59,514 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm here and ready to assist you! How can I help today?"}
2025-06-09 19:23:00,250 - root - DEBUG - line: b'a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90\n'
2025-06-09 19:23:00,653 - jarvis_app - INFO - TTS generated 42256 samples
2025-06-09 19:23:02,675 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:23:02,676 - jarvis_app - INFO - TTS processing phrase: 'How can I help today?'
2025-06-09 19:23:02,677 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I help today']
2025-06-09 19:23:03,333 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa h_\xcb\x88\xc9\x9b_l_p t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 19:23:03,590 - jarvis_app - INFO - TTS generated 34832 samples
2025-06-09 19:23:05,289 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:23:06,549 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:23:06,549 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:23:06,550 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:23:06,550 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:23:06,550 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:23:06] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:23:06,552 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:23:06,737 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:23:07,134 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:23:07,270 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:23:07,305 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:23:07,523 - jarvis_app - INFO - TTS generated 92704 samples
2025-06-09 19:23:11,824 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:24:42,079 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 19:24:46,475 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 19:24:46,476 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 19:24:46,477 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 19:24:46,478 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 19:24:46,479 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:24:46,480 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:24:46,481 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 19:24:46,774 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:24:46,775 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:24:46,775 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 19:24:46,776 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:24:46,777 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:24:46,777 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 19:24:47,001 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 19:24:47,002 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - stack []
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:24:47,003 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 19:24:47,005 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 19:24:47,359 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 19:24:47,362 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 19:24:47,366 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 19:24:47,369 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 19:24:47,369 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 19:24:47,372 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 19:24:47,372 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 19:24:47,372 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 19:24:48,460 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 19:24:48,465 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 19:24:48,466 - matplotlib - DEBUG - interactive is False
2025-06-09 19:24:48,466 - matplotlib - DEBUG - platform is darwin
2025-06-09 19:24:48,517 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 19:24:48,520 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 19:24:48,746 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 19:24:51,426 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:24:51,581 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:24:51,581 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:24:51,582 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:24:51,582 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:24:51,583 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:24:51,583 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:24:51,583 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:24:51,584 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:24:51,708 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 19:24:51,712 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:24:51,749 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:24:51,756 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:24:51,800 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:24:51,932 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:24:51,932 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:24:51,932 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:24:51,933 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:24:51,933 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:24:51,934 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:24:51,934 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:24:51,934 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:24:51,935 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:24:51,936 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 19:24:52,123 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 19:24:52,285 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 19:24:52,313 - jarvis_app - INFO - Audio output test successful
2025-06-09 19:24:55,435 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 19:24:55,439 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:24:55,442 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:24:55,448 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 19:24:55,514 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 19:24:55,656 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 19:24:55,656 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 19:24:55,656 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 19:24:55,656 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 19:24:55,656 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 19:24:55,656 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 19:24:55,656 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 19:24:55,657 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 19:24:55,657 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 19:24:55,658 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 19:24:55,658 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 19:24:55,658 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 19:24:55,659 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 19:24:55,660 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 19:24:55,833 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 19:24:55,961 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 19:24:56,116 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 19:24:56,398 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 19:24:56,398 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 19:24:56,401 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 19:24:56,401 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 19:24:56,401 - jarvis_app - INFO - TTS worker thread started
2025-06-09 19:24:56,401 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 19:24:56,401 - jarvis_app - INFO - Running with audio output
2025-06-09 19:24:56,401 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 19:24:56,402 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 19:24:56,407 - jarvis_app - INFO - Audio output stream opened
2025-06-09 19:24:56,407 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 19:24:56,409 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 19:24:56,446 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 19:24:56,446 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 19:24:56,571 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 19:24:56,953 - jarvis_app - INFO - TTS generated 60176 samples
2025-06-09 19:24:58,906 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:24:58,910 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:24:58,928 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:24:58,928 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:24:59,770 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:24:59,911 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:24:59] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:24:59,913 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:24:59] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:24:59,930 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:24:59] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:24:59,930 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:24:59] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:59:40,153 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:59:40,155 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:59:40,155 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:59:40,155 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:59:40,155 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:59:40,158 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:59:40] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:59:40,162 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:59:40,337 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:59:40,865 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:59:41,012 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:59:41,269 - jarvis_app - INFO - TTS generated 91168 samples
2025-06-09 19:59:43,494 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:59:43] "GET /api/status HTTP/1.1" 200 -
2025-06-09 19:59:43,495 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 19:59:43,495 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 19:59:44,500 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:59:44] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 19:59:44,500 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:59:44] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 19:59:45,442 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 19:59:45,443 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:59:45,443 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:59:45] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 19:59:45,501 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 19:59:45,506 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:59:45,517 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:59:45,517 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 19:59:45,519 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 19:59:45,671 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 19:59:46,117 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 19:59:46,270 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 19:59:46,505 - jarvis_app - INFO - TTS generated 91680 samples
2025-06-09 19:59:50,755 - jarvis_app - INFO - TTS playback completed
2025-06-09 19:59:54,836 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 19:59:54,836 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryebobmtghzDkMPj5A
2025-06-09 19:59:54,840 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 19:59:54,840 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryebobmtghzDkMPj5A
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 75748
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 19:59:54,841 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 19:59:54,843 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 19:59:56,739 - jarvis_app - INFO - Transcription result: Hey, Jarvis, how are you?
2025-06-09 19:59:56,740 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 19:59:56] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 19:59:56,740 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Jarvis, how are you?'}
2025-06-09 20:00:06,758 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:00:06,759 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryxFWFKSARnVk6m2MT
2025-06-09 20:00:06,761 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:00:06,762 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryxFWFKSARnVk6m2MT
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 57075
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:00:06,762 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:00:06,764 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:00:08,025 - jarvis_app - INFO - Transcription result: Hey, Javis, how are you?
2025-06-09 20:00:08,026 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:00:08] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:00:08,026 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javis, how are you?'}
2025-06-09 20:00:12,065 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:00:12,065 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryj0IRqJxeuL6Qyc1h
2025-06-09 20:00:12,068 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:00:12,068 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryj0IRqJxeuL6Qyc1h
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 57626
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:00:12,068 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:00:12,071 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:00:13,095 - jarvis_app - INFO - Transcription result: Hey, Javes, how are you?
2025-06-09 20:00:13,096 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:00:13] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:00:13,096 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javes, how are you?'}
2025-06-09 20:00:17,881 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:00:17,882 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryCMmdS7swJHRXq9yl
2025-06-09 20:00:17,884 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:00:17,884 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryCMmdS7swJHRXq9yl
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 99667
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:00:17,885 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:00:17,887 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:00:19,152 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about dogs?
2025-06-09 20:00:19,153 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about dogs
2025-06-09 20:00:19,153 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about dogs?'}
2025-06-09 20:00:19,153 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:00:19,749 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6a865cb4-170f-4aa6-acea-ca4c93f5b71b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', can you tell me a little about dogs'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:00:19,805 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:00:19,806 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:00:19,836 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c7550>
2025-06-09 20:00:19,836 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:00:19,854 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c73d0>
2025-06-09 20:00:19,854 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:00:19,854 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:00:19,854 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:00:19,854 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:00:19,854 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:00:20,655 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:00:20 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'345'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'349'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199958'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_4a2a742fe62b8b81b17b089cf0214e97'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=S2YryQKZFgJjmciKv9Wcrth2NosRxmcFW0S_LZzmBtQ-1749524420-1.0.1.1-1F8JzeOjv51sWM4oObDZzsKibR4sA3Ht1Vdi3n_WWy9R7mc5ocHKREmssktscwFk9o.38BSPAyaGBIOKT0cJueEvfbg56U4Wk1E6S80MuM8; path=/; expires=Tue, 10-Jun-25 03:30:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=bDMLYTzwi9Oagu2rLJrDiW.8cJMwoNYs03IgL_0UrYY-1749524420582-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d59e2829be6446-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:00:20,657 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:00:20,657 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 03:00:20 GMT'), ('content-type', 'text/event-stream; charset=utf-8'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'personal-tqzlct'), ('openai-processing-ms', '345'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '349'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199958'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '12ms'), ('x-request-id', 'req_4a2a742fe62b8b81b17b089cf0214e97'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=S2YryQKZFgJjmciKv9Wcrth2NosRxmcFW0S_LZzmBtQ-1749524420-1.0.1.1-1F8JzeOjv51sWM4oObDZzsKibR4sA3Ht1Vdi3n_WWy9R7mc5ocHKREmssktscwFk9o.38BSPAyaGBIOKT0cJueEvfbg56U4Wk1E6S80MuM8; path=/; expires=Tue, 10-Jun-25 03:30:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=bDMLYTzwi9Oagu2rLJrDiW.8cJMwoNYs03IgL_0UrYY-1749524420582-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d59e2829be6446-SJC'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 20:00:20,657 - openai._base_client - DEBUG - request_id: req_4a2a742fe62b8b81b17b089cf0214e97
2025-06-09 20:00:20,657 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:00:20,787 - jarvis_app - INFO - TTS processing phrase: 'Dogs are domesticated mammals and belong to the Canidae family.'
2025-06-09 20:00:20,790 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Dogs are domesticated mammals and belong to the Canidae family']
2025-06-09 20:00:20,943 - root - DEBUG - line: b'd_\xcb\x88\xc9\x91\xcb\x90_\xc9\xa1_z \xc9\x91\xcb\x90\xc9\xb9 d_\xc9\x99_m_\xcb\x88\xc9\x9b_s_t_\xe1\xb5\xbb_k_\xcb\x8ce\xc9\xaa_\xc9\xbe_\xe1\xb5\xbb_d m_\xcb\x88\xc3\xa6_m_\xc9\x99l_z__ \xc3\xa6_n_d b_\xe1\xb5\xbb_l_\xcb\x88\xc9\x94_\xc5\x8b t_\xc9\x99 \xc3\xb0_\xc9\x99 k_\xcb\x88\xc3\xa6_n_\xc9\xaa_d_\xcb\x8ci\xcb\x90 f_\xcb\x88\xc3\xa6_m_\xc9\xaa_l_i\n'
2025-06-09 20:00:20,963 - jarvis_app - DEBUG - Sending message to client: 'Dogs are domesticated mammals and belong to the Canidae family.'
2025-06-09 20:00:21,369 - jarvis_app - DEBUG - Sending message to client: 'They are known for their loyalty, intelligence, and companionship.'
2025-06-09 20:00:21,417 - jarvis_app - INFO - TTS generated 72976 samples
2025-06-09 20:00:22,018 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:00:22,019 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:00:22,019 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:00:22,019 - jarvis_app - INFO - Full response: Dogs are domesticated mammals and belong to the Canidae family. They are known for their loyalty, intelligence, and companionship. There are hundreds of breeds, each with unique traits and characteristics. Dogs are often used for work, therapy, and as pets. They communicate through vocalizations, body language, and behavior. Their diet mainly consists of meat, but they can also eat grains and vegetables. Dogs have been human companions for thousands of years.
2025-06-09 20:00:22,019 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Dogs are domesticated mammals and belong to the Canidae family. They are known for their loyalty, intelligence, and companionship. There are hundreds of breeds, each with unique traits and characteristics. Dogs are often used for work, therapy, and as pets. They communicate through vocalizations, body language, and behavior. Their diet mainly consists of meat, but they can also eat grains and vegetables. Dogs have been human companions for thousands of years.'}
2025-06-09 20:00:22,020 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:00:22] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:00:24,830 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:00:24,832 - jarvis_app - INFO - TTS processing phrase: 'They are known for their loyalty, intelligence, and companionship.'
2025-06-09 20:00:24,836 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'They are known for their loyalty']
2025-06-09 20:00:25,011 - root - DEBUG - line: b'\xc3\xb0_e\xc9\xaa \xc9\x91\xcb\x90\xc9\xb9 n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90\xc9\xb9 \xc3\xb0_\xc9\x9b\xc9\xb9 l_\xcb\x88\xc9\x94\xc9\xaa_\xc9\x99l_\xc9\xbe_i\n'
2025-06-09 20:00:25,011 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'intelligence']
2025-06-09 20:00:25,138 - root - DEBUG - line: b'\xc9\xaa_n_t_\xcb\x88\xc9\x9b_l_\xc9\xaa_d\xca\x92_\xc9\x99_n_s\n'
2025-06-09 20:00:25,139 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and companionship']
2025-06-09 20:00:25,262 - root - DEBUG - line: b'\xc3\xa6_n_d k_\xc9\x99_m_p_\xcb\x88\xc3\xa6_n_i\xc9\x99_n_\xca\x83_\xcb\x8c\xc9\xaa_p\n'
2025-06-09 20:00:25,733 - jarvis_app - INFO - TTS generated 73744 samples
2025-06-09 20:00:29,196 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:00:29,197 - jarvis_app - INFO - TTS processing phrase: 'There are hundreds of breeds, each with unique traits and characteristics.'
2025-06-09 20:00:29,201 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'There are hundreds of breeds']
2025-06-09 20:00:29,369 - root - DEBUG - line: b'\xc3\xb0_\xc9\x9b_\xc9\xb9_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9 h_\xcb\x88\xca\x8c_n_d_\xc9\xb9_\xc9\xaa_d_z \xca\x8c_v b_\xc9\xb9_\xcb\x88i\xcb\x90_d_z\n'
2025-06-09 20:00:29,370 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'each with unique traits and characteristics']
2025-06-09 20:00:29,493 - root - DEBUG - line: b'\xcb\x88i\xcb\x90_t\xca\x83 w_\xc9\xaa_\xc3\xb0 j_u\xcb\x90_n_\xcb\x88i\xcb\x90_k t_\xc9\xb9_\xcb\x88e\xc9\xaa_t_s__ \xc3\xa6_n_d k_\xcb\x8c\xc3\xa6_\xc9\xb9_\xc9\xaa_k_t_\xc9\x9a_\xc9\xb9_\xcb\x88\xc9\xaa_s_t_\xc9\xaa_k_s\n'
2025-06-09 20:00:29,977 - jarvis_app - INFO - TTS generated 76816 samples
2025-06-09 20:00:33,572 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:00:33,572 - jarvis_app - INFO - TTS processing phrase: 'Dogs are often used for work, therapy, and as pets.'
2025-06-09 20:00:33,574 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Dogs are often used for work']
2025-06-09 20:00:33,764 - root - DEBUG - line: b'd_\xcb\x88\xc9\x91\xcb\x90_\xc9\xa1_z \xc9\x91\xcb\x90_\xc9\xb9 \xcb\x88\xc9\x94_f_\xc9\x99_n j_\xcb\x88u\xcb\x90_z_d f_\xc9\x94\xcb\x90\xc9\xb9 w_\xcb\x88\xc9\x9c\xcb\x90_k\n'
2025-06-09 20:00:33,765 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'therapy']
2025-06-09 20:00:33,933 - root - DEBUG - line: b'\xce\xb8_\xcb\x88\xc9\x9b_\xc9\xb9_\xc9\x99_p_i\n'
2025-06-09 20:00:33,934 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and as pets']
2025-06-09 20:00:34,103 - root - DEBUG - line: b'\xc3\xa6_n_d \xc3\xa6_z p_\xcb\x88\xc9\x9b_t_s\n'
2025-06-09 20:00:34,681 - jarvis_app - INFO - TTS generated 70416 samples
2025-06-09 20:00:37,952 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:00:37,953 - jarvis_app - INFO - TTS processing phrase: 'They communicate through vocalizations, body language, and behavior.'
2025-06-09 20:00:37,957 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'They communicate through vocalizations']
2025-06-09 20:00:38,143 - root - DEBUG - line: b'\xc3\xb0_e\xc9\xaa k_\xc9\x99_m_j_\xcb\x88u\xcb\x90_n_\xe1\xb5\xbb_k_\xcb\x8ce\xc9\xaa_t \xce\xb8_\xc9\xb9_u\xcb\x90 v_\xcb\x8co\xca\x8a_k_\xc9\x99_l_\xe1\xb5\xbb_z_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n_z\n'
2025-06-09 20:00:38,143 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'body language']
2025-06-09 20:00:38,270 - root - DEBUG - line: b'b_\xcb\x88\xc9\x91\xcb\x90_d_i l_\xcb\x88\xc3\xa6_\xc5\x8b_\xc9\xa1_w_\xc9\xaa_d\xca\x92\n'
2025-06-09 20:00:38,271 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and behavior']
2025-06-09 20:00:38,397 - root - DEBUG - line: b'\xc3\xa6_n_d b_\xe1\xb5\xbb_h_\xcb\x88e\xc9\xaa_v_j_\xc9\x9a\n'
2025-06-09 20:00:39,085 - jarvis_app - INFO - TTS generated 79888 samples
2025-06-09 20:00:42,827 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:00:42,827 - jarvis_app - INFO - TTS processing phrase: 'Their diet mainly consists of meat, but they can also eat grains and vegetables.'
2025-06-09 20:00:42,829 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Their diet mainly consists of meat']
2025-06-09 20:00:42,986 - root - DEBUG - line: b'\xc3\xb0_\xc9\x9b\xc9\xb9 d_\xcb\x88a\xc9\xaa\xc9\x99_t m_\xcb\x88e\xc9\xaa_n_l_i k_\xc9\x99_n_s_\xcb\x88\xc9\xaa_s_t_s \xca\x8c_v m_\xcb\x88i\xcb\x90_t\n'
2025-06-09 20:00:42,987 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'but they can also eat grains and vegetables']
2025-06-09 20:00:43,116 - root - DEBUG - line: b'b_\xcb\x8c\xca\x8c_t \xc3\xb0_e\xc9\xaa k_\xc3\xa6_n \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a \xcb\x88i\xcb\x90_t \xc9\xa1_\xc9\xb9_\xcb\x88e\xc9\xaa_n_z__ \xc3\xa6_n_d v_\xcb\x88\xc9\x9b_d\xca\x92_\xc9\xaa_\xc9\xbe_\xc9\x99_b_\xc9\x99l_z\n'
2025-06-09 20:00:43,766 - jarvis_app - INFO - TTS generated 85008 samples
2025-06-09 20:00:47,740 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:00:47,740 - jarvis_app - INFO - TTS processing phrase: 'Dogs have been human companions for thousands of years.'
2025-06-09 20:00:47,745 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Dogs have been human companions for thousands of years']
2025-06-09 20:00:47,930 - root - DEBUG - line: b'd_\xcb\x88\xc9\x91\xcb\x90_\xc9\xa1_z h_\xc9\x90_v_b_\xc9\xaa_n h_j_\xcb\x88u\xcb\x90_m_\xc9\x99_n k_\xc9\x99_m_p_\xcb\x88\xc3\xa6_n_i\xc9\x99_n_z f_\xc9\x94\xcb\x90\xc9\xb9 \xce\xb8_\xcb\x88a\xca\x8a_z_\xc9\x99_n_d_z \xca\x8c_v j_\xcb\x88\xc9\xaa\xc9\xb9_z\n'
2025-06-09 20:00:48,358 - jarvis_app - INFO - TTS generated 63248 samples
2025-06-09 20:00:51,304 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:00:51,357 - jarvis_app - DEBUG - Sending message to client: 'There are hundreds of breeds, each with unique traits and characteristics.'
2025-06-09 20:00:51,397 - jarvis_app - DEBUG - Sending message to client: 'Dogs are often used for work, therapy, and as pets.'
2025-06-09 20:00:51,563 - jarvis_app - DEBUG - Sending message to client: 'They communicate through vocalizations, body language, and behavior.'
2025-06-09 20:00:51,600 - jarvis_app - DEBUG - Sending message to client: 'Their diet mainly consists of meat, but they can also eat grains and vegetables.'
2025-06-09 20:00:51,766 - jarvis_app - DEBUG - Sending message to client: 'Dogs have been human companions for thousands of years.'
2025-06-09 20:05:14,873 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:05:14,874 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:05:14,874 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:05:14,874 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:05:14,875 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:14] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:05:14,878 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:05:15,056 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:05:15,067 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:05:15,513 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:05:15,671 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:05:15,924 - jarvis_app - INFO - TTS generated 92448 samples
2025-06-09 20:05:19,315 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:19] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:05:19,316 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:05:19,316 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:05:19,328 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:19] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:05:19,329 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:05:19,329 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:05:20,217 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:05:20,318 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:20] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:05:20,322 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:20] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:05:20,334 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:20] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:05:20,335 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:20] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:05:26,637 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:26] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:05:26,640 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:05:26,645 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:05:27,644 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:27] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:05:27,649 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:27] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:05:51,370 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:05:51,370 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:05:51,370 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:05:51,370 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:05:51,370 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:05:51,371 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:05:51] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:05:51,372 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:05:51,547 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:05:52,027 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:05:52,180 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:05:52,408 - jarvis_app - INFO - TTS generated 92704 samples
2025-06-09 20:05:56,704 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:06:00,010 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:06:00,011 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryY9cHnubFYXvdMO3U
2025-06-09 20:06:00,013 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:06:00,013 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryY9cHnubFYXvdMO3U
Sec-Fetch-Site: same-site
Origin: http://localhost:3001
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3001/
Sec-Fetch-Dest: empty
Content-Length: 66962
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:06:00,013 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:06:00,016 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:06:01,250 - jarvis_app - INFO - Transcription result: Hey Jarvis, how's your day going?
2025-06-09 20:06:01,251 - jarvis_app - INFO - Sending prompt to OpenAI: , how's your day going
2025-06-09 20:06:01,251 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:06:01,252 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fd1df9b1-ae51-4058-870e-52a4f39135a5', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ", how's your day going"}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:06:01,253 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:06:01,253 - httpcore.connection - DEBUG - close.started
2025-06-09 20:06:01,254 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:06:01,254 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:06:01,286 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687b7700>
2025-06-09 20:06:01,286 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:06:01,302 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c7b20>
2025-06-09 20:06:01,302 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:06:01,302 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:06:01,302 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:06:01,303 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:06:01,303 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:06:01,409 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "Hey Jarvis, how's your day going?"}
2025-06-09 20:06:02,038 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:06:02 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'397'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'442'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199962'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_38cd5559be252d47e453b4b9aa3ea590'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5a67e4c95a63b-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:06:02,040 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:06:02,040 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:06:02 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '397', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '442', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199962', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '11ms', 'x-request-id': 'req_38cd5559be252d47e453b4b9aa3ea590', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5a67e4c95a63b-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:06:02,041 - openai._base_client - DEBUG - request_id: req_38cd5559be252d47e453b4b9aa3ea590
2025-06-09 20:06:02,041 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:06:02,190 - jarvis_app - DEBUG - Sending message to client: 'I'm here and ready to help you!'
2025-06-09 20:06:02,190 - jarvis_app - INFO - TTS processing phrase: 'I'm here and ready to help you!'
2025-06-09 20:06:02,193 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm here and ready to help you"]
2025-06-09 20:06:02,334 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:06:02,340 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:06:02,340 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:06:02,341 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:06:02,341 - jarvis_app - INFO - Full response: I'm here and ready to help you! How can I assist you today?
2025-06-09 20:06:02,341 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm here and ready to help you! How can I assist you today?"}
2025-06-09 20:06:02,342 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:06:02] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:06:02,389 - root - DEBUG - line: b'a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xc9\x99 h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90\n'
2025-06-09 20:06:02,695 - jarvis_app - INFO - TTS generated 40720 samples
2025-06-09 20:06:04,617 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:06:04,618 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:06:04,622 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:06:04,776 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:06:05,065 - jarvis_app - INFO - TTS generated 37648 samples
2025-06-09 20:06:06,854 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:11:39,963 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:11:39] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:11:40,091 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:11:40,091 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:11:41,091 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:11:41] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:11:41,093 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:11:41] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:12:21,616 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:21] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:12:21,630 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:12:21,631 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:12:22,631 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:22] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:12:22,636 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:22] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:12:29,581 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:12:29,581 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:12:29,581 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:12:29,581 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:12:29,582 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:29] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:12:29,584 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:12:29,658 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:12:29,766 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:12:30,204 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:12:30,348 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:12:30,573 - jarvis_app - INFO - TTS generated 92192 samples
2025-06-09 20:12:34,870 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:12:41,582 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:41] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:12:41,583 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:12:41,585 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:12:42,586 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:42] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:12:42,586 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:42] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:12:45,862 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:12:45,862 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryCMiyeVYBGny4k8cj
2025-06-09 20:12:45,865 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:12:45,866 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryCMiyeVYBGny4k8cj
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 61532
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:12:45,866 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:12:45,868 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:12:47,181 - jarvis_app - INFO - Transcription result: In JAVIS, how are you?
2025-06-09 20:12:47,182 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:47] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:12:47,606 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'In JAVIS, how are you?'}
2025-06-09 20:12:51,954 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:12:51,955 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarywFk9xl97EBPA12kJ
2025-06-09 20:12:51,957 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:12:51,957 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarywFk9xl97EBPA12kJ
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 58057
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:12:51,957 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:12:51,959 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:12:52,970 - jarvis_app - INFO - Transcription result: Hey Jarvis, how are you?
2025-06-09 20:12:52,970 - jarvis_app - INFO - Sending prompt to OpenAI: , how are you
2025-06-09 20:12:52,970 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:12:52,972 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7bfec466-5c48-479a-813b-eff2553ec698', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', how are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:12:52,973 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:12:52,973 - httpcore.connection - DEBUG - close.started
2025-06-09 20:12:52,973 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:12:52,974 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:12:53,008 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687b5360>
2025-06-09 20:12:53,008 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:12:53,025 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687b62c0>
2025-06-09 20:12:53,025 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:12:53,026 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:12:53,026 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:12:53,026 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:12:53,026 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:12:53,627 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, how are you?'}
2025-06-09 20:12:53,664 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:12:53 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'143'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'202'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_d4cbef708c46e7bc892bd91ba4710e17'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5b08b8c527ada-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:12:53,666 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:12:53,666 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:12:53 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '143', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '202', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199965', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_d4cbef708c46e7bc892bd91ba4710e17', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5b08b8c527ada-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:12:53,666 - openai._base_client - DEBUG - request_id: req_d4cbef708c46e7bc892bd91ba4710e17
2025-06-09 20:12:53,667 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:12:53,910 - jarvis_app - DEBUG - Sending message to client: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:12:53,910 - jarvis_app - INFO - TTS processing phrase: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:12:53,914 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm just a program"]
2025-06-09 20:12:54,003 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:12:54,005 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:12:54,006 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:12:54,006 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:12:54,006 - jarvis_app - INFO - Full response: I'm just a program, but I'm here and ready to help you! How can I assist you today?
2025-06-09 20:12:54,006 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm just a program, but I'm here and ready to help you! How can I assist you today?"}
2025-06-09 20:12:54,008 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:12:54] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:12:54,134 - root - DEBUG - line: b'a\xc9\xaa_m d\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\x90 p_\xc9\xb9_\xcb\x88o\xca\x8a_\xc9\xa1_\xc9\xb9_\xc3\xa6_m\n'
2025-06-09 20:12:54,134 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "but I'm here and ready to help you"]
2025-06-09 20:12:54,284 - root - DEBUG - line: b'b_\xcb\x8c\xca\x8c_t a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xc9\x99 h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90\n'
2025-06-09 20:12:54,738 - jarvis_app - INFO - TTS generated 64016 samples
2025-06-09 20:12:57,732 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:12:57,733 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:12:57,736 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:12:57,893 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:12:58,183 - jarvis_app - INFO - TTS generated 39184 samples
2025-06-09 20:13:00,062 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:15:14,463 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:15:14] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:15:14,464 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:15:14,464 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:15:14,713 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:15:14] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:15:14,713 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:15:14,714 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:15:15,469 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:15:15] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:15:15,470 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:15:15] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:15:15,719 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:15:15] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:15:15,719 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:15:15] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:16:04,992 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:16:04] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:16:05,009 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:16:05,010 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:16:06,014 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:16:06] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:16:06,014 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:16:06] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:16:10,144 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:16:10,144 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:16:10,144 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:16:10,145 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:16:10] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:16:10,148 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:16:10,339 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:16:10,663 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:16:10,677 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:16:10,779 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:16:10,922 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:16:11,150 - jarvis_app - INFO - TTS generated 91936 samples
2025-06-09 20:16:15,393 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:16:19,831 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:16:19,831 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryBIXmA6371MOUHBSU
2025-06-09 20:16:19,833 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:16:19,833 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryBIXmA6371MOUHBSU
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 58994
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:16:19,833 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:16:19,835 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:16:21,068 - jarvis_app - INFO - Transcription result: Hey Jarvis, how are you?
2025-06-09 20:16:21,069 - jarvis_app - INFO - Sending prompt to OpenAI: , how are you
2025-06-09 20:16:21,069 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, how are you?'}
2025-06-09 20:16:21,070 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a502ad6c-7ea0-453b-80b9-fbc3ee0b30a2', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', how are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:16:21,070 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:16:21,071 - httpcore.connection - DEBUG - close.started
2025-06-09 20:16:21,071 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:16:21,071 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:16:21,071 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:16:21,097 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f9a8c0>
2025-06-09 20:16:21,097 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:16:21,114 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f9aa40>
2025-06-09 20:16:21,114 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:16:21,114 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:16:21,114 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:16:21,114 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:16:21,114 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:16:21,454 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:16:21 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'251'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'255'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_c67797b6f5e5ac54f8f6b71397eff3b7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Fg3L5uDgoaVZzrPTBOTwhfebR8ADd75qUEVXHv9nP6c-1749525381-1.0.1.1-U_RXEsmLZba9Jg6wZfl5kl6RjwQnjbOtMX9h3ndize0sceJoiljwPjIC1nb3CIwT.XOY7.gHyIMZ0Qgl3Oonoj5RTNZ_SD2kLrakIjuoe4c; path=/; expires=Tue, 10-Jun-25 03:46:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5b5a01ed2d021-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:16:21,458 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:16:21,458 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:16:21 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '251', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '255', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199965', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_c67797b6f5e5ac54f8f6b71397eff3b7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Fg3L5uDgoaVZzrPTBOTwhfebR8ADd75qUEVXHv9nP6c-1749525381-1.0.1.1-U_RXEsmLZba9Jg6wZfl5kl6RjwQnjbOtMX9h3ndize0sceJoiljwPjIC1nb3CIwT.XOY7.gHyIMZ0Qgl3Oonoj5RTNZ_SD2kLrakIjuoe4c; path=/; expires=Tue, 10-Jun-25 03:46:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5b5a01ed2d021-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:16:21,458 - openai._base_client - DEBUG - request_id: req_c67797b6f5e5ac54f8f6b71397eff3b7
2025-06-09 20:16:21,459 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:16:22,071 - jarvis_app - DEBUG - Sending message to client: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:16:22,071 - jarvis_app - INFO - TTS processing phrase: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:16:22,076 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:16:22,077 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm just a program"]
2025-06-09 20:16:22,077 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:16:22,078 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:16:22,098 - jarvis_app - INFO - Full response: I'm just a program, but I'm here and ready to help you!
2025-06-09 20:16:22,101 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:16:22] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:16:22,252 - root - DEBUG - line: b'a\xc9\xaa_m d\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\x90 p_\xc9\xb9_\xcb\x88o\xca\x8a_\xc9\xa1_\xc9\xb9_\xc3\xa6_m\n'
2025-06-09 20:16:22,253 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "but I'm here and ready to help you"]
2025-06-09 20:16:22,377 - root - DEBUG - line: b'b_\xcb\x8c\xca\x8c_t a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xc9\x99 h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90\n'
2025-06-09 20:16:22,787 - jarvis_app - INFO - TTS generated 64784 samples
2025-06-09 20:16:23,081 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm just a program, but I'm here and ready to help you!"}
2025-06-09 20:16:25,832 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:16:56,051 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:16:56,052 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary5cQugIjXPcbpVOmv
2025-06-09 20:16:56,054 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:16:56,054 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary5cQugIjXPcbpVOmv
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 80696
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:16:56,054 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:16:56,057 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:16:57,152 - jarvis_app - INFO - Transcription result: Hey Javis, how's your day going?
2025-06-09 20:16:57,153 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:16:57] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:16:57,183 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "Hey Javis, how's your day going?"}
2025-06-09 20:17:02,286 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:17:02,286 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarystdAIWGfBpyf8kCZ
2025-06-09 20:17:02,287 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:17:02,287 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarystdAIWGfBpyf8kCZ
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 68217
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:17:02,287 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:17:02,288 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:17:03,427 - jarvis_app - INFO - Transcription result: Hey Jarvis, how's your day going?
2025-06-09 20:17:03,427 - jarvis_app - INFO - Sending prompt to OpenAI: , how's your day going
2025-06-09 20:17:03,427 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "Hey Jarvis, how's your day going?"}
2025-06-09 20:17:03,429 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9377850c-2d3f-4911-bafa-5ddd3d655cee', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ", how's your day going"}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:17:03,430 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:17:03,430 - httpcore.connection - DEBUG - close.started
2025-06-09 20:17:03,431 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:17:03,431 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:17:03,446 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687b4e80>
2025-06-09 20:17:03,446 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:17:03,462 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687b76a0>
2025-06-09 20:17:03,463 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:17:03,463 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:17:03,465 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:17:03,465 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:17:03,465 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:17:03,607 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:17:04,260 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:17:04 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'312'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'318'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199962'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_83ddd6cabc81b9f0201c2ceffa5acbb2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5b6a8cc01cf2b-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:17:04,261 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:17:04,261 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:17:04 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '312', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '318', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199962', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '11ms', 'x-request-id': 'req_83ddd6cabc81b9f0201c2ceffa5acbb2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5b6a8cc01cf2b-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:17:04,262 - openai._base_client - DEBUG - request_id: req_83ddd6cabc81b9f0201c2ceffa5acbb2
2025-06-09 20:17:04,262 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:17:04,479 - jarvis_app - INFO - TTS processing phrase: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:17:04,479 - jarvis_app - DEBUG - Sending message to client: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:17:04,481 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm just a program"]
2025-06-09 20:17:04,567 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:17:04,573 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:17:04,574 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:17:04,574 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:17:04,574 - jarvis_app - INFO - Full response: I'm just a program, but I'm here and ready to help you! How can I assist you today?
2025-06-09 20:17:04,575 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:17:04] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:17:04,652 - root - DEBUG - line: b'a\xc9\xaa_m d\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\x90 p_\xc9\xb9_\xcb\x88o\xca\x8a_\xc9\xa1_\xc9\xb9_\xc3\xa6_m\n'
2025-06-09 20:17:04,652 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "but I'm here and ready to help you"]
2025-06-09 20:17:04,775 - root - DEBUG - line: b'b_\xcb\x8c\xca\x8c_t a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xc9\x99 h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90\n'
2025-06-09 20:17:05,225 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm just a program, but I'm here and ready to help you! How can I assist you today?"}
2025-06-09 20:17:05,271 - jarvis_app - INFO - TTS generated 67344 samples
2025-06-09 20:17:08,407 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:17:08,407 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:17:08,410 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:17:08,591 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:17:08,940 - jarvis_app - INFO - TTS generated 40720 samples
2025-06-09 20:17:10,866 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:17:13,070 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:17:13] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:17:13,082 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:17:13,083 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:17:14,087 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:17:14] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:17:14,089 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:17:14] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:17:19,247 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:17:19,248 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryTBxB5zjllnrF8MND
2025-06-09 20:17:19,270 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:17:19,270 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryTBxB5zjllnrF8MND
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 102028
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:17:19,270 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:17:19,288 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:17:20,515 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about Barcelona?
2025-06-09 20:17:20,515 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about Barcelona
2025-06-09 20:17:20,517 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dd176941-c425-4f0a-966a-6becfec352da', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', can you tell me a little about Barcelona'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:17:20,518 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:17:20,518 - httpcore.connection - DEBUG - close.started
2025-06-09 20:17:20,518 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:17:20,518 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:17:20,534 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1699885e0>
2025-06-09 20:17:20,534 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:17:20,552 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c76a0>
2025-06-09 20:17:20,552 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:17:20,552 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:17:20,552 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:17:20,552 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:17:20,552 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:17:20,956 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:17:21,115 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about Barcelona?'}
2025-06-09 20:17:21,571 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:17:21 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'456'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'529'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199957'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_ccf49b19e1c69ae2a1cd4208c9d58e79'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5b7139fdc15b6-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:17:21,572 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:17:21,572 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:17:21 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '456', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '529', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199957', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_ccf49b19e1c69ae2a1cd4208c9d58e79', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5b7139fdc15b6-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:17:21,572 - openai._base_client - DEBUG - request_id: req_ccf49b19e1c69ae2a1cd4208c9d58e79
2025-06-09 20:17:21,573 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:17:22,030 - jarvis_app - DEBUG - Sending message to client: 'Barcelona is a vibrant city in Spain known for its unique architecture, rich culture, and beautiful beaches.'
2025-06-09 20:17:22,031 - jarvis_app - INFO - TTS processing phrase: 'Barcelona is a vibrant city in Spain known for its unique architecture, rich culture, and beautiful beaches.'
2025-06-09 20:17:22,033 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Barcelona is a vibrant city in Spain known for its unique architecture']
2025-06-09 20:17:22,199 - root - DEBUG - line: b'b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99 \xc9\xaa_z \xc9\x90 v_\xcb\x88a\xc9\xaa_b_\xc9\xb9_\xc9\x99_n_t s_\xcb\x88\xc9\xaa_\xc9\xbe_i_ \xc9\xaa_n s_p_\xcb\x88e\xc9\xaa_n n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s j_u\xcb\x90_n_\xcb\x88i\xcb\x90_k \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k_\xc9\xaa_t_\xcb\x8c\xc9\x9b_k_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:17:22,199 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'rich culture']
2025-06-09 20:17:22,324 - root - DEBUG - line: b'\xc9\xb9_\xcb\x88\xc9\xaa_t\xca\x83 k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:17:22,324 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and beautiful beaches']
2025-06-09 20:17:22,446 - root - DEBUG - line: b'\xc3\xa6_n_d b_j_\xcb\x88u\xcb\x90_\xc9\xbe_i_f_\xc9\x99l b_\xcb\x88i\xcb\x90_t\xca\x83_\xe1\xb5\xbb_z\n'
2025-06-09 20:17:23,170 - jarvis_app - DEBUG - Sending message to client: 'It is the capital of Catalonia and features landmarks like the Sagrada Família, Park Güell, and Casa Batlló, designed by Antoni Gaudí.'
2025-06-09 20:17:23,186 - jarvis_app - INFO - TTS generated 116752 samples
2025-06-09 20:17:23,298 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:17:23,298 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:17:23,298 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:17:23,299 - jarvis_app - INFO - Full response: Barcelona is a vibrant city in Spain known for its unique architecture, rich culture, and beautiful beaches. It is the capital of Catalonia and features landmarks like the Sagrada Família, Park Güell, and Casa Batlló, designed by Antoni Gaudí. The city has a rich history, is famous for its football team FC Barcelona, and offers a lively arts scene, delicious cuisine, and a bustling nightlife. The Mediterranean climate makes it a popular tourist destination year-round.
2025-06-09 20:17:23,299 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Barcelona is a vibrant city in Spain known for its unique architecture, rich culture, and beautiful beaches. It is the capital of Catalonia and features landmarks like the Sagrada Família, Park Güell, and Casa Batlló, designed by Antoni Gaudí. The city has a rich history, is famous for its football team FC Barcelona, and offers a lively arts scene, delicious cuisine, and a bustling nightlife. The Mediterranean climate makes it a popular tourist destination year-round.'}
2025-06-09 20:17:23,299 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:17:23] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:17:28,597 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:17:28,597 - jarvis_app - INFO - TTS processing phrase: 'It is the capital of Catalonia and features landmarks like the Sagrada Família, Park Güell, and Casa Batlló, designed by Antoni Gaudí.'
2025-06-09 20:17:28,600 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'It is the capital of Catalonia and features landmarks like the Sagrada Família']
2025-06-09 20:17:28,773 - root - DEBUG - line: b'\xc9\xaa_\xc9\xbe \xc9\xaa_z \xc3\xb0_\xc9\x99 k_\xcb\x88\xc3\xa6_p_\xc9\xaa_\xc9\xbe_\xc9\x99l \xca\x8c_v k_\xcb\x8c\xc3\xa6_\xc9\xbe_\xc9\x90_l_\xcb\x88o\xca\x8a_n_i\xc9\x99__ \xc3\xa6_n_d f_\xcb\x88i\xcb\x90_t\xca\x83_\xc9\x9a_z l_\xcb\x88\xc3\xa6_n_d_m_\xc9\x91\xcb\x90\xc9\xb9_k_s l_\xcb\x88a\xc9\xaa_k \xc3\xb0_\xc9\x99 s_\xc3\xa6_\xc9\xa1_\xc9\xb9_\xcb\x88\xc9\x91\xcb\x90_d_\xc9\x99 f_\xc3\xa6_m_\xcb\x88\xc9\xaa_l_i\xc9\x99\n'
2025-06-09 20:17:28,773 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Park Güell']
2025-06-09 20:17:28,905 - root - DEBUG - line: b'p_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k \xc9\xa1_\xcb\x88u\xcb\x90_\xc9\x9b_l\n'
2025-06-09 20:17:28,905 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and Casa Batlló']
2025-06-09 20:17:29,030 - root - DEBUG - line: b'\xc3\xa6_n_d k_\xcb\x88\xc9\x91\xcb\x90_s_\xc9\x99 b_\xcb\x88\xc3\xa6_t_l_o\xca\x8a\n'
2025-06-09 20:17:29,030 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'designed by Antoni Gaudí']
2025-06-09 20:17:29,158 - root - DEBUG - line: b'd_\xc9\xaa_z_\xcb\x88a\xc9\xaa_n_d b_a\xc9\xaa \xc3\xa6_n_t_\xcb\x88o\xca\x8a_n_i \xc9\xa1_\xcb\x88\xc9\x94\xcb\x90_d_i\n'
2025-06-09 20:17:30,019 - jarvis_app - INFO - TTS generated 150800 samples
2025-06-09 20:17:36,965 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:17:36,966 - jarvis_app - INFO - TTS processing phrase: 'The city has a rich history, is famous for its football team FC Barcelona, and offers a lively arts scene, delicious cuisine, and a bustling nightlife.'
2025-06-09 20:17:36,971 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The city has a rich history']
2025-06-09 20:17:37,130 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\xaa_\xc9\xbe_i h_\xc9\x90_z \xc9\x90 \xc9\xb9_\xcb\x88\xc9\xaa_t\xca\x83 h_\xcb\x88\xc9\xaa_s_t_\xc9\x9a_\xc9\xb9_i\n'
2025-06-09 20:17:37,130 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'is famous for its football team FC Barcelona']
2025-06-09 20:17:37,257 - root - DEBUG - line: b'\xc9\xaa_z f_\xcb\x88e\xc9\xaa_m_\xc9\x99_s f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s f_\xcb\x88\xca\x8a_t_b_\xc9\x94\xcb\x90_l t_\xcb\x88i\xcb\x90_m \xcb\x8c\xc9\x9b_f_s_\xcb\x88i\xcb\x90 b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99\n'
2025-06-09 20:17:37,257 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and offers a lively arts scene']
2025-06-09 20:17:37,383 - root - DEBUG - line: b'\xc3\xa6_n_d \xcb\x88\xc9\x94_f_\xc9\x9a_z \xc9\x90 l_\xcb\x88a\xc9\xaa_v_l_i_ \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_t_s s_\xcb\x88i\xcb\x90_n\n'
2025-06-09 20:17:37,383 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'delicious cuisine']
2025-06-09 20:17:37,508 - root - DEBUG - line: b'd_\xe1\xb5\xbb_l_\xcb\x88\xc9\xaa_\xca\x83_\xc9\x99_s k_w_\xe1\xb5\xbb_z_\xcb\x88i\xcb\x90_n\n'
2025-06-09 20:17:37,508 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and a bustling nightlife']
2025-06-09 20:17:37,631 - root - DEBUG - line: b'\xc3\xa6_n_d \xc9\x90 b_\xcb\x88\xca\x8c_s_\xc9\x99l_\xc9\xaa_\xc5\x8b n_\xcb\x88a\xc9\xaa_t_l_a\xc9\xaa_f\n'
2025-06-09 20:17:38,548 - jarvis_app - INFO - TTS generated 164368 samples
2025-06-09 20:17:46,094 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:17:46,094 - jarvis_app - INFO - TTS processing phrase: 'The Mediterranean climate makes it a popular tourist destination year-round.'
2025-06-09 20:17:46,096 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The Mediterranean climate makes it a popular tourist destination year round']
2025-06-09 20:17:46,254 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 m_\xcb\x8c\xc9\x9b_d_\xc9\xaa_\xc9\xbe_\xc9\xaa_\xc9\xb9_\xcb\x88e\xc9\xaa_n_i\xc9\x99_n k_l_\xcb\x88a\xc9\xaa_m_\xc9\x99_t m_\xcb\x8ce\xc9\xaa_k_s \xc9\xaa_\xc9\xbe \xc9\x90 p_\xcb\x88\xc9\x91\xcb\x90_p_j_\xca\x8a_l_\xc9\x9a t_\xcb\x88\xca\x8a\xc9\xb9_\xc9\xb9_\xc9\xaa_s_t d_\xcb\x8c\xc9\x9b_s_t_\xc9\xaa_n_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n j_\xcb\x88\xc9\xaa\xc9\xb9 \xc9\xb9_\xcb\x88a\xca\x8a_n_d\n'
2025-06-09 20:17:46,768 - jarvis_app - INFO - TTS generated 81168 samples
2025-06-09 20:17:50,551 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:17:50,566 - jarvis_app - DEBUG - Sending message to client: 'The city has a rich history, is famous for its football team FC Barcelona, and offers a lively arts scene, delicious cuisine, and a bustling nightlife.'
2025-06-09 20:17:50,577 - jarvis_app - DEBUG - Sending message to client: 'The Mediterranean climate makes it a popular tourist destination year-round.'
2025-06-09 20:17:53,923 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:17:53,924 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:17:53,924 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:17:53,924 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:17:53,925 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:17:53] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:17:53,927 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:17:54,125 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:17:54,600 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:17:54,754 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:17:54,791 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:17:55,030 - jarvis_app - INFO - TTS generated 95008 samples
2025-06-09 20:17:59,421 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:18:33,858 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:18:33] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:18:33,874 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:18:33,875 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:18:34,880 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:18:34] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:18:34,881 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:18:34] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:18:41,698 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:18:41,698 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryva1hbPfyuYhdTTh4
2025-06-09 20:18:41,701 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:18:41,702 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryva1hbPfyuYhdTTh4
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 70344
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:18:41,702 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:18:41,704 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:18:42,891 - jarvis_app - INFO - Transcription result: Hey Jarvis, how's your diggling?
2025-06-09 20:18:42,892 - jarvis_app - INFO - Sending prompt to OpenAI: , how's your diggling
2025-06-09 20:18:42,892 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "Hey Jarvis, how's your diggling?"}
2025-06-09 20:18:42,892 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:18:42,893 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9d42deaf-c47d-4164-b40b-08671be666c6', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ", how's your diggling"}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:18:42,895 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:18:42,895 - httpcore.connection - DEBUG - close.started
2025-06-09 20:18:42,895 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:18:42,895 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:18:42,928 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c78e0>
2025-06-09 20:18:42,928 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:18:42,944 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c74f0>
2025-06-09 20:18:42,944 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:18:42,944 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:18:42,944 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:18:42,944 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:18:42,944 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:18:43,279 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:18:43 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'225'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'231'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199962'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_638881a8ca74077aae494a4c27d64ecf'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5b9168e3fcf7a-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:18:43,280 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:18:43,280 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:18:43 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '225', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '231', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199962', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '11ms', 'x-request-id': 'req_638881a8ca74077aae494a4c27d64ecf', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5b9168e3fcf7a-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:18:43,281 - openai._base_client - DEBUG - request_id: req_638881a8ca74077aae494a4c27d64ecf
2025-06-09 20:18:43,281 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:18:43,429 - jarvis_app - DEBUG - Sending message to client: 'I'm here and ready to assist you!'
2025-06-09 20:18:43,430 - jarvis_app - INFO - TTS processing phrase: 'I'm here and ready to assist you!'
2025-06-09 20:18:43,434 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm here and ready to assist you"]
2025-06-09 20:18:43,529 - jarvis_app - DEBUG - Sending message to client: 'How can I help?'
2025-06-09 20:18:43,537 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:18:43,537 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:18:43,537 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:18:43,537 - jarvis_app - INFO - Full response: I'm here and ready to assist you! How can I help?
2025-06-09 20:18:43,537 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm here and ready to assist you! How can I help?"}
2025-06-09 20:18:43,538 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:18:43] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:18:43,616 - root - DEBUG - line: b'a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90\n'
2025-06-09 20:18:43,927 - jarvis_app - INFO - TTS generated 44048 samples
2025-06-09 20:18:46,046 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:18:46,047 - jarvis_app - INFO - TTS processing phrase: 'How can I help?'
2025-06-09 20:18:46,050 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I help']
2025-06-09 20:18:46,223 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa h_\xcb\x88\xc9\x9b_l_p\n'
2025-06-09 20:18:46,472 - jarvis_app - INFO - TTS generated 26640 samples
2025-06-09 20:18:47,798 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:18:53,877 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:18:53,878 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryXYJTYIv0EeAr2uFH
2025-06-09 20:18:53,881 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:18:53,882 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryXYJTYIv0EeAr2uFH
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 121268
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:18:53,882 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:18:53,885 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:18:55,009 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about Barcelona?
2025-06-09 20:18:55,009 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about Barcelona
2025-06-09 20:18:55,011 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ac99b4c8-6975-4780-aa12-ee8e5306425b', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', can you tell me a little about Barcelona'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:18:55,012 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:18:55,012 - httpcore.connection - DEBUG - close.started
2025-06-09 20:18:55,012 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:18:55,012 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:18:55,028 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f9b100>
2025-06-09 20:18:55,028 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:18:55,045 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687b4790>
2025-06-09 20:18:55,046 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:18:55,046 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:18:55,046 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:18:55,046 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:18:55,046 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:18:55,566 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:18:55 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'230'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'238'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199957'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_f36883856b46f42ef6a62b66d8938361'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5b9623d196429-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:18:55,567 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:18:55,568 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:18:55 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '230', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '238', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199957', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_f36883856b46f42ef6a62b66d8938361', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5b9623d196429-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:18:55,568 - openai._base_client - DEBUG - request_id: req_f36883856b46f42ef6a62b66d8938361
2025-06-09 20:18:55,568 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:18:55,571 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about Barcelona?'}
2025-06-09 20:18:55,906 - jarvis_app - INFO - TTS processing phrase: 'Barcelona is the capital of Catalonia, Spain, known for its rich history, stunning architecture, and vibrant culture.'
2025-06-09 20:18:55,910 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Barcelona is the capital of Catalonia']
2025-06-09 20:18:55,929 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:18:55,930 - jarvis_app - DEBUG - Sending message to client: 'Barcelona is the capital of Catalonia, Spain, known for its rich history, stunning architecture, and vibrant culture.'
2025-06-09 20:18:56,083 - root - DEBUG - line: b'b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99 \xc9\xaa_z \xc3\xb0_\xc9\x99 k_\xcb\x88\xc3\xa6_p_\xc9\xaa_\xc9\xbe_\xc9\x99l \xca\x8c_v k_\xcb\x8c\xc3\xa6_\xc9\xbe_\xc9\x90_l_\xcb\x88o\xca\x8a_n_i\xc9\x99\n'
2025-06-09 20:18:56,083 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Spain']
2025-06-09 20:18:56,208 - root - DEBUG - line: b's_p_\xcb\x88e\xc9\xaa_n\n'
2025-06-09 20:18:56,209 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'known for its rich history']
2025-06-09 20:18:56,327 - root - DEBUG - line: b'n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s \xc9\xb9_\xcb\x88\xc9\xaa_t\xca\x83 h_\xcb\x88\xc9\xaa_s_t_\xc9\x9a_\xc9\xb9_i\n'
2025-06-09 20:18:56,327 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'stunning architecture']
2025-06-09 20:18:56,445 - root - DEBUG - line: b's_t_\xcb\x88\xca\x8c_n_\xc9\xaa_\xc5\x8b \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k_\xc9\xaa_t_\xcb\x8c\xc9\x9b_k_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:18:56,445 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and vibrant culture']
2025-06-09 20:18:56,533 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:18:56,533 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:18:56,533 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:18:56,534 - jarvis_app - INFO - Full response: Barcelona is the capital of Catalonia, Spain, known for its rich history, stunning architecture, and vibrant culture. Famous landmarks include the Sagrada Família, Park Güell, and La Rambla. The city has a Mediterranean climate, beautiful beaches, and a lively arts scene. It's also known for its football club, FC Barcelona.
2025-06-09 20:18:56,534 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "Barcelona is the capital of Catalonia, Spain, known for its rich history, stunning architecture, and vibrant culture. Famous landmarks include the Sagrada Família, Park Güell, and La Rambla. The city has a Mediterranean climate, beautiful beaches, and a lively arts scene. It's also known for its football club, FC Barcelona."}
2025-06-09 20:18:56,535 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:18:56] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:18:56,573 - root - DEBUG - line: b'\xc3\xa6_n_d v_\xcb\x88a\xc9\xaa_b_\xc9\xb9_\xc9\x99_n_t k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:18:57,295 - jarvis_app - INFO - TTS generated 129808 samples
2025-06-09 20:19:03,265 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:19:03,266 - jarvis_app - INFO - TTS processing phrase: 'Famous landmarks include the Sagrada Família, Park Güell, and La Rambla.'
2025-06-09 20:19:03,271 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Famous landmarks include the Sagrada Família']
2025-06-09 20:19:03,433 - root - DEBUG - line: b'f_\xcb\x88e\xc9\xaa_m_\xc9\x99_s l_\xcb\x88\xc3\xa6_n_d_m_\xc9\x91\xcb\x90\xc9\xb9_k_s \xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d \xc3\xb0_\xc9\x99 s_\xc3\xa6_\xc9\xa1_\xc9\xb9_\xcb\x88\xc9\x91\xcb\x90_d_\xc9\x99 f_\xc3\xa6_m_\xcb\x88\xc9\xaa_l_i\xc9\x99\n'
2025-06-09 20:19:03,434 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Park Güell']
2025-06-09 20:19:03,573 - root - DEBUG - line: b'p_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k \xc9\xa1_\xcb\x88u\xcb\x90_\xc9\x9b_l\n'
2025-06-09 20:19:03,573 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and La Rambla']
2025-06-09 20:19:03,740 - root - DEBUG - line: b'\xc3\xa6_n_d l_\xcb\x8c\xc3\xa6 \xc9\xb9_\xcb\x88\xc3\xa6_m_b_l_\xc9\x99\n'
2025-06-09 20:19:04,245 - jarvis_app - INFO - TTS generated 86032 samples
2025-06-09 20:19:08,264 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:19:08,265 - jarvis_app - INFO - TTS processing phrase: 'The city has a Mediterranean climate, beautiful beaches, and a lively arts scene.'
2025-06-09 20:19:08,266 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The city has a Mediterranean climate']
2025-06-09 20:19:08,426 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\xaa_\xc9\xbe_i h_\xc9\x90_z \xc9\x90 m_\xcb\x8c\xc9\x9b_d_\xc9\xaa_\xc9\xbe_\xc9\xaa_\xc9\xb9_\xcb\x88e\xc9\xaa_n_i\xc9\x99_n k_l_\xcb\x88a\xc9\xaa_m_\xc9\x99_t\n'
2025-06-09 20:19:08,426 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'beautiful beaches']
2025-06-09 20:19:08,554 - root - DEBUG - line: b'b_j_\xcb\x88u\xcb\x90_\xc9\xbe_i_f_\xc9\x99l b_\xcb\x88i\xcb\x90_t\xca\x83_\xe1\xb5\xbb_z\n'
2025-06-09 20:19:08,555 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and a lively arts scene']
2025-06-09 20:19:08,675 - root - DEBUG - line: b'\xc3\xa6_n_d \xc9\x90 l_\xcb\x88a\xc9\xaa_v_l_i_ \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_t_s s_\xcb\x88i\xcb\x90_n\n'
2025-06-09 20:19:09,242 - jarvis_app - INFO - TTS generated 92176 samples
2025-06-09 20:19:13,534 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:19:13,535 - jarvis_app - INFO - TTS processing phrase: 'It's also known for its football club, FC Barcelona.'
2025-06-09 20:19:13,540 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "It's also known for its football club"]
2025-06-09 20:19:13,712 - root - DEBUG - line: b'\xc9\xaa_t_s \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s f_\xcb\x88\xca\x8a_t_b_\xc9\x94\xcb\x90_l k_l_\xcb\x88\xca\x8c_b\n'
2025-06-09 20:19:13,713 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'FC Barcelona']
2025-06-09 20:19:13,841 - root - DEBUG - line: b'\xcb\x8c\xc9\x9b_f_s_\xcb\x88i\xcb\x90 b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99\n'
2025-06-09 20:19:14,270 - jarvis_app - INFO - TTS generated 68880 samples
2025-06-09 20:19:17,497 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:19:17,585 - jarvis_app - DEBUG - Sending message to client: 'Famous landmarks include the Sagrada Família, Park Güell, and La Rambla.'
2025-06-09 20:19:17,589 - jarvis_app - DEBUG - Sending message to client: 'The city has a Mediterranean climate, beautiful beaches, and a lively arts scene.'
2025-06-09 20:19:17,786 - jarvis_app - DEBUG - Sending message to client: 'It's also known for its football club, FC Barcelona.'
2025-06-09 20:24:37,606 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:24:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:24:37,637 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:24:37,638 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:24:38,643 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:24:38] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:24:38,644 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:24:38] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:24:48,293 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:24:48,293 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryqACt8hT3STrnE2fF
2025-06-09 20:24:48,296 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:24:48,296 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryqACt8hT3STrnE2fF
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 62730
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:24:48,296 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:24:48,298 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:24:49,555 - jarvis_app - INFO - Transcription result: Hey Jarvis, how's your day going?
2025-06-09 20:24:49,556 - jarvis_app - INFO - Sending prompt to OpenAI: , how's your day going
2025-06-09 20:24:49,556 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "Hey Jarvis, how's your day going?"}
2025-06-09 20:24:49,556 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:24:49,557 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6a443b5d-e1f2-40af-89da-7b4f93301e2c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ", how's your day going"}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:24:49,558 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:24:49,559 - httpcore.connection - DEBUG - close.started
2025-06-09 20:24:49,559 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:24:49,559 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:24:49,584 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x169989720>
2025-06-09 20:24:49,584 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:24:49,601 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f9a530>
2025-06-09 20:24:49,601 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:24:49,602 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:24:49,602 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:24:49,602 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:24:49,602 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:24:49,837 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:24:49 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'147'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'151'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199962'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_7460422278bb1477494bef37db5ce659'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5c20a2d0f1736-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:24:49,838 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:24:49,838 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:24:49 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '147', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '151', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199962', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '11ms', 'x-request-id': 'req_7460422278bb1477494bef37db5ce659', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5c20a2d0f1736-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:24:49,838 - openai._base_client - DEBUG - request_id: req_7460422278bb1477494bef37db5ce659
2025-06-09 20:24:49,839 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:24:49,913 - jarvis_app - DEBUG - Sending message to client: 'I'm here and ready to help you!'
2025-06-09 20:24:49,913 - jarvis_app - INFO - TTS processing phrase: 'I'm here and ready to help you!'
2025-06-09 20:24:49,916 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm here and ready to help you"]
2025-06-09 20:24:50,027 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:24:50,028 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:24:50,028 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:24:50,028 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:24:50,028 - jarvis_app - INFO - Full response: I'm here and ready to help you! How can I assist you today?
2025-06-09 20:24:50,029 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:24:50] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:24:50,029 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm here and ready to help you! How can I assist you today?"}
2025-06-09 20:24:50,111 - root - DEBUG - line: b'a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xc9\x99 h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90\n'
2025-06-09 20:24:50,456 - jarvis_app - INFO - TTS generated 40720 samples
2025-06-09 20:24:52,382 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:24:52,382 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:24:52,388 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:24:52,556 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:24:52,881 - jarvis_app - INFO - TTS generated 38416 samples
2025-06-09 20:24:54,715 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:24:58,682 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:24:58,682 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryhGbg8uhUSSf29aKY
2025-06-09 20:24:58,687 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:24:58,688 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryhGbg8uhUSSf29aKY
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 89606
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:24:58,688 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:24:58,689 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:24:59,897 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a little about India?
2025-06-09 20:24:59,897 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a little about India
2025-06-09 20:24:59,897 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a little about India?'}
2025-06-09 20:24:59,899 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-449c6eaf-f09e-48e2-b00d-d9b8fa35f6c5', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', can you tell me a little about India'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:24:59,900 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:24:59,900 - httpcore.connection - DEBUG - close.started
2025-06-09 20:24:59,901 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:24:59,901 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:24:59,922 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f9b8e0>
2025-06-09 20:24:59,923 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:24:59,945 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f9a9e0>
2025-06-09 20:24:59,945 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:24:59,946 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:24:59,946 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:24:59,946 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:24:59,946 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:25:00,403 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:25:00 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'188'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'193'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199957'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_30fb66a3cf8c574b8da8c3cb3d2118b6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5c24ad839ebe9-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:25:00,408 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:25:00,408 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:25:00 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '188', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '193', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199957', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_30fb66a3cf8c574b8da8c3cb3d2118b6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5c24ad839ebe9-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:25:00,409 - openai._base_client - DEBUG - request_id: req_30fb66a3cf8c574b8da8c3cb3d2118b6
2025-06-09 20:25:00,409 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:25:00,758 - jarvis_app - INFO - TTS processing phrase: 'India is a country in South Asia, known for its diverse culture, languages, and religions.'
2025-06-09 20:25:00,762 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'India is a country in South Asia']
2025-06-09 20:25:00,814 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:25:00,821 - jarvis_app - DEBUG - Sending message to client: 'India is a country in South Asia, known for its diverse culture, languages, and religions.'
2025-06-09 20:25:00,939 - root - DEBUG - line: b'\xcb\x88\xc9\xaa_n_d_i__\xc9\x99 \xc9\xaa_z \xc9\x90 k_\xcb\x88\xca\x8c_n_t_\xc9\xb9_i_ \xc9\xaa_n s_\xcb\x88a\xca\x8a_\xce\xb8 \xcb\x88e\xc9\xaa_\xca\x92_\xc9\x99\n'
2025-06-09 20:25:00,939 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'known for its diverse culture']
2025-06-09 20:25:01,079 - root - DEBUG - line: b'n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s d_a\xc9\xaa_v_\xcb\x88\xc9\x9c\xcb\x90_s k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:25:01,079 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'languages']
2025-06-09 20:25:01,215 - root - DEBUG - line: b'l_\xcb\x88\xc3\xa6_\xc5\x8b_\xc9\xa1_w_\xc9\xaa_d\xca\x92_\xe1\xb5\xbb_z\n'
2025-06-09 20:25:01,216 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and religions']
2025-06-09 20:25:01,361 - root - DEBUG - line: b'\xc3\xa6_n_d \xc9\xb9_\xe1\xb5\xbb_l_\xcb\x88\xc9\xaa_d\xca\x92_\xc9\x99_n_z\n'
2025-06-09 20:25:02,077 - jarvis_app - INFO - TTS generated 109584 samples
2025-06-09 20:25:03,040 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:25:03,040 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:25:03,040 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:25:03,040 - jarvis_app - INFO - Full response: India is a country in South Asia, known for its diverse culture, languages, and religions. It has a population of over 1. 4 billion people, making it the second most populous country in the world. India has a parliamentary democratic system and is known for its rich history, including ancient civilizations, the Mughal Empire, and British colonization. Major religions like Hinduism, Buddhism, Jainism, and Sikhism originated in India. The country boasts various landscapes, from the Himalayas in the north to coastal regions in the south. India is also famous for its cuisine, festivals, and contributions to art and science.
2025-06-09 20:25:03,040 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'India is a country in South Asia, known for its diverse culture, languages, and religions. It has a population of over 1. 4 billion people, making it the second most populous country in the world. India has a parliamentary democratic system and is known for its rich history, including ancient civilizations, the Mughal Empire, and British colonization. Major religions like Hinduism, Buddhism, Jainism, and Sikhism originated in India. The country boasts various landscapes, from the Himalayas in the north to coastal regions in the south. India is also famous for its cuisine, festivals, and contributions to art and science.'}
2025-06-09 20:25:03,041 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:25:03] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:25:07,161 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:25:07,162 - jarvis_app - INFO - TTS processing phrase: 'It has a population of over 1.'
2025-06-09 20:25:07,168 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'It has a population of over one']
2025-06-09 20:25:07,330 - root - DEBUG - line: b'\xc9\xaa_t h_\xc9\x90_z \xc9\x90 p_\xcb\x8c\xc9\x91\xcb\x90_p_j_\xca\x8a_l_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n \xca\x8c_v \xcb\x88o\xca\x8a_v_\xc9\x9a w_\xcb\x8c\xca\x8c_n\n'
2025-06-09 20:25:07,706 - jarvis_app - INFO - TTS generated 45072 samples
2025-06-09 20:25:09,865 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:25:09,866 - jarvis_app - INFO - TTS processing phrase: '4 billion people, making it the second most populous country in the world.'
2025-06-09 20:25:09,871 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'four billion people']
2025-06-09 20:25:10,055 - root - DEBUG - line: b'f_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9 b_\xcb\x88\xc9\xaa_l_i\xc9\x99_n p_\xcb\x88i\xcb\x90_p_\xc9\x99l\n'
2025-06-09 20:25:10,055 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'making it the second most populous country in the world']
2025-06-09 20:25:10,198 - root - DEBUG - line: b'm_\xcb\x8ce\xc9\xaa_k_\xc9\xaa_\xc5\x8b \xc9\xaa_t \xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\x9b_k_\xc9\x99_n_d m_\xcb\x88o\xca\x8a_s_t p_\xcb\x88\xc9\x91\xcb\x90_p_j_\xca\x8a_l_\xc9\x99_s k_\xcb\x88\xca\x8c_n_t_\xc9\xb9_i_ \xc9\xaa_n_\xc3\xb0_\xc9\x99 w_\xcb\x88\xc9\x9c\xcb\x90_l_d\n'
2025-06-09 20:25:10,783 - jarvis_app - INFO - TTS generated 85008 samples
2025-06-09 20:25:14,752 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:25:14,753 - jarvis_app - INFO - TTS processing phrase: 'India has a parliamentary democratic system and is known for its rich history, including ancient civilizations, the Mughal Empire, and British colonization.'
2025-06-09 20:25:14,762 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'India has a parliamentary democratic system and is known for its rich history']
2025-06-09 20:25:14,945 - root - DEBUG - line: b'\xcb\x88\xc9\xaa_n_d_i__\xc9\x99 h_\xc9\x90_z \xc9\x90 p_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_l_\xc9\x99_m_\xcb\x88\xc9\x9b_n_t_\xc9\x9a_\xc9\xb9_i d_\xcb\x8c\xc9\x9b_m_\xc9\x99_k_\xc9\xb9_\xcb\x88\xc3\xa6_\xc9\xbe_\xc9\xaa_k s_\xcb\x88\xc9\xaa_s_t_\xc9\x99_m__ \xc3\xa6_n_d \xc9\xaa_z n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s \xc9\xb9_\xcb\x88\xc9\xaa_t\xca\x83 h_\xcb\x88\xc9\xaa_s_t_\xc9\x9a_\xc9\xb9_i\n'
2025-06-09 20:25:14,946 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'including ancient civilizations']
2025-06-09 20:25:15,084 - root - DEBUG - line: b'\xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d_\xc9\xaa_\xc5\x8b \xcb\x88e\xc9\xaa_n_t\xca\x83_\xc9\x99_n_t s_\xcb\x8c\xc9\xaa_v_\xc9\xaa_l_\xe1\xb5\xbb_z_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n_z\n'
2025-06-09 20:25:15,085 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'the Mughal Empire']
2025-06-09 20:25:15,218 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 m_\xcb\x88o\xca\x8a_\xc9\xa1_\xc9\x99l \xcb\x88\xc9\x9b_m_p_a\xc9\xaa\xc9\x9a\n'
2025-06-09 20:25:15,218 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and British colonization']
2025-06-09 20:25:15,348 - root - DEBUG - line: b'\xc3\xa6_n_d b_\xc9\xb9_\xcb\x88\xc9\xaa_\xc9\xbe_\xc9\xaa_\xca\x83 k_\xcb\x8c\xc9\x91\xcb\x90_l_\xc9\x99_n_\xe1\xb5\xbb_z_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n\n'
2025-06-09 20:25:16,379 - jarvis_app - INFO - TTS generated 166928 samples
2025-06-09 20:25:24,067 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:25:24,068 - jarvis_app - INFO - TTS processing phrase: 'Major religions like Hinduism, Buddhism, Jainism, and Sikhism originated in India.'
2025-06-09 20:25:24,072 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Major religions like Hinduism']
2025-06-09 20:25:24,248 - root - DEBUG - line: b'm_\xcb\x88e\xc9\xaa_d\xca\x92_\xc9\x9a \xc9\xb9_\xe1\xb5\xbb_l_\xcb\x88\xc9\xaa_d\xca\x92_\xc9\x99_n_z l_\xcb\x88a\xc9\xaa_k h_\xcb\x88\xc9\xaa_n_d_u\xcb\x90_\xcb\x8c\xc9\xaa_z_\xc9\x99_m\n'
2025-06-09 20:25:24,248 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Buddhism']
2025-06-09 20:25:24,383 - root - DEBUG - line: b'b_\xcb\x88u\xcb\x90_d_\xc9\xaa_z_\xc9\x99_m\n'
2025-06-09 20:25:24,384 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jainism']
2025-06-09 20:25:24,519 - root - DEBUG - line: b'd\xca\x92_\xcb\x88e\xc9\xaa_n_\xc9\xaa_z_\xc9\x99_m\n'
2025-06-09 20:25:24,519 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and Sikhism originated in India']
2025-06-09 20:25:24,648 - root - DEBUG - line: b'\xc3\xa6_n_d s_\xcb\x88i\xcb\x90_k_\xc9\xaa_z_\xc9\x99_m \xc9\x9a_\xc9\xb9_\xcb\x88\xc9\xaa_d\xca\x92_\xe1\xb5\xbb_n_\xcb\x8ce\xc9\xaa_\xc9\xbe_\xe1\xb5\xbb_d \xc9\xaa_n \xcb\x88\xc9\xaa_n_d_i__\xc9\x99\n'
2025-06-09 20:25:25,342 - jarvis_app - INFO - TTS generated 113680 samples
2025-06-09 20:25:30,617 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:25:30,618 - jarvis_app - INFO - TTS processing phrase: 'The country boasts various landscapes, from the Himalayas in the north to coastal regions in the south.'
2025-06-09 20:25:30,622 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The country boasts various landscapes']
2025-06-09 20:25:30,797 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 k_\xcb\x88\xca\x8c_n_t_\xc9\xb9_i b_\xcb\x88o\xca\x8a_s_t_s v_\xcb\x88\xc9\x9b_\xc9\xb9_i\xc9\x99_s l_\xcb\x88\xc3\xa6_n_d_s_k_e\xc9\xaa_p_s\n'
2025-06-09 20:25:30,798 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'from the Himalayas in the north to coastal regions in the south']
2025-06-09 20:25:30,935 - root - DEBUG - line: b'f_\xc9\xb9_\xca\x8c_m_\xc3\xb0_\xc9\x99 h_\xcb\x8c\xc9\xaa_m_\xc9\x99_l_\xcb\x88e\xc9\xaa_\xc9\x99_z \xc9\xaa_n_\xc3\xb0_\xc9\x99 n_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_\xce\xb8 t_\xc9\x99 k_\xcb\x88o\xca\x8a_s_t_\xc9\x99l \xc9\xb9_\xcb\x88i\xcb\x90_d\xca\x92_\xc9\x99_n_z \xc9\xaa_n_\xc3\xb0_\xc9\x99 s_\xcb\x88a\xca\x8a_\xce\xb8\n'
2025-06-09 20:25:31,629 - jarvis_app - INFO - TTS generated 107280 samples
2025-06-09 20:25:36,577 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:25:36,577 - jarvis_app - INFO - TTS processing phrase: 'India is also famous for its cuisine, festivals, and contributions to art and science.'
2025-06-09 20:25:36,579 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'India is also famous for its cuisine']
2025-06-09 20:25:36,761 - root - DEBUG - line: b'\xcb\x88\xc9\xaa_n_d_i__\xc9\x99 \xc9\xaa_z \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a f_\xcb\x88e\xc9\xaa_m_\xc9\x99_s f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s k_w_\xe1\xb5\xbb_z_\xcb\x88i\xcb\x90_n\n'
2025-06-09 20:25:36,761 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'festivals']
2025-06-09 20:25:36,900 - root - DEBUG - line: b'f_\xcb\x88\xc9\x9b_s_t_\xc9\xaa_v_\xc9\x99l_z\n'
2025-06-09 20:25:36,900 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and contributions to art and science']
2025-06-09 20:25:37,034 - root - DEBUG - line: b'\xc3\xa6_n_d k_\xcb\x8c\xc9\x91\xcb\x90_n_t_\xc9\xb9_\xc9\xaa_b_j_\xcb\x88u\xcb\x90_\xca\x83_\xc9\x99_n_z t_\xca\x8a \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_t__ \xc3\xa6_n_d s_\xcb\x88a\xc9\xaa\xc9\x99_n_s\n'
2025-06-09 20:25:37,743 - jarvis_app - INFO - TTS generated 110096 samples
2025-06-09 20:25:42,829 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:25:42,895 - jarvis_app - DEBUG - Sending message to client: 'It has a population of over 1.'
2025-06-09 20:25:42,903 - jarvis_app - DEBUG - Sending message to client: '4 billion people, making it the second most populous country in the world.'
2025-06-09 20:25:43,099 - jarvis_app - DEBUG - Sending message to client: 'India has a parliamentary democratic system and is known for its rich history, including ancient civilizations, the Mughal Empire, and British colonization.'
2025-06-09 20:25:43,111 - jarvis_app - DEBUG - Sending message to client: 'Major religions like Hinduism, Buddhism, Jainism, and Sikhism originated in India.'
2025-06-09 20:25:43,305 - jarvis_app - DEBUG - Sending message to client: 'The country boasts various landscapes, from the Himalayas in the north to coastal regions in the south.'
2025-06-09 20:25:43,316 - jarvis_app - DEBUG - Sending message to client: 'India is also famous for its cuisine, festivals, and contributions to art and science.'
2025-06-09 20:25:57,894 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:25:57] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:25:57,908 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:25:57,909 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:25:58,914 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:25:58] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:25:58,915 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:25:58] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:26:00,439 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:26:00,439 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:26:00,439 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:26:00,439 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:26:00,439 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:26:00,440 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:00] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:26:00,442 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:26:00,622 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:26:01,083 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:26:01,245 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:26:01,503 - jarvis_app - INFO - TTS generated 91424 samples
2025-06-09 20:26:05,753 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:26:12,927 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:26:12,927 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryJFlKZnNV2AFN2wIl
2025-06-09 20:26:12,941 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:26:12,942 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryJFlKZnNV2AFN2wIl
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 146911
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:26:12,942 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:26:12,944 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:26:14,506 - jarvis_app - INFO - Transcription result: Hey Javish, tell me something about India and keep it written 5 sentences.
2025-06-09 20:26:14,508 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:14] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:26:14,516 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Javish, tell me something about India and keep it written 5 sentences.'}
2025-06-09 20:26:20,849 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:26:20,849 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary5Wou1FwVXExmgqNe
2025-06-09 20:26:20,850 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:26:20,850 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary5Wou1FwVXExmgqNe
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 103747
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:26:20,850 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:26:20,851 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:26:22,124 - jarvis_app - INFO - Transcription result: Hey, Jarvis, tell me something about Tengya within 5 sentences.
2025-06-09 20:26:22,125 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:22] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:26:22,125 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Jarvis, tell me something about Tengya within 5 sentences.'}
2025-06-09 20:26:28,291 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:28] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:26:28,307 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:26:28,309 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:26:29,312 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:29] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:26:29,312 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:29] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:26:34,673 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:26:34,674 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryXMdrmDC2o7QATWZF
2025-06-09 20:26:34,677 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:26:34,678 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryXMdrmDC2o7QATWZF
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 118113
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:26:34,678 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:26:34,682 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:26:35,945 - jarvis_app - INFO - Transcription result: Hijavish tell me something about India in five sentences.
2025-06-09 20:26:35,946 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:35] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:26:36,180 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hijavish tell me something about India in five sentences.'}
2025-06-09 20:26:44,026 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:26:44,026 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryIY3ckKl1TchhLYQ2
2025-06-09 20:26:44,027 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:26:44,027 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryIY3ckKl1TchhLYQ2
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 107045
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:26:44,027 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:26:44,029 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:26:45,244 - jarvis_app - INFO - Transcription result: Isharis, tell me something about India in 5 sentences.
2025-06-09 20:26:45,245 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:45] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:26:45,245 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Isharis, tell me something about India in 5 sentences.'}
2025-06-09 20:26:53,108 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:26:53,108 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary6UziMHuS9cQOsBTk
2025-06-09 20:26:53,111 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:26:53,111 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary6UziMHuS9cQOsBTk
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 116697
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:26:53,112 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:26:53,115 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:26:54,377 - jarvis_app - INFO - Transcription result: Hijar is tell me something about India under 5 sentences.
2025-06-09 20:26:54,378 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:54] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:26:54,378 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hijar is tell me something about India under 5 sentences.'}
2025-06-09 20:26:57,765 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:57] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:26:57,779 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:26:57,780 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:26:58,780 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:58] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:26:58,785 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:26:58] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:27:37,332 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:27:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:27:37,350 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:27:37,351 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:27:38,351 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:27:38] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:27:38,352 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:27:38] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:27:47,241 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:27:47,241 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryFGhvXwfB0b99aeRv
2025-06-09 20:27:47,244 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:27:47,245 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryFGhvXwfB0b99aeRv
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 125482
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:27:47,245 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:27:47,249 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:27:48,967 - jarvis_app - INFO - Transcription result: Hey Javis, can you tell me something about India under 5 sentences?
2025-06-09 20:27:48,968 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:27:48] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:27:48,968 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Javis, can you tell me something about India under 5 sentences?'}
2025-06-09 20:27:53,003 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:27:53,004 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryKqMCp08D4n8xtkPA
2025-06-09 20:27:53,010 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:27:53,010 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryKqMCp08D4n8xtkPA
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 46252
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:27:53,010 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:27:53,014 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:27:54,062 - jarvis_app - INFO - Transcription result: He's jealous.
2025-06-09 20:27:54,063 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:27:54] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:27:54,063 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "He's jealous."}
2025-06-09 20:27:59,964 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:27:59,965 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryCg3E1TLeF5FwcEij
2025-06-09 20:27:59,969 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:27:59,969 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryCg3E1TLeF5FwcEij
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 120551
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:27:59,969 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:27:59,971 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:28:01,268 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me something about India in 5 sentences?
2025-06-09 20:28:01,268 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me something about India in 5 sentences
2025-06-09 20:28:01,268 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me something about India in 5 sentences?'}
2025-06-09 20:28:01,270 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ed25e615-6b4b-44ac-a071-552641ddea9e', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', can you tell me something about India in 5 sentences'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:28:01,271 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:28:01,271 - httpcore.connection - DEBUG - close.started
2025-06-09 20:28:01,271 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:28:01,271 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:28:01,307 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f9b3a0>
2025-06-09 20:28:01,307 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:28:01,325 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f99e70>
2025-06-09 20:28:01,325 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:28:01,326 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:28:01,326 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:28:01,326 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:28:01,326 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:28:01,457 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:28:01,653 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:28:01 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'257'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'260'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199953'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'13ms'), (b'x-request-id', b'req_e413a5091b25909a6ac7f4ab0308f604'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5c6b87b5bcf0a-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:28:01,655 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:28:01,655 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:28:01 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '257', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '260', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199953', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '13ms', 'x-request-id': 'req_e413a5091b25909a6ac7f4ab0308f604', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5c6b87b5bcf0a-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:28:01,655 - openai._base_client - DEBUG - request_id: req_e413a5091b25909a6ac7f4ab0308f604
2025-06-09 20:28:01,656 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:28:02,052 - jarvis_app - INFO - TTS processing phrase: 'India is the seventh-largest country in the world by land area and the second-most populous, with over 1.'
2025-06-09 20:28:02,057 - jarvis_app - DEBUG - Sending message to client: 'India is the seventh-largest country in the world by land area and the second-most populous, with over 1.'
2025-06-09 20:28:02,058 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'India is the seventh largest country in the world by land area and the second most populous']
2025-06-09 20:28:02,105 - jarvis_app - DEBUG - Sending message to client: '4 billion people.'
2025-06-09 20:28:02,257 - root - DEBUG - line: b'\xcb\x88\xc9\xaa_n_d_i__\xc9\x99 \xc9\xaa_z \xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\x9b_v_\xc9\x99_n_\xce\xb8 l_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_d\xca\x92_\xc9\xaa_s_t k_\xcb\x88\xca\x8c_n_t_\xc9\xb9_i_ \xc9\xaa_n_\xc3\xb0_\xc9\x99 w_\xcb\x88\xc9\x9c\xcb\x90_l_d b_a\xc9\xaa l_\xcb\x88\xc3\xa6_n_d \xcb\x88\xc9\x9b_\xc9\xb9_i\xc9\x99__ \xc3\xa6_n_d \xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\x9b_k_\xc9\x99_n_d m_\xcb\x88o\xca\x8a_s_t p_\xcb\x88\xc9\x91\xcb\x90_p_j_\xca\x8a_l_\xc9\x99_s\n'
2025-06-09 20:28:02,257 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'with over one']
2025-06-09 20:28:02,397 - root - DEBUG - line: b'w_\xc9\xaa_\xc3\xb0 \xcb\x88o\xca\x8a_v_\xc9\x9a w_\xcb\x8c\xca\x8c_n\n'
2025-06-09 20:28:03,228 - jarvis_app - INFO - TTS generated 120336 samples
2025-06-09 20:28:04,796 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:28:04,797 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:28:04,797 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:28:04,798 - jarvis_app - INFO - Full response: India is the seventh-largest country in the world by land area and the second-most populous, with over 1. 4 billion people. It is known for its rich cultural heritage, which includes various languages, religions, and cuisines. India has a diverse geography, ranging from the Himalayas in the north to coastal regions in the south. The economy is one of the fastest-growing in the world, with major industries including technology, agriculture, and textiles. India is also a democratic nation with a multi-tiered political system, and it gained independence from British rule in 1947.
2025-06-09 20:28:04,798 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'India is the seventh-largest country in the world by land area and the second-most populous, with over 1. 4 billion people. It is known for its rich cultural heritage, which includes various languages, religions, and cuisines. India has a diverse geography, ranging from the Himalayas in the north to coastal regions in the south. The economy is one of the fastest-growing in the world, with major industries including technology, agriculture, and textiles. India is also a democratic nation with a multi-tiered political system, and it gained independence from British rule in 1947.'}
2025-06-09 20:28:04,799 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:28:04] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:28:08,778 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:28:08,778 - jarvis_app - INFO - TTS processing phrase: '4 billion people.'
2025-06-09 20:28:08,783 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'four billion people']
2025-06-09 20:28:08,957 - root - DEBUG - line: b'f_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9 b_\xcb\x88\xc9\xaa_l_i\xc9\x99_n p_\xcb\x88i\xcb\x90_p_\xc9\x99l\n'
2025-06-09 20:28:09,250 - jarvis_app - INFO - TTS generated 34064 samples
2025-06-09 20:28:10,901 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:28:10,904 - jarvis_app - INFO - TTS processing phrase: 'It is known for its rich cultural heritage, which includes various languages, religions, and cuisines.'
2025-06-09 20:28:10,910 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'It is known for its rich cultural heritage']
2025-06-09 20:28:10,923 - jarvis_app - DEBUG - Sending message to client: 'It is known for its rich cultural heritage, which includes various languages, religions, and cuisines.'
2025-06-09 20:28:11,090 - root - DEBUG - line: b'\xc9\xaa_\xc9\xbe \xc9\xaa_z n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s \xc9\xb9_\xcb\x88\xc9\xaa_t\xca\x83 k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a_\xc9\xb9_\xc9\x99l h_\xcb\x88\xc9\x9b_\xc9\xb9_\xc9\xaa_\xc9\xbe_\xc9\xaa_d\xca\x92\n'
2025-06-09 20:28:11,090 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'which includes various languages']
2025-06-09 20:28:11,231 - root - DEBUG - line: b'w_\xcb\x8c\xc9\xaa_t\xca\x83 \xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d_z v_\xcb\x88\xc9\x9b_\xc9\xb9_i\xc9\x99_s l_\xcb\x88\xc3\xa6_\xc5\x8b_\xc9\xa1_w_\xc9\xaa_d\xca\x92_\xe1\xb5\xbb_z\n'
2025-06-09 20:28:11,232 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'religions']
2025-06-09 20:28:11,370 - root - DEBUG - line: b'\xc9\xb9_\xe1\xb5\xbb_l_\xcb\x88\xc9\xaa_d\xca\x92_\xc9\x99_n_z\n'
2025-06-09 20:28:11,371 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and cuisines']
2025-06-09 20:28:11,505 - root - DEBUG - line: b'\xc3\xa6_n_d k_w_\xe1\xb5\xbb_z_\xcb\x88i\xcb\x90_n_z\n'
2025-06-09 20:28:12,303 - jarvis_app - INFO - TTS generated 121872 samples
2025-06-09 20:28:17,945 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:28:17,945 - jarvis_app - INFO - TTS processing phrase: 'India has a diverse geography, ranging from the Himalayas in the north to coastal regions in the south.'
2025-06-09 20:28:17,949 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'India has a diverse geography']
2025-06-09 20:28:18,135 - root - DEBUG - line: b'\xcb\x88\xc9\xaa_n_d_i__\xc9\x99 h_\xc9\x90_z \xc9\x90 d_a\xc9\xaa_v_\xcb\x88\xc9\x9c\xcb\x90_s d\xca\x92_\xc9\xaa__\xcb\x88\xc9\x91\xcb\x90_\xc9\xa1_\xc9\xb9_\xc9\x99_f_i\n'
2025-06-09 20:28:18,135 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'ranging from the Himalayas in the north to coastal regions in the south']
2025-06-09 20:28:18,269 - root - DEBUG - line: b'\xc9\xb9_\xcb\x88e\xc9\xaa_n_d\xca\x92_\xc9\xaa_\xc5\x8b f_\xc9\xb9_\xca\x8c_m_\xc3\xb0_\xc9\x99 h_\xcb\x8c\xc9\xaa_m_\xc9\x99_l_\xcb\x88e\xc9\xaa_\xc9\x99_z \xc9\xaa_n_\xc3\xb0_\xc9\x99 n_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_\xce\xb8 t_\xc9\x99 k_\xcb\x88o\xca\x8a_s_t_\xc9\x99l \xc9\xb9_\xcb\x88i\xcb\x90_d\xca\x92_\xc9\x99_n_z \xc9\xaa_n_\xc3\xb0_\xc9\x99 s_\xcb\x88a\xca\x8a_\xce\xb8\n'
2025-06-09 20:28:18,924 - jarvis_app - INFO - TTS generated 107024 samples
2025-06-09 20:28:23,873 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:28:23,875 - jarvis_app - INFO - TTS processing phrase: 'The economy is one of the fastest-growing in the world, with major industries including technology, agriculture, and textiles.'
2025-06-09 20:28:23,883 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The economy is one of the fastest growing in the world']
2025-06-09 20:28:24,050 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_ \xc9\xaa_k_\xcb\x88\xc9\x91\xcb\x90_n_\xc9\x99_m_i_ \xc9\xaa_z w_\xcb\x88\xca\x8c_n \xca\x8c_v_\xc3\xb0_\xc9\x99 f_\xcb\x88\xc3\xa6_s_t_\xc9\xaa_s_t \xc9\xa1_\xc9\xb9_\xcb\x88o\xca\x8a_\xc9\xaa_\xc5\x8b \xc9\xaa_n_\xc3\xb0_\xc9\x99 w_\xcb\x88\xc9\x9c\xcb\x90_l_d\n'
2025-06-09 20:28:24,051 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'with major industries including technology']
2025-06-09 20:28:24,184 - root - DEBUG - line: b'w_\xc9\xaa_\xc3\xb0 m_\xcb\x88e\xc9\xaa_d\xca\x92_\xc9\x9a_\xc9\xb9 \xcb\x88\xc9\xaa_n_d_\xca\x8c_s_t_\xc9\xb9_i_z \xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d_\xc9\xaa_\xc5\x8b t_\xc9\x9b_k_n_\xcb\x88\xc9\x91\xcb\x90_l_\xc9\x99_d\xca\x92_i\n'
2025-06-09 20:28:24,185 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'agriculture']
2025-06-09 20:28:24,318 - root - DEBUG - line: b'\xcb\x88\xc3\xa6_\xc9\xa1_\xc9\xb9_\xc9\xaa_k_\xcb\x8c\xca\x8c_l_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:28:24,318 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and textiles']
2025-06-09 20:28:24,451 - root - DEBUG - line: b'\xc3\xa6_n_d t_\xcb\x88\xc9\x9b_k_s_t_a\xc9\xaa_l_z\n'
2025-06-09 20:28:25,348 - jarvis_app - INFO - TTS generated 146960 samples
2025-06-09 20:28:32,107 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:28:32,107 - jarvis_app - INFO - TTS processing phrase: 'India is also a democratic nation with a multi-tiered political system, and it gained independence from British rule in 1947.'
2025-06-09 20:28:32,110 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'India is also a democratic nation with a multi tiered political system']
2025-06-09 20:28:32,294 - root - DEBUG - line: b'\xcb\x88\xc9\xaa_n_d_i__\xc9\x99 \xc9\xaa_z \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a \xc9\x90 d_\xcb\x8c\xc9\x9b_m_\xc9\x99_k_\xc9\xb9_\xcb\x88\xc3\xa6_\xc9\xbe_\xc9\xaa_k n_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n w_\xc9\xaa_\xc3\xb0 \xc9\x90 m_\xcb\x88\xca\x8c_l_t_a\xc9\xaa t_\xcb\x88\xc9\xaa\xc9\xb9_d p_\xc9\x99_l_\xcb\x88\xc9\xaa_\xc9\xbe_\xc9\xaa_k_\xc9\x99l s_\xcb\x88\xc9\xaa_s_t_\xc9\x99_m\n'
2025-06-09 20:28:32,294 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and it gained independence from British rule in nineteen forty seven']
2025-06-09 20:28:32,425 - root - DEBUG - line: b'\xc3\xa6_n_d \xc9\xaa_t \xc9\xa1_\xcb\x88e\xc9\xaa_n_d \xcb\x8c\xc9\xaa_n_d_\xe1\xb5\xbb_p_\xcb\x88\xc9\x9b_n_d_\xc9\x99_n_s f_\xc9\xb9_\xca\x8c_m b_\xc9\xb9_\xcb\x88\xc9\xaa_\xc9\xbe_\xc9\xaa_\xca\x83 \xc9\xb9_\xcb\x88u\xcb\x90_l \xc9\xaa_n n_\xcb\x88a\xc9\xaa_n_t_i\xcb\x90_n f_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_\xc9\xbe_i s_\xcb\x88\xc9\x9b_v_\xc9\x99_n\n'
2025-06-09 20:28:33,342 - jarvis_app - INFO - TTS generated 154896 samples
2025-06-09 20:28:40,477 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:28:40,531 - jarvis_app - DEBUG - Sending message to client: 'India has a diverse geography, ranging from the Himalayas in the north to coastal regions in the south.'
2025-06-09 20:28:40,568 - jarvis_app - DEBUG - Sending message to client: 'The economy is one of the fastest-growing in the world, with major industries including technology, agriculture, and textiles.'
2025-06-09 20:28:40,735 - jarvis_app - DEBUG - Sending message to client: 'India is also a democratic nation with a multi-tiered political system, and it gained independence from British rule in 1947.'
2025-06-09 20:29:42,725 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:29:42] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:29:42,725 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:29:42,726 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:29:42,772 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:29:42] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:29:42,773 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:29:42,774 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:29:43,731 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:29:43] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:29:43,731 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:29:43] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:29:43,779 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:29:43] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:29:43,779 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:29:43] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:29:59,774 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:29:59] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:29:59,794 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:29:59,795 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:30:00,800 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:00] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:30:00,801 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:00] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:30:05,324 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:30:05,324 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarykSWArBJiecAomE21
2025-06-09 20:30:05,327 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:30:05,327 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarykSWArBJiecAomE21
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 94675
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:30:05,328 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:30:05,330 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:30:06,838 - jarvis_app - INFO - Transcription result: Hey Jarvis tell me something about Barcelona
2025-06-09 20:30:06,839 - jarvis_app - INFO - Sending prompt to OpenAI: tell me something about Barcelona
2025-06-09 20:30:06,839 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis tell me something about Barcelona'}
2025-06-09 20:30:06,839 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:30:06,840 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-251fcaef-5fc2-47ae-9974-2c85c404b855', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': 'tell me something about Barcelona'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:30:06,842 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:30:06,842 - httpcore.connection - DEBUG - close.started
2025-06-09 20:30:06,842 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:30:06,842 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:30:06,880 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f99f00>
2025-06-09 20:30:06,880 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:30:06,899 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f999c0>
2025-06-09 20:30:06,900 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:30:06,900 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:30:06,900 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:30:06,900 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:30:06,900 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:30:07,423 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:30:07 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'357'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'361'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199960'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_abcf6c4fcddb5c79a78e4de8ca12e74a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5c9c94a282714-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:30:07,424 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:30:07,424 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:30:07 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '357', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '361', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199960', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_abcf6c4fcddb5c79a78e4de8ca12e74a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5c9c94a282714-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:30:07,424 - openai._base_client - DEBUG - request_id: req_abcf6c4fcddb5c79a78e4de8ca12e74a
2025-06-09 20:30:07,424 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:30:08,216 - jarvis_app - DEBUG - Sending message to client: 'Barcelona is the capital of Catalonia in Spain, known for its unique architecture, including works by Antoni Gaudí like the Sagrada Família and Park Güell.'
2025-06-09 20:30:08,216 - jarvis_app - INFO - TTS processing phrase: 'Barcelona is the capital of Catalonia in Spain, known for its unique architecture, including works by Antoni Gaudí like the Sagrada Família and Park Güell.'
2025-06-09 20:30:08,221 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Barcelona is the capital of Catalonia in Spain']
2025-06-09 20:30:08,414 - root - DEBUG - line: b'b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99 \xc9\xaa_z \xc3\xb0_\xc9\x99 k_\xcb\x88\xc3\xa6_p_\xc9\xaa_\xc9\xbe_\xc9\x99l \xca\x8c_v k_\xcb\x8c\xc3\xa6_\xc9\xbe_\xc9\x90_l_\xcb\x88o\xca\x8a_n_i\xc9\x99 \xc9\xaa_n s_p_\xcb\x88e\xc9\xaa_n\n'
2025-06-09 20:30:08,414 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'known for its unique architecture']
2025-06-09 20:30:08,556 - root - DEBUG - line: b'n_\xcb\x88o\xca\x8a_n f_\xc9\x94\xcb\x90_\xc9\xb9 \xc9\xaa_t_s j_u\xcb\x90_n_\xcb\x88i\xcb\x90_k \xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k_\xc9\xaa_t_\xcb\x8c\xc9\x9b_k_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:30:08,557 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'including works by Antoni Gaudí like the Sagrada Família and Park Güell']
2025-06-09 20:30:08,709 - root - DEBUG - line: b'\xc9\xaa_\xc5\x8b_k_l_\xcb\x88u\xcb\x90_d_\xc9\xaa_\xc5\x8b w_\xcb\x88\xc9\x9c\xcb\x90_k_s b_a\xc9\xaa \xc3\xa6_n_t_\xcb\x88o\xca\x8a_n_i \xc9\xa1_\xcb\x88\xc9\x94\xcb\x90_d_i l_\xcb\x88a\xc9\xaa_k \xc3\xb0_\xc9\x99 s_\xc3\xa6_\xc9\xa1_\xc9\xb9_\xcb\x88\xc9\x91\xcb\x90_d_\xc9\x99 f_\xc3\xa6_m_\xcb\x88\xc9\xaa_l_i\xc9\x99__ \xc3\xa6_n_d p_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_k \xc9\xa1_\xcb\x88u\xcb\x90_\xc9\x9b_l\n'
2025-06-09 20:30:08,877 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:30:08,877 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:30:08,877 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:30:08,877 - jarvis_app - INFO - Full response: Barcelona is the capital of Catalonia in Spain, known for its unique architecture, including works by Antoni Gaudí like the Sagrada Família and Park Güell. It has a vibrant culture, famous beaches, and a rich history, making it a popular tourist destination. The city also boasts a strong culinary scene and passionate football culture, home to FC Barcelona.
2025-06-09 20:30:08,878 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:08] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:30:08,878 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'Barcelona is the capital of Catalonia in Spain, known for its unique architecture, including works by Antoni Gaudí like the Sagrada Família and Park Güell. It has a vibrant culture, famous beaches, and a rich history, making it a popular tourist destination. The city also boasts a strong culinary scene and passionate football culture, home to FC Barcelona.'}
2025-06-09 20:30:09,049 - jarvis_app - DEBUG - Sending message to client: 'It has a vibrant culture, famous beaches, and a rich history, making it a popular tourist destination.'
2025-06-09 20:30:09,773 - jarvis_app - INFO - TTS generated 170768 samples
2025-06-09 20:30:17,599 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:30:17,601 - jarvis_app - INFO - TTS processing phrase: 'It has a vibrant culture, famous beaches, and a rich history, making it a popular tourist destination.'
2025-06-09 20:30:17,603 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'It has a vibrant culture']
2025-06-09 20:30:17,805 - root - DEBUG - line: b'\xc9\xaa_t h_\xc9\x90_z \xc9\x90 v_\xcb\x88a\xc9\xaa_b_\xc9\xb9_\xc9\x99_n_t k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:30:17,806 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'famous beaches']
2025-06-09 20:30:17,932 - root - DEBUG - line: b'f_\xcb\x88e\xc9\xaa_m_\xc9\x99_s b_\xcb\x88i\xcb\x90_t\xca\x83_\xe1\xb5\xbb_z\n'
2025-06-09 20:30:17,933 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and a rich history']
2025-06-09 20:30:18,061 - root - DEBUG - line: b'\xc3\xa6_n_d \xc9\x90 \xc9\xb9_\xcb\x88\xc9\xaa_t\xca\x83 h_\xcb\x88\xc9\xaa_s_t_\xc9\x9a_\xc9\xb9_i\n'
2025-06-09 20:30:18,062 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'making it a popular tourist destination']
2025-06-09 20:30:18,190 - root - DEBUG - line: b'm_\xcb\x8ce\xc9\xaa_k_\xc9\xaa_\xc5\x8b \xc9\xaa_\xc9\xbe \xc9\x90 p_\xcb\x88\xc9\x91\xcb\x90_p_j_\xca\x8a_l_\xc9\x9a t_\xcb\x88\xca\x8a\xc9\xb9_\xc9\xb9_\xc9\xaa_s_t d_\xcb\x8c\xc9\x9b_s_t_\xc9\xaa_n_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n\n'
2025-06-09 20:30:18,886 - jarvis_app - INFO - TTS generated 121872 samples
2025-06-09 20:30:24,522 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:30:24,522 - jarvis_app - INFO - TTS processing phrase: 'The city also boasts a strong culinary scene and passionate football culture, home to FC Barcelona.'
2025-06-09 20:30:24,523 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'The city also boasts a strong culinary scene and passionate football culture']
2025-06-09 20:30:24,687 - root - DEBUG - line: b'\xc3\xb0_\xc9\x99 s_\xcb\x88\xc9\xaa_\xc9\xbe_i_ \xcb\x88\xc9\x94\xcb\x90_l_s_o\xca\x8a b_\xcb\x88o\xca\x8a_s_t_s \xc9\x90 s_t_\xc9\xb9_\xcb\x88\xc9\x94_\xc5\x8b k_j_\xcb\x88\xca\x8a_l_\xc9\xaa_n_\xcb\x8c\xc9\x9b_\xc9\xb9_i s_\xcb\x88i\xcb\x90_n__ \xc3\xa6_n_d p_\xcb\x88\xc3\xa6_\xca\x83_\xc9\x99_n_\xc9\x99_t f_\xcb\x88\xca\x8a_t_b_\xc9\x94\xcb\x90_l k_\xcb\x88\xca\x8c_l_t\xca\x83_\xc9\x9a\n'
2025-06-09 20:30:24,688 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'home to FC Barcelona']
2025-06-09 20:30:24,821 - root - DEBUG - line: b'h_\xcb\x88o\xca\x8a_m t_\xca\x8a \xcb\x8c\xc9\x9b_f_s_\xcb\x88i\xcb\x90 b_\xcb\x8c\xc9\x91\xcb\x90\xc9\xb9_s_\xc9\xaa_l_\xcb\x88o\xca\x8a_n_\xc9\x99\n'
2025-06-09 20:30:25,554 - jarvis_app - INFO - TTS generated 115472 samples
2025-06-09 20:30:29,505 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:30:29,506 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:30:29,506 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:30:29,507 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:29] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:30:30,872 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:30:30,872 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:30:30,876 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:30:31,057 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:30:31,511 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:30:31,693 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:30:31,972 - jarvis_app - INFO - TTS generated 93472 samples
2025-06-09 20:30:32,577 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:32] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:30:32,591 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:30:32,592 - jarvis_app - DEBUG - Sending message to client: 'The city also boasts a strong culinary scene and passionate football culture, home to FC Barcelona.'
2025-06-09 20:30:32,592 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:32] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:30:32,592 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:30:33,598 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:33] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:30:36,310 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:30:36,322 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:30:39,634 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:30:39,634 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryv7DKVpoBv1JmqeKm
2025-06-09 20:30:39,642 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:30:39,642 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryv7DKVpoBv1JmqeKm
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 95588
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:30:39,642 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:30:39,645 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:30:41,244 - jarvis_app - INFO - Transcription result: Hey, Jarvis, I'm able to hear you. Can you hear me?
2025-06-09 20:30:41,245 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:41] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:30:41,245 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': "Hey, Jarvis, I'm able to hear you. Can you hear me?"}
2025-06-09 20:30:47,731 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:30:47,731 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryjD4OlH6uiAcbQida
2025-06-09 20:30:47,733 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:30:47,733 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryjD4OlH6uiAcbQida
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 70940
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:30:47,734 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:30:47,737 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:30:48,961 - jarvis_app - INFO - Transcription result: Hey Jarvis, are you able to hear me?
2025-06-09 20:30:48,961 - jarvis_app - INFO - Sending prompt to OpenAI: , are you able to hear me
2025-06-09 20:30:48,961 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:30:48,963 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3fae3a2a-1582-4f47-8b8d-2b8581092488', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', are you able to hear me'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:30:48,964 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:30:48,964 - httpcore.connection - DEBUG - close.started
2025-06-09 20:30:48,964 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:30:48,964 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:30:48,978 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c7280>
2025-06-09 20:30:48,979 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:30:48,996 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1693c7220>
2025-06-09 20:30:48,996 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:30:48,996 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:30:48,996 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:30:48,997 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:30:48,997 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:30:49,277 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, are you able to hear me?'}
2025-06-09 20:30:49,406 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:30:49 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'351'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'357'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199962'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_c91cb440c235b2d3d2e67bc50b62cdc0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5cad06d0bed39-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:30:49,407 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:30:49,407 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:30:49 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '351', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '357', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199962', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '11ms', 'x-request-id': 'req_c91cb440c235b2d3d2e67bc50b62cdc0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5cad06d0bed39-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:30:49,408 - openai._base_client - DEBUG - request_id: req_c91cb440c235b2d3d2e67bc50b62cdc0
2025-06-09 20:30:49,409 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:30:49,626 - jarvis_app - INFO - TTS processing phrase: 'I can't hear you, but I can read your text.'
2025-06-09 20:30:49,627 - jarvis_app - DEBUG - Sending message to client: 'I can't hear you, but I can read your text.'
2025-06-09 20:30:49,631 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I can't hear you"]
2025-06-09 20:30:49,715 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:30:49,716 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:30:49,716 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:30:49,716 - jarvis_app - INFO - Full response: I can't hear you, but I can read your text. How can I assist you?
2025-06-09 20:30:49,717 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I can't hear you, but I can read your text. How can I assist you?"}
2025-06-09 20:30:49,717 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:30:49] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:30:49,814 - root - DEBUG - line: b'a\xc9\xaa k_\xcb\x88\xc3\xa6_n_t h_\xcb\x88\xc9\xaa\xc9\xb9 j_u\xcb\x90\n'
2025-06-09 20:30:49,814 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'but I can read your text']
2025-06-09 20:30:49,952 - root - DEBUG - line: b'b_\xcb\x8c\xca\x8c_t a\xc9\xaa k_\xc3\xa6_n \xc9\xb9_\xcb\x88i\xcb\x90_d j_\xca\x8a\xc9\xb9 t_\xcb\x88\xc9\x9b_k_s_t\n'
2025-06-09 20:30:50,401 - jarvis_app - INFO - TTS generated 57360 samples
2025-06-09 20:30:50,581 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you?'
2025-06-09 20:30:53,119 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:30:53,120 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you?'
2025-06-09 20:30:53,131 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you']
2025-06-09 20:30:53,301 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90\n'
2025-06-09 20:30:53,611 - jarvis_app - INFO - TTS generated 31248 samples
2025-06-09 20:30:55,127 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:31:12,073 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:31:12,074 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:31:12,074 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:31:12,074 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:31:12,074 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:31:12,075 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:12] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:31:12,076 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:31:12,264 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:31:12,776 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:31:12,941 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:31:13,217 - jarvis_app - INFO - TTS generated 92704 samples
2025-06-09 20:31:15,141 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:15] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:31:15,156 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:31:15,157 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:31:16,162 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:16] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:31:16,164 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:16] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:31:17,517 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:31:17,543 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:31:17,544 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:31:17,545 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:31:17,545 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:31:17,545 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:31:17,546 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:17] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:31:17,549 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:31:17,727 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:31:18,201 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:31:18,363 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:31:18,643 - jarvis_app - INFO - TTS generated 88864 samples
2025-06-09 20:31:21,174 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:21] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:31:21,189 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:31:21,191 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:31:22,194 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:22] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:31:22,195 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:22] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:31:22,750 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:31:23,378 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:23] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:31:23,399 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:31:23,400 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:31:24,407 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:24] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:31:24,407 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:24] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:31:35,494 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:35] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:31:35,516 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:31:35,517 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:31:36,522 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:36] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:31:36,523 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:36] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:31:40,464 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:31:40,465 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryTpvHXh8SCKb2SgkD
2025-06-09 20:31:40,468 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:31:40,468 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryTpvHXh8SCKb2SgkD
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 57592
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:31:40,468 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:31:40,470 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:31:41,960 - jarvis_app - INFO - Transcription result: Hey Jabis, how are you?
2025-06-09 20:31:41,961 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:41] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:31:41,961 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jabis, how are you?'}
2025-06-09 20:31:45,313 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:31:45,314 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryYB6P98AnvVbFI3qQ
2025-06-09 20:31:45,315 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:31:45,315 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryYB6P98AnvVbFI3qQ
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 54152
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:31:45,315 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:31:45,316 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:31:46,412 - jarvis_app - INFO - Transcription result: Hey Jarvis, how are you?
2025-06-09 20:31:46,413 - jarvis_app - INFO - Sending prompt to OpenAI: , how are you
2025-06-09 20:31:46,413 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, how are you?'}
2025-06-09 20:31:46,413 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:31:46,414 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-23895291-ec11-48bb-8b8d-8d88de5558f9', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', how are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:31:46,415 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:31:46,416 - httpcore.connection - DEBUG - close.started
2025-06-09 20:31:46,416 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:31:46,416 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:31:46,456 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687d44c0>
2025-06-09 20:31:46,457 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167e9b3c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:31:46,475 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1687d4520>
2025-06-09 20:31:46,475 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:31:46,475 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:31:46,475 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:31:46,476 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:31:46,476 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:31:46,721 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:31:46 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'187'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'191'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_9bdedb983996cae565276e48f83b0809'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Y1yA_qVRq.dROLbseGlkdP2ea8sF3Fakx81OBaOn8_E-1749526306-1.0.1.1-KcQKnF_u5QnpfdA8HhzuScCp5vIzxd0A.9Wm6NnqAD2gI2G_J_FEZPOUVK8OieWLPzcWxnuo2AGZw1MkoYMiVoh0eRbg9CWs0HeuFo2kNLc; path=/; expires=Tue, 10-Jun-25 04:01:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5cc37abba945f-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:31:46,723 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:31:46,723 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:31:46 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '187', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '191', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199965', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_9bdedb983996cae565276e48f83b0809', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Y1yA_qVRq.dROLbseGlkdP2ea8sF3Fakx81OBaOn8_E-1749526306-1.0.1.1-KcQKnF_u5QnpfdA8HhzuScCp5vIzxd0A.9Wm6NnqAD2gI2G_J_FEZPOUVK8OieWLPzcWxnuo2AGZw1MkoYMiVoh0eRbg9CWs0HeuFo2kNLc; path=/; expires=Tue, 10-Jun-25 04:01:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5cc37abba945f-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:31:46,724 - openai._base_client - DEBUG - request_id: req_9bdedb983996cae565276e48f83b0809
2025-06-09 20:31:46,724 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:31:46,931 - jarvis_app - INFO - TTS processing phrase: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:31:46,937 - jarvis_app - DEBUG - Sending message to client: 'I'm just a program, but I'm here and ready to help you!'
2025-06-09 20:31:46,938 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm just a program"]
2025-06-09 20:31:47,045 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:31:47,050 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:31:47,051 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:31:47,051 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:31:47,051 - jarvis_app - INFO - Full response: I'm just a program, but I'm here and ready to help you! How can I assist you today?
2025-06-09 20:31:47,051 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm just a program, but I'm here and ready to help you! How can I assist you today?"}
2025-06-09 20:31:47,052 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:31:47] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:31:47,132 - root - DEBUG - line: b'a\xc9\xaa_m d\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\x90 p_\xc9\xb9_\xcb\x88o\xca\x8a_\xc9\xa1_\xc9\xb9_\xc3\xa6_m\n'
2025-06-09 20:31:47,132 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "but I'm here and ready to help you"]
2025-06-09 20:31:47,269 - root - DEBUG - line: b'b_\xcb\x8c\xca\x8c_t a\xc9\xaa_m h_\xcb\x88\xc9\xaa\xc9\xb9__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i t_\xc9\x99 h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90\n'
2025-06-09 20:31:47,746 - jarvis_app - INFO - TTS generated 66576 samples
2025-06-09 20:31:50,880 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:31:50,880 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:31:50,884 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:31:51,033 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:31:51,371 - jarvis_app - INFO - TTS generated 38672 samples
2025-06-09 20:31:53,212 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:33:48,020 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:33:48] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:33:48,035 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:33:48,036 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:33:49,043 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:33:49] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:33:49,043 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:33:49] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:34:05,470 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 20:34:10,637 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 20:34:10,637 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 20:34:10,638 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,639 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 20:34:10,640 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:34:10,641 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:34:10,642 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:34:10,644 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:34:11,017 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:34:11,018 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:34:11,018 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:34:11,019 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:34:11,020 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:34:11,020 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:34:11,301 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 20:34:11,302 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:34:11,303 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:34:11,305 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 20:34:11,699 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 20:34:11,706 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 20:34:11,711 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 20:34:11,713 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 20:34:11,713 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 20:34:11,717 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 20:34:11,717 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 20:34:11,717 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 20:34:13,118 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 20:34:13,123 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 20:34:13,126 - matplotlib - DEBUG - interactive is False
2025-06-09 20:34:13,126 - matplotlib - DEBUG - platform is darwin
2025-06-09 20:34:13,196 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 20:34:13,200 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 20:34:13,533 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 20:34:16,628 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:34:16,812 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:34:16,812 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:34:16,813 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:34:16,813 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:34:16,814 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:34:16,814 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:34:16,814 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:34:16,815 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:34:16,956 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 20:34:16,960 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:34:16,999 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:34:17,007 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:34:17,070 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:34:17,210 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:34:17,211 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:34:17,211 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:34:17,212 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:34:17,213 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:34:17,213 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:34:17,213 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:34:17,214 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 20:34:17,392 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 20:34:17,553 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 20:34:17,591 - jarvis_app - INFO - Audio output test successful
2025-06-09 20:34:21,169 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 20:34:21,173 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:34:21,178 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:34:21,190 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:34:21,273 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:34:21,419 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:34:21,419 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:34:21,420 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:34:21,420 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:34:21,421 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:34:21,421 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:34:21,421 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:34:21,422 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:34:21,422 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:34:21,422 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:34:21,422 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:34:21,422 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:34:21,422 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:34:21,422 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 20:34:21,604 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 20:34:21,746 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 20:34:21,906 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 20:34:22,182 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 20:34:22,182 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 20:34:22,185 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 20:34:22,185 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 20:34:22,185 - jarvis_app - INFO - TTS worker thread started
2025-06-09 20:34:22,186 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 20:34:22,186 - jarvis_app - INFO - Running with audio output
2025-06-09 20:34:22,186 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 20:34:22,186 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 20:34:22,192 - jarvis_app - INFO - Audio output stream opened
2025-06-09 20:34:22,192 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 20:34:22,193 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 20:34:22,232 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 20:34:22,233 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 20:34:22,355 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 20:34:22,724 - jarvis_app - INFO - TTS generated 58896 samples
2025-06-09 20:34:23,531 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:34:23,534 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:34:23,570 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:34:23,571 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:34:24,536 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:34:24] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:34:24,539 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:34:24] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:34:24,575 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:34:24] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:34:24,576 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:34:24] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:34:25,482 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:34:29,755 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:34:29,755 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryNoxFKqL6TIB38TJo
2025-06-09 20:34:29,757 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:34:29,757 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryNoxFKqL6TIB38TJo
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 61176
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:34:29,757 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:34:29,759 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:34:31,285 - jarvis_app - INFO - Transcription result: Hey, Jarvis, who are you?
2025-06-09 20:34:31,286 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:34:31] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:34:31,567 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Jarvis, who are you?'}
2025-06-09 20:34:36,547 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:34:36,547 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryB7vAOwzmKuFILT7E
2025-06-09 20:34:36,549 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:34:36,549 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryB7vAOwzmKuFILT7E
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 76037
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:34:36,550 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:34:36,554 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:34:37,726 - jarvis_app - INFO - Transcription result: Hey Jarvis, tell me a little about yourself.
2025-06-09 20:34:37,727 - jarvis_app - INFO - Sending prompt to OpenAI: , tell me a little about yourself
2025-06-09 20:34:37,727 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, tell me a little about yourself.'}
2025-06-09 20:34:37,727 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:34:38,273 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2d16ede4-dbbb-4120-baa9-3766c8c5f4d6', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', tell me a little about yourself'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:34:38,349 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:34:38,349 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:34:38,383 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1660dc8e0>
2025-06-09 20:34:38,383 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16509b2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:34:38,401 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1660dc8b0>
2025-06-09 20:34:38,402 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:34:38,402 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:34:38,402 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:34:38,402 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:34:38,402 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:34:39,302 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:34:39 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'818'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'833'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199960'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_3028271baee1df9ba52dbbea0cb78e27'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=tcgfINGC_nh.zThIYRno8Kf2ZegTFnXBkbgcoH29YVA-1749526479-1.0.1.1-8ah3VQal0xSbzkradwLgb6pkCbANt49o2aLbmBtOyM8vpCCQhga2nTGQlfH_72vVlqxnYAmhkjpC9ImUL8bUd5lhXWsQ1671sgK_MBa7s8c; path=/; expires=Tue, 10-Jun-25 04:04:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=oZxX6lcbuCYI77V5ogWbn27BZDiKau3RmBt3BJ7W_UY-1749526479320-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5d06a3f819e59-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:34:39,306 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:34:39,307 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 03:34:39 GMT'), ('content-type', 'text/event-stream; charset=utf-8'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'personal-tqzlct'), ('openai-processing-ms', '818'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '833'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199960'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '12ms'), ('x-request-id', 'req_3028271baee1df9ba52dbbea0cb78e27'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=tcgfINGC_nh.zThIYRno8Kf2ZegTFnXBkbgcoH29YVA-1749526479-1.0.1.1-8ah3VQal0xSbzkradwLgb6pkCbANt49o2aLbmBtOyM8vpCCQhga2nTGQlfH_72vVlqxnYAmhkjpC9ImUL8bUd5lhXWsQ1671sgK_MBa7s8c; path=/; expires=Tue, 10-Jun-25 04:04:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=oZxX6lcbuCYI77V5ogWbn27BZDiKau3RmBt3BJ7W_UY-1749526479320-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d5d06a3f819e59-SJC'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 20:34:39,308 - openai._base_client - DEBUG - request_id: req_3028271baee1df9ba52dbbea0cb78e27
2025-06-09 20:34:39,309 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:34:39,569 - jarvis_app - INFO - TTS processing phrase: 'I'm Jarvis, an AI designed to assist with information and tasks.'
2025-06-09 20:34:39,571 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm Jarvis"]
2025-06-09 20:34:39,622 - jarvis_app - DEBUG - Sending message to client: 'I'm Jarvis, an AI designed to assist with information and tasks.'
2025-06-09 20:34:39,770 - root - DEBUG - line: b'a\xc9\xaa_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s\n'
2025-06-09 20:34:39,770 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'an AI designed to assist with information and tasks']
2025-06-09 20:34:39,918 - root - DEBUG - line: b'\xc9\x90_n \xcb\x8ce\xc9\xaa_\xcb\x88a\xc9\xaa d_\xc9\xaa_z_\xcb\x88a\xc9\xaa_n_d t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t w_\xc9\xaa_\xc3\xb0 \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc3\xa6_n_d t_\xcb\x88\xc3\xa6_s_k_s\n'
2025-06-09 20:34:39,942 - jarvis_app - DEBUG - Sending message to client: 'I can help answer questions, provide recommendations, and offer general support on a variety of topics.'
2025-06-09 20:34:40,113 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:34:40,114 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:34:40,114 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:34:40,114 - jarvis_app - INFO - Full response: I'm Jarvis, an AI designed to assist with information and tasks. I can help answer questions, provide recommendations, and offer general support on a variety of topics. How can I assist you today?
2025-06-09 20:34:40,114 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm Jarvis, an AI designed to assist with information and tasks. I can help answer questions, provide recommendations, and offer general support on a variety of topics. How can I assist you today?"}
2025-06-09 20:34:40,115 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:34:40] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:34:40,474 - jarvis_app - INFO - TTS generated 82192 samples
2025-06-09 20:34:44,306 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:34:44,306 - jarvis_app - INFO - TTS processing phrase: 'I can help answer questions, provide recommendations, and offer general support on a variety of topics.'
2025-06-09 20:34:44,314 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I can help answer questions']
2025-06-09 20:34:44,496 - root - DEBUG - line: b'a\xc9\xaa k_\xc3\xa6_n h_\xcb\x88\xc9\x9b_l_p \xcb\x88\xc3\xa6_n_s_\xc9\x9a k_w_\xcb\x88\xc9\x9b_s_t\xca\x83_\xc9\x99_n_z\n'
2025-06-09 20:34:44,497 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'provide recommendations']
2025-06-09 20:34:44,642 - root - DEBUG - line: b'p_\xc9\xb9_\xc9\x99_v_\xcb\x88a\xc9\xaa_d \xc9\xb9_\xcb\x8c\xc9\x9b_k_\xc9\x99_m_\xc9\x9b_n_d_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n_z\n'
2025-06-09 20:34:44,642 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'and offer general support on a variety of topics']
2025-06-09 20:34:44,787 - root - DEBUG - line: b'\xc3\xa6_n_d \xcb\x88\xc9\x94_f_\xc9\x9a d\xca\x92_\xcb\x88\xc9\x9b_n_\xc9\x9a_\xc9\xb9_\xc9\x99l s_\xc9\x99_p_\xcb\x88\xc9\x94\xcb\x90\xc9\xb9_t \xcb\x8c\xc9\x94_n \xc9\x90 v_\xc9\x9a_\xc9\xb9_\xcb\x88a\xc9\xaa\xc9\x99_\xc9\xbe_i_ \xca\x8c_v t_\xcb\x88\xc9\x91\xcb\x90_p_\xc9\xaa_k_s\n'
2025-06-09 20:34:45,521 - jarvis_app - INFO - TTS generated 113680 samples
2025-06-09 20:34:50,791 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:34:50,791 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:34:50,792 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:34:50,968 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:34:51,277 - jarvis_app - INFO - TTS generated 40208 samples
2025-06-09 20:34:53,207 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:34:53,219 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:35:30,256 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 20:35:35,140 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 20:35:35,141 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 20:35:35,142 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,143 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:35:35,144 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 20:35:35,145 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:35:35,146 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:35:35,147 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 20:35:35,488 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:35:35,489 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:35:35,489 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 20:35:35,490 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:35:35,491 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:35:35,491 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:35:35,491 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:35:35,491 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:35:35,491 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:35:35,491 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:35:35,491 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 20:35:35,729 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,730 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:35:35,731 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:35:35,733 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 20:35:36,138 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 20:35:36,144 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 20:35:36,148 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 20:35:36,151 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 20:35:36,151 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 20:35:36,153 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 20:35:36,153 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 20:35:36,153 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 20:35:37,477 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 20:35:37,483 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 20:35:37,486 - matplotlib - DEBUG - interactive is False
2025-06-09 20:35:37,486 - matplotlib - DEBUG - platform is darwin
2025-06-09 20:35:37,552 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 20:35:37,556 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 20:35:37,840 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 20:35:40,984 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:35:41,149 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:35:41,149 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:35:41,150 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:35:41,150 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:35:41,151 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:35:41,151 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:35:41,151 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:35:41,152 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:35:41,294 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 20:35:41,297 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:35:41,344 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:35:41,350 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:35:41,402 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:35:41,533 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:35:41,533 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:35:41,534 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:35:41,534 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:35:41,535 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:35:41,535 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:35:41,535 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:35:41,536 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:35:41,537 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 20:35:41,712 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 20:35:41,896 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 20:35:41,926 - jarvis_app - INFO - Audio output test successful
2025-06-09 20:35:45,560 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 20:35:45,565 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:35:45,570 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:35:45,577 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:35:45,655 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:35:45,777 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:35:45,777 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:35:45,778 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:35:45,778 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:35:45,779 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:35:45,779 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:35:45,779 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:35:45,780 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:35:45,781 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 20:35:45,965 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 20:35:46,104 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 20:35:46,260 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 20:35:46,542 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 20:35:46,542 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 20:35:46,545 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 20:35:46,545 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 20:35:46,545 - jarvis_app - INFO - TTS worker thread started
2025-06-09 20:35:46,545 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 20:35:46,545 - jarvis_app - INFO - Running with audio output
2025-06-09 20:35:46,545 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 20:35:46,546 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 20:35:46,552 - jarvis_app - INFO - Audio output stream opened
2025-06-09 20:35:46,552 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 20:35:46,554 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 20:35:46,590 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 20:35:46,591 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 20:35:46,710 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 20:35:47,072 - jarvis_app - INFO - TTS generated 58640 samples
2025-06-09 20:35:47,298 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:35:47,304 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:35:48,309 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:35:48] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:35:48,310 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:35:48] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:35:49,835 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:38:11,681 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:11] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:38:11,698 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:38:11,700 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:38:12,702 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:12] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:38:12,706 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:12] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:38:14,326 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:14] "[33mGET /apple-touch-icon-precomposed.png HTTP/1.1[0m" 404 -
2025-06-09 20:38:14,331 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:14] "[33mGET /apple-touch-icon.png HTTP/1.1[0m" 404 -
2025-06-09 20:38:29,108 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:29] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:38:29,110 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:29] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:38:29,135 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:38:29,137 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:38:30,141 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:30] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:38:30,142 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:30] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:38:37,781 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:38:37,781 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryQHiOqRm2MwuVarKg
2025-06-09 20:38:37,785 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:38:37,785 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 38024
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryQHiOqRm2MwuVarKg
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:38:37,785 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:38:37,789 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:38:39,394 - jarvis_app - INFO - Transcription result: Hey Jarvis, who are you?
2025-06-09 20:38:39,395 - jarvis_app - INFO - Sending prompt to OpenAI: , who are you
2025-06-09 20:38:39,395 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, who are you?'}
2025-06-09 20:38:39,395 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:38:40,017 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f4531315-a56b-49e2-b209-cd7c146fe999', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', who are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:38:40,083 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:38:40,083 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:38:40,116 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f3b9a0>
2025-06-09 20:38:40,116 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x167f1b340> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:38:40,135 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x168f3ba30>
2025-06-09 20:38:40,135 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:38:40,136 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:38:40,136 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:38:40,136 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:38:40,136 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:38:43,679 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:38:43 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'322'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'327'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_e29f76221c2a6750c5b2adedea43f4b6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=u0I4aC5.owHmlNVscoGgL4oNT.D25NAL5qKEVh6LrGI-1749526723-1.0.1.1-LDOON83kdUQmny8a.8N6Dkahma6hGSQd468bs1sov0pSjhGLv4X0eyZU5Ze001Cql6Slq1hptudcX0RZxxavPiElSd7BXpdLcK6SGfZVq4Y; path=/; expires=Tue, 10-Jun-25 04:08:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ZII5h1GBX0B5sJnp1vXH.oIlDwZQ6wtKcKv01p8N9No-1749526723689-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5d6510ad87ac2-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:38:43,682 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:38:43,683 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 03:38:43 GMT'), ('content-type', 'text/event-stream; charset=utf-8'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'personal-tqzlct'), ('openai-processing-ms', '322'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '327'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199965'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '10ms'), ('x-request-id', 'req_e29f76221c2a6750c5b2adedea43f4b6'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=u0I4aC5.owHmlNVscoGgL4oNT.D25NAL5qKEVh6LrGI-1749526723-1.0.1.1-LDOON83kdUQmny8a.8N6Dkahma6hGSQd468bs1sov0pSjhGLv4X0eyZU5Ze001Cql6Slq1hptudcX0RZxxavPiElSd7BXpdLcK6SGfZVq4Y; path=/; expires=Tue, 10-Jun-25 04:08:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ZII5h1GBX0B5sJnp1vXH.oIlDwZQ6wtKcKv01p8N9No-1749526723689-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d5d6510ad87ac2-SJC'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 20:38:43,683 - openai._base_client - DEBUG - request_id: req_e29f76221c2a6750c5b2adedea43f4b6
2025-06-09 20:38:43,683 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:38:43,860 - jarvis_app - DEBUG - Sending message to client: 'I am Jarvis, your AI assistant.'
2025-06-09 20:38:43,860 - jarvis_app - INFO - TTS processing phrase: 'I am Jarvis, your AI assistant.'
2025-06-09 20:38:43,866 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I am Jarvis']
2025-06-09 20:38:43,952 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:38:43,952 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:38:43,952 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:38:43,953 - jarvis_app - INFO - Full response: I am Jarvis, your AI assistant. How can I help you today?
2025-06-09 20:38:43,953 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'I am Jarvis, your AI assistant. How can I help you today?'}
2025-06-09 20:38:43,953 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:38:43] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:38:44,070 - root - DEBUG - line: b'a\xc9\xaa_\xc9\x90_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s\n'
2025-06-09 20:38:44,070 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'your AI assistant']
2025-06-09 20:38:44,209 - root - DEBUG - line: b'j_\xca\x8a_\xc9\xb9 \xcb\x8ce\xc9\xaa_\xcb\x88a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t_\xc9\x99_n_t\n'
2025-06-09 20:38:44,612 - jarvis_app - INFO - TTS generated 46096 samples
2025-06-09 20:38:46,820 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:38:46,820 - jarvis_app - INFO - TTS processing phrase: 'How can I help you today?'
2025-06-09 20:38:46,822 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I help you today']
2025-06-09 20:38:47,006 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:38:47,325 - jarvis_app - INFO - TTS generated 36368 samples
2025-06-09 20:38:49,069 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:38:49,152 - jarvis_app - DEBUG - Sending message to client: 'How can I help you today?'
2025-06-09 20:42:11,079 - jarvis_app - INFO - Initializing TTS components...
2025-06-09 20:42:16,158 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1144)
           2	LOAD_FAST(arg=0, lineno=1147)
           4	LOAD_CONST(arg=1, lineno=1147)
           6	BINARY_SUBSCR(arg=None, lineno=1147)
           8	STORE_FAST(arg=3, lineno=1147)
          10	LOAD_FAST(arg=1, lineno=1148)
          12	UNARY_NEGATIVE(arg=None, lineno=1148)
          14	LOAD_FAST(arg=3, lineno=1148)
          16	DUP_TOP(arg=None, lineno=1148)
          18	ROT_THREE(arg=None, lineno=1148)
          20	COMPARE_OP(arg=1, lineno=1148)
          22	POP_JUMP_IF_FALSE(arg=17, lineno=1148)
          24	LOAD_FAST(arg=1, lineno=1148)
          26	COMPARE_OP(arg=1, lineno=1148)
          28	POP_JUMP_IF_FALSE(arg=21, lineno=1148)
          30	JUMP_FORWARD(arg=2, lineno=1148)
>         32	POP_TOP(arg=None, lineno=1148)
          34	JUMP_FORWARD(arg=2, lineno=1148)
>         36	LOAD_CONST(arg=1, lineno=1149)
          38	STORE_FAST(arg=3, lineno=1149)
>         40	LOAD_FAST(arg=0, lineno=1151)
          42	LOAD_CONST(arg=2, lineno=1151)
          44	BINARY_SUBSCR(arg=None, lineno=1151)
          46	STORE_FAST(arg=4, lineno=1151)
          48	LOAD_FAST(arg=1, lineno=1152)
          50	UNARY_NEGATIVE(arg=None, lineno=1152)
          52	LOAD_FAST(arg=4, lineno=1152)
          54	DUP_TOP(arg=None, lineno=1152)
          56	ROT_THREE(arg=None, lineno=1152)
          58	COMPARE_OP(arg=1, lineno=1152)
          60	POP_JUMP_IF_FALSE(arg=36, lineno=1152)
          62	LOAD_FAST(arg=1, lineno=1152)
          64	COMPARE_OP(arg=1, lineno=1152)
          66	POP_JUMP_IF_FALSE(arg=40, lineno=1152)
          68	JUMP_FORWARD(arg=2, lineno=1152)
>         70	POP_TOP(arg=None, lineno=1152)
          72	JUMP_FORWARD(arg=2, lineno=1152)
>         74	LOAD_CONST(arg=1, lineno=1153)
          76	STORE_FAST(arg=4, lineno=1153)
>         78	LOAD_FAST(arg=2, lineno=1155)
          80	POP_JUMP_IF_FALSE(arg=52, lineno=1155)
          82	LOAD_GLOBAL(arg=0, lineno=1156)
          84	LOAD_METHOD(arg=1, lineno=1156)
          86	LOAD_FAST(arg=3, lineno=1156)
          88	CALL_METHOD(arg=1, lineno=1156)
          90	LOAD_GLOBAL(arg=0, lineno=1156)
          92	LOAD_METHOD(arg=1, lineno=1156)
          94	LOAD_FAST(arg=4, lineno=1156)
          96	CALL_METHOD(arg=1, lineno=1156)
          98	COMPARE_OP(arg=3, lineno=1156)
         100	RETURN_VALUE(arg=None, lineno=1156)
>        102	LOAD_GLOBAL(arg=0, lineno=1158)
         104	LOAD_METHOD(arg=2, lineno=1158)
         106	LOAD_FAST(arg=3, lineno=1158)
         108	CALL_METHOD(arg=1, lineno=1158)
         110	LOAD_GLOBAL(arg=0, lineno=1158)
         112	LOAD_METHOD(arg=2, lineno=1158)
         114	LOAD_FAST(arg=4, lineno=1158)
         116	CALL_METHOD(arg=1, lineno=1158)
         118	COMPARE_OP(arg=3, lineno=1158)
         120	RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1144)
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1147)
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1147)
2025-06-09 20:42:16,159 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1147)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=1147)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=UNARY_NEGATIVE(arg=None, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$threshold10.3']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=3, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=DUP_TOP(arg=None, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=ROT_THREE(arg=None, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$12unary_negative.4', '$x014.5', '$16dup_top.6']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$12unary_negative.4', '$x014.5']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=POP_JUMP_IF_FALSE(arg=17, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$16dup_top.6', '$20compare_op.7']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=24, stack=('$16dup_top.6',), blockstack=(), npush=0), Edge(pc=32, stack=('$16dup_top.6',), blockstack=(), npush=0)]
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=24 nstack_initial=1), State(pc_initial=32 nstack_initial=1)])
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack: ['$phi24.0']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=24 nstack_initial=1)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=1, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$phi24.0']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=COMPARE_OP(arg=1, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$phi24.0', '$threshold24.1']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=POP_JUMP_IF_FALSE(arg=21, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$26compare_op.2']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=(), blockstack=(), npush=0), Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=1), State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack: ['$phi32.0']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=1)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_TOP(arg=None, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack ['$phi32.0']
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=0)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=JUMP_FORWARD(arg=2, lineno=1148)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=36, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=40 nstack_initial=0)
2025-06-09 20:42:16,160 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=0, lineno=1151)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=2, lineno=1151)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$x40.0']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=1151)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$x40.0', '$const42.1']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_FAST(arg=4, lineno=1151)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$44binary_subscr.2']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=UNARY_NEGATIVE(arg=None, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$threshold48.3']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=4, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=DUP_TOP(arg=None, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=ROT_THREE(arg=None, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$50unary_negative.4', '$x152.5', '$54dup_top.6']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$50unary_negative.4', '$x152.5']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=POP_JUMP_IF_FALSE(arg=36, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$54dup_top.6', '$58compare_op.7']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=62, stack=('$54dup_top.6',), blockstack=(), npush=0), Edge(pc=70, stack=('$54dup_top.6',), blockstack=(), npush=0)]
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0), State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1)])
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=1, lineno=1149)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=STORE_FAST(arg=3, lineno=1149)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$const36.0']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=40, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=1), State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0)])
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack: ['$phi62.0']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=1)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$phi62.0']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=COMPARE_OP(arg=1, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$phi62.0', '$threshold62.1']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=POP_JUMP_IF_FALSE(arg=40, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$64compare_op.2']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=68, stack=(), blockstack=(), npush=0), Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=1), State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack: ['$phi70.0']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=1)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=POP_TOP(arg=None, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack ['$phi70.0']
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,161 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=40 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=JUMP_FORWARD(arg=2, lineno=1152)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=78 nstack_initial=0)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=2, lineno=1155)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=POP_JUMP_IF_FALSE(arg=52, lineno=1155)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$zero_pos78.0']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=82, stack=(), blockstack=(), npush=0), Edge(pc=102, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0)])
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1153)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=STORE_FAST(arg=4, lineno=1153)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$const74.0']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=78, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$82load_global.0']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=3, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$84load_method.1']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$84load_method.1', '$x086.2']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_GLOBAL(arg=0, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$88call_method.3']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_METHOD(arg=1, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$90load_global.4']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=4, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_METHOD(arg=1, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$92load_method.5', '$x194.6']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=3, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$88call_method.3', '$96call_method.7']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=RETURN_VALUE(arg=None, lineno=1156)
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack ['$98compare_op.8']
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:42:16,162 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$102load_global.0']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=3, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$104load_method.1']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$104load_method.1', '$x0106.2']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=LOAD_GLOBAL(arg=0, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$108call_method.3']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_METHOD(arg=2, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$110load_global.4']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=CALL_METHOD(arg=1, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$112load_method.5', '$x1114.6']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=COMPARE_OP(arg=3, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$108call_method.3', '$116call_method.7']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=1158)
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - stack ['$118compare_op.8']
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=78 nstack_initial=0)])
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=24 nstack_initial=1): {'$phi24.0'},
             State(pc_initial=30 nstack_initial=0): set(),
             State(pc_initial=32 nstack_initial=1): set(),
             State(pc_initial=36 nstack_initial=0): set(),
             State(pc_initial=40 nstack_initial=0): set(),
             State(pc_initial=62 nstack_initial=1): {'$phi62.0'},
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=78 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set()})
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - defmap: {'$phi24.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.0': State(pc_initial=0 nstack_initial=0),
 '$phi62.0': State(pc_initial=40 nstack_initial=0),
 '$phi70.0': State(pc_initial=40 nstack_initial=0)}
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi24.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$16dup_top.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi62.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))},
             '$phi70.0': {('$54dup_top.6',
                           State(pc_initial=40 nstack_initial=0))}})
2025-06-09 20:42:16,163 - numba.core.byteflow - DEBUG - keep phismap: {'$phi24.0': {('$16dup_top.6', State(pc_initial=0 nstack_initial=0))},
 '$phi62.0': {('$54dup_top.6', State(pc_initial=40 nstack_initial=0))}}
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi24.0': '$16dup_top.6'},
             State(pc_initial=40 nstack_initial=0): {'$phi62.0': '$54dup_top.6'}})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'value': '$6binary_subscr.2'}), (10, {'res': '$threshold10.3'}), (12, {'value': '$threshold10.3', 'res': '$12unary_negative.4'}), (14, {'res': '$x014.5'}), (16, {'orig': ['$x014.5'], 'duped': ['$16dup_top.6']}), (20, {'lhs': '$12unary_negative.4', 'rhs': '$x014.5', 'res': '$20compare_op.7'}), (22, {'pred': '$20compare_op.7'})), outgoing_phis={'$phi24.0': '$16dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={24: ('$16dup_top.6',), 32: ('$16dup_top.6',)})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=24 nstack_initial=1):
AdaptBlockInfo(insts=((24, {'res': '$threshold24.1'}), (26, {'lhs': '$phi24.0', 'rhs': '$threshold24.1', 'res': '$26compare_op.2'}), (28, {'pred': '$26compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: (), 40: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=0):
AdaptBlockInfo(insts=((30, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={36: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=1):
AdaptBlockInfo(insts=((34, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$const36.0'}), (38, {'value': '$const36.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={40: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=40 nstack_initial=0):
AdaptBlockInfo(insts=((40, {'res': '$x40.0'}), (42, {'res': '$const42.1'}), (44, {'index': '$const42.1', 'target': '$x40.0', 'res': '$44binary_subscr.2'}), (46, {'value': '$44binary_subscr.2'}), (48, {'res': '$threshold48.3'}), (50, {'value': '$threshold48.3', 'res': '$50unary_negative.4'}), (52, {'res': '$x152.5'}), (54, {'orig': ['$x152.5'], 'duped': ['$54dup_top.6']}), (58, {'lhs': '$50unary_negative.4', 'rhs': '$x152.5', 'res': '$58compare_op.7'}), (60, {'pred': '$58compare_op.7'})), outgoing_phis={'$phi62.0': '$54dup_top.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={62: ('$54dup_top.6',), 70: ('$54dup_top.6',)})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=1):
AdaptBlockInfo(insts=((62, {'res': '$threshold62.1'}), (64, {'lhs': '$phi62.0', 'rhs': '$threshold62.1', 'res': '$64compare_op.2'}), (66, {'pred': '$64compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={68: (), 78: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=1):
AdaptBlockInfo(insts=((72, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$const74.0'}), (76, {'value': '$const74.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={78: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=78 nstack_initial=0):
AdaptBlockInfo(insts=((78, {'res': '$zero_pos78.0'}), (80, {'pred': '$zero_pos78.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={82: (), 102: ()})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$82load_global.0'}), (84, {'item': '$82load_global.0', 'res': '$84load_method.1'}), (86, {'res': '$x086.2'}), (88, {'func': '$84load_method.1', 'args': ['$x086.2'], 'res': '$88call_method.3'}), (90, {'res': '$90load_global.4'}), (92, {'item': '$90load_global.4', 'res': '$92load_method.5'}), (94, {'res': '$x194.6'}), (96, {'func': '$92load_method.5', 'args': ['$x194.6'], 'res': '$96call_method.7'}), (98, {'lhs': '$88call_method.3', 'rhs': '$96call_method.7', 'res': '$98compare_op.8'}), (100, {'retval': '$98compare_op.8', 'castval': '$100return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:42:16,164 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$102load_global.0'}), (104, {'item': '$102load_global.0', 'res': '$104load_method.1'}), (106, {'res': '$x0106.2'}), (108, {'func': '$104load_method.1', 'args': ['$x0106.2'], 'res': '$108call_method.3'}), (110, {'res': '$110load_global.4'}), (112, {'item': '$110load_global.4', 'res': '$112load_method.5'}), (114, {'res': '$x1114.6'}), (116, {'func': '$112load_method.5', 'args': ['$x1114.6'], 'res': '$116call_method.7'}), (118, {'lhs': '$108call_method.3', 'rhs': '$116call_method.7', 'res': '$118compare_op.8'}), (120, {'retval': '$118compare_op.8', 'castval': '$120return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:42:16,165 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    threshold = arg(1, name=threshold)       ['threshold']
    zero_pos = arg(2, name=zero_pos)         ['zero_pos']
    $const4.1 = const(int, 0)                ['$const4.1']
    x0 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$const4.1', 'x', 'x0']
    $12unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$12unary_negative.4', 'threshold']
    $20compare_op.7 = $12unary_negative.4 <= x0 ['$12unary_negative.4', '$20compare_op.7', 'x0']
    bool22 = global(bool: <class 'bool'>)    ['bool22']
    $22pred = call bool22($20compare_op.7, func=bool22, args=(Var($20compare_op.7, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$20compare_op.7', '$22pred', 'bool22']
    $phi24.0 = x0                            ['$phi24.0', 'x0']
    branch $22pred, 24, 32                   ['$22pred']
label 24:
    $26compare_op.2 = $phi24.0 <= threshold  ['$26compare_op.2', '$phi24.0', 'threshold']
    bool28 = global(bool: <class 'bool'>)    ['bool28']
    $28pred = call bool28($26compare_op.2, func=bool28, args=(Var($26compare_op.2, audio.py:1148),), kws=(), vararg=None, varkwarg=None, target=None) ['$26compare_op.2', '$28pred', 'bool28']
    branch $28pred, 30, 40                   ['$28pred']
label 30:
    jump 36                                  []
label 32:
    jump 40                                  []
label 36:
    x0 = const(int, 0)                       ['x0']
    jump 40                                  []
label 40:
    $const42.1 = const(int, -1)              ['$const42.1']
    x1 = getitem(value=x, index=$const42.1, fn=<built-in function getitem>) ['$const42.1', 'x', 'x1']
    $50unary_negative.4 = unary(fn=<built-in function neg>, value=threshold) ['$50unary_negative.4', 'threshold']
    $58compare_op.7 = $50unary_negative.4 <= x1 ['$50unary_negative.4', '$58compare_op.7', 'x1']
    bool60 = global(bool: <class 'bool'>)    ['bool60']
    $60pred = call bool60($58compare_op.7, func=bool60, args=(Var($58compare_op.7, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$58compare_op.7', '$60pred', 'bool60']
    $phi62.0 = x1                            ['$phi62.0', 'x1']
    branch $60pred, 62, 70                   ['$60pred']
label 62:
    $64compare_op.2 = $phi62.0 <= threshold  ['$64compare_op.2', '$phi62.0', 'threshold']
    bool66 = global(bool: <class 'bool'>)    ['bool66']
    $66pred = call bool66($64compare_op.2, func=bool66, args=(Var($64compare_op.2, audio.py:1152),), kws=(), vararg=None, varkwarg=None, target=None) ['$64compare_op.2', '$66pred', 'bool66']
    branch $66pred, 68, 78                   ['$66pred']
label 68:
    jump 74                                  []
label 70:
    jump 78                                  []
label 74:
    x1 = const(int, 0)                       ['x1']
    jump 78                                  []
label 78:
    bool80 = global(bool: <class 'bool'>)    ['bool80']
    $80pred = call bool80(zero_pos, func=bool80, args=(Var(zero_pos, audio.py:1144),), kws=(), vararg=None, varkwarg=None, target=None) ['$80pred', 'bool80', 'zero_pos']
    branch $80pred, 82, 102                  ['$80pred']
label 82:
    $82load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$82load_global.0']
    $84load_method.1 = getattr(value=$82load_global.0, attr=signbit) ['$82load_global.0', '$84load_method.1']
    $88call_method.3 = call $84load_method.1(x0, func=$84load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$84load_method.1', '$88call_method.3', 'x0']
    $90load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$90load_global.4']
    $92load_method.5 = getattr(value=$90load_global.4, attr=signbit) ['$90load_global.4', '$92load_method.5']
    $96call_method.7 = call $92load_method.5(x1, func=$92load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_method.5', '$96call_method.7', 'x1']
    $98compare_op.8 = $88call_method.3 != $96call_method.7 ['$88call_method.3', '$96call_method.7', '$98compare_op.8']
    $100return_value.9 = cast(value=$98compare_op.8) ['$100return_value.9', '$98compare_op.8']
    return $100return_value.9                ['$100return_value.9']
label 102:
    $102load_global.0 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$102load_global.0']
    $104load_method.1 = getattr(value=$102load_global.0, attr=sign) ['$102load_global.0', '$104load_method.1']
    $108call_method.3 = call $104load_method.1(x0, func=$104load_method.1, args=[Var(x0, audio.py:1147)], kws=(), vararg=None, varkwarg=None, target=None) ['$104load_method.1', '$108call_method.3', 'x0']
    $110load_global.4 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$110load_global.4']
    $112load_method.5 = getattr(value=$110load_global.4, attr=sign) ['$110load_global.4', '$112load_method.5']
    $116call_method.7 = call $112load_method.5(x1, func=$112load_method.5, args=[Var(x1, audio.py:1151)], kws=(), vararg=None, varkwarg=None, target=None) ['$112load_method.5', '$116call_method.7', 'x1']
    $118compare_op.8 = $108call_method.3 != $116call_method.7 ['$108call_method.3', '$116call_method.7', '$118compare_op.8']
    $120return_value.9 = cast(value=$118compare_op.8) ['$118compare_op.8', '$120return_value.9']
    return $120return_value.9                ['$120return_value.9']

2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_FAST(arg=0, lineno=1054)
           4	LOAD_CONST(arg=1, lineno=1054)
           6	BINARY_SUBSCR(arg=None, lineno=1054)
           8	LOAD_FAST(arg=0, lineno=1054)
          10	LOAD_CONST(arg=2, lineno=1054)
          12	BINARY_SUBSCR(arg=None, lineno=1054)
          14	COMPARE_OP(arg=4, lineno=1054)
          16	LOAD_FAST(arg=0, lineno=1054)
          18	LOAD_CONST(arg=1, lineno=1054)
          20	BINARY_SUBSCR(arg=None, lineno=1054)
          22	LOAD_FAST(arg=0, lineno=1054)
          24	LOAD_CONST(arg=3, lineno=1054)
          26	BINARY_SUBSCR(arg=None, lineno=1054)
          28	COMPARE_OP(arg=5, lineno=1054)
          30	BINARY_AND(arg=None, lineno=1054)
          32	RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:42:16,506 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1054)
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:42:16,507 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:42:16,508 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1057)
           2	LOAD_FAST(arg=0, lineno=1060)
           4	LOAD_CONST(arg=1, lineno=1060)
           6	BINARY_SUBSCR(arg=None, lineno=1060)
           8	LOAD_FAST(arg=0, lineno=1060)
          10	LOAD_CONST(arg=2, lineno=1060)
          12	BINARY_SUBSCR(arg=None, lineno=1060)
          14	COMPARE_OP(arg=0, lineno=1060)
          16	LOAD_FAST(arg=0, lineno=1060)
          18	LOAD_CONST(arg=1, lineno=1060)
          20	BINARY_SUBSCR(arg=None, lineno=1060)
          22	LOAD_FAST(arg=0, lineno=1060)
          24	LOAD_CONST(arg=3, lineno=1060)
          26	BINARY_SUBSCR(arg=None, lineno=1060)
          28	COMPARE_OP(arg=1, lineno=1060)
          30	BINARY_AND(arg=None, lineno=1060)
          32	RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1057)
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,508 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1060)
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:42:16,509 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:42:16,510 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=430)
           2	LOAD_FAST(arg=0, lineno=434)
           4	LOAD_CONST(arg=1, lineno=434)
           6	BINARY_SUBSCR(arg=None, lineno=434)
           8	LOAD_FAST(arg=0, lineno=434)
          10	LOAD_CONST(arg=2, lineno=434)
          12	BINARY_SUBSCR(arg=None, lineno=434)
          14	BINARY_ADD(arg=None, lineno=434)
          16	LOAD_CONST(arg=3, lineno=434)
          18	LOAD_FAST(arg=0, lineno=434)
          20	LOAD_CONST(arg=4, lineno=434)
          22	BINARY_SUBSCR(arg=None, lineno=434)
          24	BINARY_MULTIPLY(arg=None, lineno=434)
          26	BINARY_SUBTRACT(arg=None, lineno=434)
          28	STORE_FAST(arg=1, lineno=434)
          30	LOAD_FAST(arg=0, lineno=435)
          32	LOAD_CONST(arg=1, lineno=435)
          34	BINARY_SUBSCR(arg=None, lineno=435)
          36	LOAD_FAST(arg=0, lineno=435)
          38	LOAD_CONST(arg=2, lineno=435)
          40	BINARY_SUBSCR(arg=None, lineno=435)
          42	BINARY_SUBTRACT(arg=None, lineno=435)
          44	LOAD_CONST(arg=3, lineno=435)
          46	BINARY_TRUE_DIVIDE(arg=None, lineno=435)
          48	STORE_FAST(arg=2, lineno=435)
          50	LOAD_GLOBAL(arg=0, lineno=437)
          52	LOAD_METHOD(arg=1, lineno=437)
          54	LOAD_FAST(arg=2, lineno=437)
          56	CALL_METHOD(arg=1, lineno=437)
          58	LOAD_GLOBAL(arg=0, lineno=437)
          60	LOAD_METHOD(arg=1, lineno=437)
          62	LOAD_FAST(arg=1, lineno=437)
          64	CALL_METHOD(arg=1, lineno=437)
          66	COMPARE_OP(arg=5, lineno=437)
          68	POP_JUMP_IF_FALSE(arg=38, lineno=437)
          70	LOAD_CONST(arg=4, lineno=440)
          72	RETURN_VALUE(arg=None, lineno=440)
>         74	LOAD_FAST(arg=2, lineno=442)
          76	UNARY_NEGATIVE(arg=None, lineno=442)
          78	LOAD_FAST(arg=1, lineno=442)
          80	BINARY_TRUE_DIVIDE(arg=None, lineno=442)
          82	RETURN_VALUE(arg=None, lineno=442)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=430)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$x2.0']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=BINARY_ADD(arg=None, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_CONST(arg=3, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=4, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8']
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_SUBSCR(arg=None, lineno=434)
2025-06-09 20:42:16,759 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$x18.8', '$const20.9']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_MULTIPLY(arg=None, lineno=434)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$const16.7', '$22binary_subscr.10']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBTRACT(arg=None, lineno=434)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$14binary_add.6', '$24binary_multiply.11']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=434)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$26binary_subtract.12']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_CONST(arg=1, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$x30.13']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$x30.13', '$const32.14']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_SUBSCR(arg=None, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$x36.16', '$const38.17']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_SUBTRACT(arg=None, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$34binary_subscr.15', '$40binary_subscr.18']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_CONST(arg=3, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$42binary_subtract.19', '$const44.20']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=STORE_FAST(arg=2, lineno=435)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$46binary_true_divide.21']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$50load_global.22']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_FAST(arg=2, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$52load_method.23']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$52load_method.23', '$b54.24']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$56call_method.25']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=1, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$58load_global.26']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=CALL_METHOD(arg=1, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$60load_method.27', '$a62.28']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=COMPARE_OP(arg=5, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$56call_method.25', '$64call_method.29']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=POP_JUMP_IF_FALSE(arg=38, lineno=437)
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - stack ['$66compare_op.30']
2025-06-09 20:42:16,760 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=70, stack=(), blockstack=(), npush=0), Edge(pc=74, stack=(), blockstack=(), npush=0)]
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=70 nstack_initial=0), State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=70 nstack_initial=0)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=440)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=RETURN_VALUE(arg=None, lineno=440)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack ['$const70.0']
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0)])
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack: []
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=2, lineno=442)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack []
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=UNARY_NEGATIVE(arg=None, lineno=442)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack ['$b74.0']
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=1, lineno=442)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1']
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=442)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack ['$76unary_negative.1', '$a78.2']
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=RETURN_VALUE(arg=None, lineno=442)
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - stack ['$80binary_true_divide.3']
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=70 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set()})
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - defmap: {}
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14binary_add.6'}), (16, {'res': '$const16.7'}), (18, {'res': '$x18.8'}), (20, {'res': '$const20.9'}), (22, {'index': '$const20.9', 'target': '$x18.8', 'res': '$22binary_subscr.10'}), (24, {'lhs': '$const16.7', 'rhs': '$22binary_subscr.10', 'res': '$24binary_multiply.11'}), (26, {'lhs': '$14binary_add.6', 'rhs': '$24binary_multiply.11', 'res': '$26binary_subtract.12'}), (28, {'value': '$26binary_subtract.12'}), (30, {'res': '$x30.13'}), (32, {'res': '$const32.14'}), (34, {'index': '$const32.14', 'target': '$x30.13', 'res': '$34binary_subscr.15'}), (36, {'res': '$x36.16'}), (38, {'res': '$const38.17'}), (40, {'index': '$const38.17', 'target': '$x36.16', 'res': '$40binary_subscr.18'}), (42, {'lhs': '$34binary_subscr.15', 'rhs': '$40binary_subscr.18', 'res': '$42binary_subtract.19'}), (44, {'res': '$const44.20'}), (46, {'lhs': '$42binary_subtract.19', 'rhs': '$const44.20', 'res': '$46binary_true_divide.21'}), (48, {'value': '$46binary_true_divide.21'}), (50, {'res': '$50load_global.22'}), (52, {'item': '$50load_global.22', 'res': '$52load_method.23'}), (54, {'res': '$b54.24'}), (56, {'func': '$52load_method.23', 'args': ['$b54.24'], 'res': '$56call_method.25'}), (58, {'res': '$58load_global.26'}), (60, {'item': '$58load_global.26', 'res': '$60load_method.27'}), (62, {'res': '$a62.28'}), (64, {'func': '$60load_method.27', 'args': ['$a62.28'], 'res': '$64call_method.29'}), (66, {'lhs': '$56call_method.25', 'rhs': '$64call_method.29', 'res': '$66compare_op.30'}), (68, {'pred': '$66compare_op.30'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={70: (), 74: ()})
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=70 nstack_initial=0):
AdaptBlockInfo(insts=((70, {'res': '$const70.0'}), (72, {'retval': '$const70.0', 'castval': '$72return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:42:16,761 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$b74.0'}), (76, {'value': '$b74.0', 'res': '$76unary_negative.1'}), (78, {'res': '$a78.2'}), (80, {'lhs': '$76unary_negative.1', 'rhs': '$a78.2', 'res': '$80binary_true_divide.3'}), (82, {'retval': '$80binary_true_divide.3', 'castval': '$82return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-06-09 20:42:16,763 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 1)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14binary_add.6 = $6binary_subscr.2 + $12binary_subscr.5 ['$12binary_subscr.5', '$14binary_add.6', '$6binary_subscr.2']
    $const16.7 = const(int, 2)               ['$const16.7']
    $const20.9 = const(int, 0)               ['$const20.9']
    $22binary_subscr.10 = getitem(value=x, index=$const20.9, fn=<built-in function getitem>) ['$22binary_subscr.10', '$const20.9', 'x']
    $24binary_multiply.11 = $const16.7 * $22binary_subscr.10 ['$22binary_subscr.10', '$24binary_multiply.11', '$const16.7']
    a = $14binary_add.6 - $24binary_multiply.11 ['$14binary_add.6', '$24binary_multiply.11', 'a']
    $const32.14 = const(int, 1)              ['$const32.14']
    $34binary_subscr.15 = getitem(value=x, index=$const32.14, fn=<built-in function getitem>) ['$34binary_subscr.15', '$const32.14', 'x']
    $const38.17 = const(int, -1)             ['$const38.17']
    $40binary_subscr.18 = getitem(value=x, index=$const38.17, fn=<built-in function getitem>) ['$40binary_subscr.18', '$const38.17', 'x']
    $42binary_subtract.19 = $34binary_subscr.15 - $40binary_subscr.18 ['$34binary_subscr.15', '$40binary_subscr.18', '$42binary_subtract.19']
    $const44.20 = const(int, 2)              ['$const44.20']
    b = $42binary_subtract.19 / $const44.20  ['$42binary_subtract.19', '$const44.20', 'b']
    $50load_global.22 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$50load_global.22']
    $52load_method.23 = getattr(value=$50load_global.22, attr=abs) ['$50load_global.22', '$52load_method.23']
    $56call_method.25 = call $52load_method.23(b, func=$52load_method.23, args=[Var(b, pitch.py:435)], kws=(), vararg=None, varkwarg=None, target=None) ['$52load_method.23', '$56call_method.25', 'b']
    $58load_global.26 = global(np: <module 'numpy' from '/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.26']
    $60load_method.27 = getattr(value=$58load_global.26, attr=abs) ['$58load_global.26', '$60load_method.27']
    $64call_method.29 = call $60load_method.27(a, func=$60load_method.27, args=[Var(a, pitch.py:434)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.27', '$64call_method.29', 'a']
    $66compare_op.30 = $56call_method.25 >= $64call_method.29 ['$56call_method.25', '$64call_method.29', '$66compare_op.30']
    bool68 = global(bool: <class 'bool'>)    ['bool68']
    $68pred = call bool68($66compare_op.30, func=bool68, args=(Var($66compare_op.30, pitch.py:437),), kws=(), vararg=None, varkwarg=None, target=None) ['$66compare_op.30', '$68pred', 'bool68']
    branch $68pred, 70, 74                   ['$68pred']
label 70:
    $const70.0 = const(int, 0)               ['$const70.0']
    $72return_value.1 = cast(value=$const70.0) ['$72return_value.1', '$const70.0']
    return $72return_value.1                 ['$72return_value.1']
label 74:
    $76unary_negative.1 = unary(fn=<built-in function neg>, value=b) ['$76unary_negative.1', 'b']
    $80binary_true_divide.3 = $76unary_negative.1 / a ['$76unary_negative.1', '$80binary_true_divide.3', 'a']
    $82return_value.4 = cast(value=$80binary_true_divide.3) ['$80binary_true_divide.3', '$82return_value.4']
    return $82return_value.4                 ['$82return_value.4']

2025-06-09 20:42:17,127 - torio._extension.utils - DEBUG - Loading FFmpeg6
2025-06-09 20:42:17,129 - torio._extension.utils - DEBUG - Failed to load FFmpeg6 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so, 0x0006): Library not loaded: @rpath/libavutil.58.dylib
  Referenced from: <5AFB1BD2-3ECF-328E-8D2D-4823DCEF29DD> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg6.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.58.dylib' (no such file), '/opt/homebrew/lib/libavutil.58.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.58.dylib' (no such file)
2025-06-09 20:42:17,131 - torio._extension.utils - DEBUG - Loading FFmpeg5
2025-06-09 20:42:17,133 - torio._extension.utils - DEBUG - Failed to load FFmpeg5 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so, 0x0006): Library not loaded: @rpath/libavutil.57.dylib
  Referenced from: <AC262B8A-A132-325F-8D7A-E1D7E67E2E91> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg5.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.57.dylib' (no such file), '/opt/homebrew/lib/libavutil.57.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.57.dylib' (no such file)
2025-06-09 20:42:17,133 - torio._extension.utils - DEBUG - Loading FFmpeg4
2025-06-09 20:42:17,134 - torio._extension.utils - DEBUG - Failed to load FFmpeg4 extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 108, in _find_versionsed_ffmpeg_extension
    _load_lib(lib)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 94, in _load_lib
    torch.ops.load_library(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torch/_ops.py", line 1392, in load_library
    ctypes.CDLL(path)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/ctypes/__init__.py", line 374, in __init__
    self._handle = _dlopen(self._name, mode)
OSError: dlopen(/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so, 0x0006): Library not loaded: @rpath/libavutil.56.dylib
  Referenced from: <8171CFCB-0418-31CA-AA13-DEFD477EEACA> /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/lib/libtorio_ffmpeg4.so
  Reason: tried: '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/achoudhary/.pyenv/versions/3.10.15/lib/libavutil.56.dylib' (no such file), '/opt/homebrew/lib/libavutil.56.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/lib/libavutil.56.dylib' (no such file)
2025-06-09 20:42:17,134 - torio._extension.utils - DEBUG - Loading FFmpeg
2025-06-09 20:42:17,134 - torio._extension.utils - DEBUG - Failed to load FFmpeg extension.
Traceback (most recent call last):
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 116, in _find_ffmpeg_extension
    ext = _find_versionsed_ffmpeg_extension(ffmpeg_ver)
  File "/Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/torio/_extension/utils.py", line 106, in _find_versionsed_ffmpeg_extension
    raise RuntimeError(f"FFmpeg{version} extension is not available.")
RuntimeError: FFmpeg extension is not available.
2025-06-09 20:42:18,504 - matplotlib - DEBUG - matplotlib data path: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/matplotlib/mpl-data
2025-06-09 20:42:18,509 - matplotlib - DEBUG - CONFIGDIR=/Users/achoudhary/.matplotlib
2025-06-09 20:42:18,512 - matplotlib - DEBUG - interactive is False
2025-06-09 20:42:18,512 - matplotlib - DEBUG - platform is darwin
2025-06-09 20:42:18,587 - matplotlib - DEBUG - CACHEDIR=/Users/achoudhary/.matplotlib
2025-06-09 20:42:18,592 - matplotlib.font_manager - DEBUG - Using fontManager instance from /Users/achoudhary/.matplotlib/fontlist-v330.json
2025-06-09 20:42:18,882 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2025-06-09 20:42:21,825 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:42:21,986 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:42:21,986 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:42:21,986 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:42:21,987 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:42:21,988 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:42:21,988 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:42:21,988 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:42:22,126 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 20:42:22,130 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:42:22,169 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:42:22,176 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:42:22,239 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:42:22,378 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:42:22,378 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:42:22,379 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:42:22,379 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:42:22,380 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:42:22,380 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:42:22,380 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:42:22,382 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 20:42:22,555 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 20:42:22,714 - jarvis_app - INFO - TTS initialized with sample rate 22050
2025-06-09 20:42:22,756 - jarvis_app - INFO - Audio output test successful
2025-06-09 20:42:26,340 - fsspec.local - DEBUG - open file: /Users/achoudhary/.pyenv/versions/3.10.15/lib/python3.10/site-packages/TTS/.models.json
2025-06-09 20:42:26,345 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:42:26,350 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:42:26,364 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/config.json
2025-06-09 20:42:26,459 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '--voices']
2025-06-09 20:42:26,610 - root - DEBUG - line: 'Pty Language       Age/Gender VoiceName          File                 Other Languages'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  af              --/M      Afrikaans          gmw/af'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  am              --/M      Amharic            sem/am'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  an              --/M      Aragonese          roa/an'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  ar              --/M      Arabic             sem/ar'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  as              --/M      Assamese           inc/as'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  az              --/M      Azerbaijani        trk/az'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  ba              --/M      Bashkir            trk/ba'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  be              --/M      Belarusian         zle/be'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  bg              --/M      Bulgarian          zls/bg'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  bn              --/M      Bengali            inc/bn'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  bpy             --/M      Bishnupriya_Manipuri inc/bpy'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  bs              --/M      Bosnian            zls/bs'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  ca              --/M      Catalan            roa/ca'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  ca-ba           --/M      Catalan_(Balearic) roa/ca-ba'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  ca-nw           --/M      Catalan_(North-western) roa/ca-nw'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  ca-va           --/M      Catalan_(Valencian) roa/ca-va'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  chr-US-Qaaa-x-west --/M      Cherokee_          iro/chr'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  cmn             --/M      Chinese_(Mandarin,_latin_as_English) sit/cmn              (zh-cmn 5)(zh 5)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  cmn-latn-pinyin --/M      Chinese_(Mandarin,_latin_as_Pinyin) sit/cmn-Latn-pinyin  (zh-cmn 5)(zh 5)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  cs              --/M      Czech              zlw/cs'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  cv              --/M      Chuvash            trk/cv'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  cy              --/M      Welsh              cel/cy'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  da              --/M      Danish             gmq/da'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  de              --/M      German             gmw/de'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  el              --/M      Greek              grk/el'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  en-029          --/M      English_(Caribbean) gmw/en-029           (en 10)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '2  en-gb           --/M      English_(Great_Britain) gmw/en               (en 2)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  en-gb-scotland  --/M      English_(Scotland) gmw/en-GB-scotland   (en 4)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  en-gb-x-gbclan  --/M      English_(Lancaster) gmw/en-GB-x-gbclan   (en-gb 3)(en 5)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  en-gb-x-gbcwmd  --/M      English_(West_Midlands) gmw/en-GB-x-gbcwmd   (en-gb 9)(en 9)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  en-gb-x-rp      --/M      English_(Received_Pronunciation) gmw/en-GB-x-rp       (en-gb 4)(en 5)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  en-shaw         --/M      English_(Shavian_alphabet) gmw/en-Shaw'
2025-06-09 20:42:26,611 - root - DEBUG - line: '2  en-us           --/M      English_(America)  gmw/en-US            (en 3)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  en-us-nyc       --/M      English_(America,_New_York_City) gmw/en-US-nyc'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  eo              --/M      Esperanto          art/eo'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  es              --/M      Spanish_(Spain)    roa/es'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  es-419          --/M      Spanish_(Latin_America) roa/es-419           (es-mx 6)'
2025-06-09 20:42:26,611 - root - DEBUG - line: '5  et              --/M      Estonian           urj/et'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  eu              --/M      Basque             eu'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  fa              --/M      Persian            ira/fa'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  fa-latn         --/M      Persian_(Pinglish) ira/fa-Latn'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  fi              --/M      Finnish            urj/fi'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  fo              --/M      Faroese            gmq/fo'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  fr-be           --/M      French_(Belgium)   roa/fr-BE            (fr 8)'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  fr-ch           --/M      French_(Switzerland) roa/fr-CH            (fr 8)'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  fr-fr           --/M      French_(France)    roa/fr               (fr 5)'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ga              --/M      Gaelic_(Irish)     cel/ga'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  gd              --/M      Gaelic_(Scottish)  cel/gd'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  gn              --/M      Guarani            sai/gn'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  grc             --/M      Greek_(Ancient)    grk/grc'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  gu              --/M      Gujarati           inc/gu'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  hak             --/M      Hakka_Chinese      sit/hak'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  haw             --/M      Hawaiian           map/haw'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  he              --/M      Hebrew             sem/he'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  hi              --/M      Hindi              inc/hi'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  hr              --/M      Croatian           zls/hr               (hbs 5)'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ht              --/M      Haitian_Creole     roa/ht'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  hu              --/M      Hungarian          urj/hu'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  hy              --/M      Armenian_(East_Armenia) ine/hy               (hy-arevela 5)'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  hyw             --/M      Armenian_(West_Armenia) ine/hyw              (hy-arevmda 5)(hy 8)'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ia              --/M      Interlingua        art/ia'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  id              --/M      Indonesian         poz/id'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  io              --/M      Ido                art/io'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  is              --/M      Icelandic          gmq/is'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  it              --/M      Italian            roa/it'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ja              --/M      Japanese           jpx/ja'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  jbo             --/M      Lojban             art/jbo'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ka              --/M      Georgian           ccs/ka'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  kaa             --/M      Karakalpak         trk/kaa'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  kk              --/M      Kazakh             trk/kk'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  kl              --/M      Greenlandic        esx/kl'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  kn              --/M      Kannada            dra/kn'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ko              --/M      Korean             ko'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  kok             --/M      Konkani            inc/kok'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ku              --/M      Kurdish            ira/ku'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ky              --/M      Kyrgyz             trk/ky'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  la              --/M      Latin              itc/la'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  lb              --/M      Luxembourgish      gmw/lb'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  lfn             --/M      Lingua_Franca_Nova art/lfn'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  lt              --/M      Lithuanian         bat/lt'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ltg             --/M      Latgalian          bat/ltg'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  lv              --/M      Latvian            bat/lv'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  mi              --/M      Māori             poz/mi'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  mk              --/M      Macedonian         zls/mk'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ml              --/M      Malayalam          dra/ml'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  mr              --/M      Marathi            inc/mr'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ms              --/M      Malay              poz/ms'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  mt              --/M      Maltese            sem/mt'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  mto             --/M      Totontepec_Mixe    miz/mto'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  my              --/M      Myanmar_(Burmese)  sit/my'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  nb              --/M      Norwegian_Bokmål  gmq/nb               (no 5)'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  nci             --/M      Nahuatl_(Classical) azc/nci'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  ne              --/M      Nepali             inc/ne'
2025-06-09 20:42:26,612 - root - DEBUG - line: '5  nl              --/M      Dutch              gmw/nl'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  nog             --/M      Nogai              trk/nog'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  om              --/M      Oromo              cus/om'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  or              --/M      Oriya              inc/or'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  pa              --/M      Punjabi            inc/pa'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  pap             --/M      Papiamento         roa/pap'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  piqd            --/M      Klingon            art/piqd'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  pl              --/M      Polish             zlw/pl'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  pt              --/M      Portuguese_(Portugal) roa/pt               (pt-pt 5)'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  pt-br           --/M      Portuguese_(Brazil) roa/pt-BR            (pt 6)'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  py              --/M      Pyash              art/py'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  qdb             --/M      Lang_Belta         art/qdb'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  qu              --/M      Quechua            qu'
2025-06-09 20:42:26,613 - root - DEBUG - line: "5  quc             --/M      K'iche'            myn/quc"
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  qya             --/M      Quenya             art/qya'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  ro              --/M      Romanian           roa/ro'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  ru              --/M      Russian            zle/ru'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  ru-cl           --/M      Russian_(Classic)  zle/ru-cl'
2025-06-09 20:42:26,613 - root - DEBUG - line: '2  ru-lv           --/M      Russian_(Latvia)   zle/ru-LV'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sd              --/M      Sindhi             inc/sd'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  shn             --/M      Shan_(Tai_Yai)     tai/shn'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  si              --/M      Sinhala            inc/si'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sjn             --/M      Sindarin           art/sjn'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sk              --/M      Slovak             zlw/sk'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sl              --/M      Slovenian          zls/sl'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  smj             --/M      Lule_Saami         urj/smj'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sq              --/M      Albanian           ine/sq'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sr              --/M      Serbian            zls/sr'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sv              --/M      Swedish            gmq/sv'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  sw              --/M      Swahili            bnt/sw'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  ta              --/M      Tamil              dra/ta'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  te              --/M      Telugu             dra/te'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  th              --/M      Thai               tai/th'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  ti              --/M      Tigrinya           sem/ti'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  tk              --/M      Turkmen            trk/tk'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  tn              --/M      Setswana           bnt/tn'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  tr              --/M      Turkish            trk/tr'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  tt              --/M      Tatar              trk/tt'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  ug              --/M      Uyghur             trk/ug'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  uk              --/M      Ukrainian          zle/uk'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  ur              --/M      Urdu               inc/ur'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  uz              --/M      Uzbek              trk/uz'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  vi              --/M      Vietnamese_(Northern) aav/vi'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  vi-vn-x-central --/M      Vietnamese_(Central) aav/vi-VN-x-central'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  vi-vn-x-south   --/M      Vietnamese_(Southern) aav/vi-VN-x-south'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  xex             --/M      xextan-test        art/xex'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese) sit/yue              (zh-yue 5)(zh 8)'
2025-06-09 20:42:26,613 - root - DEBUG - line: '5  yue             --/M      Chinese_(Cantonese,_latin_as_Jyutping) sit/yue-Latn-jyutping (zh-yue 5)(zh 8)'
2025-06-09 20:42:26,614 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/speaker_ids.json
2025-06-09 20:42:26,797 - fsspec.local - DEBUG - open file: /Users/achoudhary/Library/Application Support/tts/tts_models--en--vctk--vits/model_file.pth
2025-06-09 20:42:26,940 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Just give me a sec']
2025-06-09 20:42:27,111 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xca\x8c_s_t \xc9\xa1_\xcb\x88\xc9\xaa_v m_\xcb\x8ci\xcb\x90_ \xc9\x90 s_\xcb\x88\xc9\x9b_k\n'
2025-06-09 20:42:27,385 - asyncio - DEBUG - Using selector: KqueueSelector
2025-06-09 20:42:27,385 - jarvis_app - INFO - Jarvis components imported successfully
2025-06-09 20:42:27,388 - jarvis_app - INFO - Starting Jarvis AI Assistant on port 5002
2025-06-09 20:42:27,388 - jarvis_app - INFO - Starting TTS worker thread
2025-06-09 20:42:27,389 - jarvis_app - INFO - TTS worker thread started
2025-06-09 20:42:27,389 - jarvis_app - INFO - TTS worker thread started successfully
2025-06-09 20:42:27,389 - jarvis_app - INFO - Running with audio output
2025-06-09 20:42:27,389 - jarvis_app - INFO - Sending startup message: 'Jarvis web interface is now online and ready.'
2025-06-09 20:42:27,389 - jarvis_app - INFO - Starting Flask server on port 5002
2025-06-09 20:42:27,397 - jarvis_app - INFO - Audio output stream opened
2025-06-09 20:42:27,397 - jarvis_app - INFO - TTS processing phrase: 'Jarvis web interface is now online and ready.'
2025-06-09 20:42:27,398 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Jarvis web interface is now online and ready']
2025-06-09 20:42:27,428 - werkzeug - INFO - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5002
 * Running on http://192.168.1.86:5002
2025-06-09 20:42:27,428 - werkzeug - INFO - [33mPress CTRL+C to quit[0m
2025-06-09 20:42:27,555 - root - DEBUG - line: b'd\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s w_\xcb\x88\xc9\x9b_b \xcb\x88\xc9\xaa_n_t_\xc9\x9a_f_\xcb\x8ce\xc9\xaa_s \xc9\xaa_z n_\xcb\x88a\xca\x8a \xcb\x88\xc9\x91\xcb\x90_n_l_a\xc9\xaa_n__ \xc3\xa6_n_d \xc9\xb9_\xcb\x88\xc9\x9b_d_i\n'
2025-06-09 20:42:27,929 - jarvis_app - INFO - TTS generated 58384 samples
2025-06-09 20:42:28,624 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:42:28,626 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:42:29,628 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:42:29] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:42:29,628 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:42:29] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:42:30,687 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:42:37,223 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:42:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:42:37,224 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:42:37,225 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:42:38,229 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:42:38] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:42:38,230 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:42:38] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:42:43,911 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:42:43,911 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarylM81G7UBIjtbMryD
2025-06-09 20:42:43,917 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:42:43,917 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Accept: application/json, text/plain, */*
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarylM81G7UBIjtbMryD
Sec-Fetch-Site: same-site
Origin: http://localhost:3002
Sec-Fetch-Mode: cors
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/19.0 Safari/605.1.15
Referer: http://localhost:3002/
Sec-Fetch-Dest: empty
Content-Length: 41188
Accept-Language: en-US,en;q=0.9
Priority: u=3, i
Accept-Encoding: gzip, deflate
Connection: keep-alive


2025-06-09 20:42:43,917 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:42:43,920 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:42:45,461 - jarvis_app - INFO - Transcription result: Hey Jarvis, who are you?
2025-06-09 20:42:45,462 - jarvis_app - INFO - Sending prompt to OpenAI: , who are you
2025-06-09 20:42:45,462 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, who are you?'}
2025-06-09 20:42:45,462 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:42:46,057 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c1a48f80-b18c-464c-9fe0-c9223756a636', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', who are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:42:46,135 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:42:46,136 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:42:46,169 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17c68ca30>
2025-06-09 20:42:46,169 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16993f2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:42:46,188 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17c68cac0>
2025-06-09 20:42:46,189 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:42:46,189 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:42:46,189 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:42:46,189 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:42:46,189 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:42:46,788 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:42:46 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'194'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'200'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_3c46201406a5faae4f746ab08cd8b148'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=yfvXilL.Gr9zfn2ykoaXyVZyXjX.8OtTkY2M5W9L17c-1749526966-1.0.1.1-IItqHUTunK_kZ1jiFpbxcKqcLA8p1bYvZcHST0ILO9t3mcf6xr9YXzYAa7ppVKIRo0sPDJJDgjkFVsBefIf2zqDYzZuLJvzMOUfF10fwmzE; path=/; expires=Tue, 10-Jun-25 04:12:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=E5J9erETDsxFDrl2qYNCv9YXhAg6cRMGQbl.4M51rD8-1749526966789-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5dc52c94d7afa-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:42:46,797 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:42:46,797 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 03:42:46 GMT'), ('content-type', 'text/event-stream; charset=utf-8'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'personal-tqzlct'), ('openai-processing-ms', '194'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '200'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199965'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '10ms'), ('x-request-id', 'req_3c46201406a5faae4f746ab08cd8b148'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=yfvXilL.Gr9zfn2ykoaXyVZyXjX.8OtTkY2M5W9L17c-1749526966-1.0.1.1-IItqHUTunK_kZ1jiFpbxcKqcLA8p1bYvZcHST0ILO9t3mcf6xr9YXzYAa7ppVKIRo0sPDJJDgjkFVsBefIf2zqDYzZuLJvzMOUfF10fwmzE; path=/; expires=Tue, 10-Jun-25 04:12:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=E5J9erETDsxFDrl2qYNCv9YXhAg6cRMGQbl.4M51rD8-1749526966789-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d5dc52c94d7afa-SJC'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 20:42:46,797 - openai._base_client - DEBUG - request_id: req_3c46201406a5faae4f746ab08cd8b148
2025-06-09 20:42:46,797 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:42:47,087 - jarvis_app - INFO - TTS processing phrase: 'I am Jarvis, an AI designed to assist you with information and tasks.'
2025-06-09 20:42:47,094 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I am Jarvis']
2025-06-09 20:42:47,208 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:42:47,209 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:42:47,209 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:42:47,209 - jarvis_app - INFO - Full response: I am Jarvis, an AI designed to assist you with information and tasks. How can I help you today?
2025-06-09 20:42:47,210 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:42:47] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:42:47,251 - jarvis_app - DEBUG - Sending message to client: 'I am Jarvis, an AI designed to assist you with information and tasks.'
2025-06-09 20:42:47,257 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'I am Jarvis, an AI designed to assist you with information and tasks. How can I help you today?'}
2025-06-09 20:42:47,278 - root - DEBUG - line: b'a\xc9\xaa_\xc9\x90_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s\n'
2025-06-09 20:42:47,278 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'an AI designed to assist you with information and tasks']
2025-06-09 20:42:47,449 - root - DEBUG - line: b'\xc9\x90_n \xcb\x8ce\xc9\xaa_\xcb\x88a\xc9\xaa d_\xc9\xaa_z_\xcb\x88a\xc9\xaa_n_d t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 w_\xc9\xaa_\xc3\xb0 \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc3\xa6_n_d t_\xcb\x88\xc3\xa6_s_k_s\n'
2025-06-09 20:42:47,675 - jarvis_app - DEBUG - Sending message to client: 'How can I help you today?'
2025-06-09 20:42:48,048 - jarvis_app - INFO - TTS generated 88592 samples
2025-06-09 20:42:52,159 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:42:52,160 - jarvis_app - INFO - TTS processing phrase: 'How can I help you today?'
2025-06-09 20:42:52,163 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I help you today']
2025-06-09 20:42:52,364 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:42:52,687 - jarvis_app - INFO - TTS generated 35856 samples
2025-06-09 20:42:54,431 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:47:35,834 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:47:35] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:47:35,836 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:47:35,837 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:47:35,839 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:47:35] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:47:36,838 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:47:36] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:47:36,841 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:47:36] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:47:49,603 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:47:49,604 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary3BLGtoOUAXi4NGJh
2025-06-09 20:47:49,606 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:47:49,606 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 29330
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary3BLGtoOUAXi4NGJh
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:47:49,606 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:47:49,609 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:47:50,957 - jarvis_app - INFO - Transcription result: Hi, Jarvis. Who are you?
2025-06-09 20:47:50,958 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:47:50] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:47:51,875 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi, Jarvis. Who are you?'}
2025-06-09 20:48:01,884 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:01] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:48:01,886 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:01] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:48:01,888 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:48:01,889 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:48:02,892 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:02] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:48:02,895 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:02] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:48:04,904 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:48:04,905 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryHABgrsQCIJrtjf7g
2025-06-09 20:48:04,907 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:48:04,907 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 34160
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHABgrsQCIJrtjf7g
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:48:04,907 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:48:04,909 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:48:05,987 - jarvis_app - INFO - Transcription result: Hi Jarvis, who are you?
2025-06-09 20:48:05,988 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:05] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:48:05,988 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi Jarvis, who are you?'}
2025-06-09 20:48:14,059 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:14] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:48:14,062 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:14] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:48:14,066 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:48:14,068 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:48:15,072 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:15] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:48:15,072 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:15] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:48:18,976 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:48:18,976 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryXe9ZWA9EIggtwEaR
2025-06-09 20:48:18,977 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:48:18,977 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 31262
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryXe9ZWA9EIggtwEaR
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:48:18,978 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:48:18,984 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:48:20,105 - jarvis_app - INFO - Transcription result: Hi Jarvis, who are you?
2025-06-09 20:48:20,106 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:48:20] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:48:20,106 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi Jarvis, who are you?'}
2025-06-09 20:49:43,229 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 20:49:43,231 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:49:43,231 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:49:43,231 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 20:49:43,231 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 20:49:43,232 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:49:43] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 20:49:43,237 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 20:49:43,429 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 20:49:43,868 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 20:49:44,012 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 20:49:44,232 - jarvis_app - INFO - TTS generated 91936 samples
2025-06-09 20:49:48,478 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:49:58,454 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:49:58,454 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryvkCIWuv8JoajOQUE
2025-06-09 20:49:58,456 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:49:58,456 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 132692
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryvkCIWuv8JoajOQUE
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:49:58,457 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:49:58,460 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:49:59,905 - jarvis_app - INFO - Transcription result: Hey Javes, can you tell me a bit about yourself?
2025-06-09 20:49:59,906 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:49:59] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:49:59,906 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Javes, can you tell me a bit about yourself?'}
2025-06-09 20:50:05,219 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:50:05,220 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary1j0sUH1egyeIZ4bl
2025-06-09 20:50:05,222 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:50:05,223 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 47684
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1j0sUH1egyeIZ4bl
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:50:05,223 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:50:05,226 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:50:06,358 - jarvis_app - INFO - Transcription result: Hey Jarvis, can you tell me a bit about yourself?
2025-06-09 20:50:06,359 - jarvis_app - INFO - Sending prompt to OpenAI: , can you tell me a bit about yourself
2025-06-09 20:50:06,359 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, can you tell me a bit about yourself?'}
2025-06-09 20:50:06,360 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6fdc5d52-a3b7-42c9-9c9f-17363ad3a3a6', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', can you tell me a bit about yourself'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:50:06,362 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:50:06,362 - httpcore.connection - DEBUG - close.started
2025-06-09 20:50:06,363 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:50:06,363 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:50:06,392 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d57b0>
2025-06-09 20:50:06,392 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16993f2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:50:06,413 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d5510>
2025-06-09 20:50:06,413 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:50:06,413 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:50:06,413 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:50:06,413 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:50:06,413 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:50:06,610 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:50:07,166 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:50:07 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'205'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'525'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199957'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_fec5fdb21fe9a9963d6cc1b6f0f5c2b4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5e7122f691692-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:50:07,168 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:50:07,168 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:50:07 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '205', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '525', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199957', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_fec5fdb21fe9a9963d6cc1b6f0f5c2b4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5e7122f691692-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:50:07,169 - openai._base_client - DEBUG - request_id: req_fec5fdb21fe9a9963d6cc1b6f0f5c2b4
2025-06-09 20:50:07,169 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:50:07,350 - jarvis_app - DEBUG - Sending message to client: 'I'm an AI designed to assist with providing information and answering questions.'
2025-06-09 20:50:07,350 - jarvis_app - INFO - TTS processing phrase: 'I'm an AI designed to assist with providing information and answering questions.'
2025-06-09 20:50:07,355 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm an AI designed to assist with providing information and answering questions"]
2025-06-09 20:50:07,556 - root - DEBUG - line: b'a\xc9\xaa_m \xc9\x90_n \xcb\x8ce\xc9\xaa_\xcb\x88a\xc9\xaa d_\xc9\xaa_z_\xcb\x88a\xc9\xaa_n_d t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t w_\xc9\xaa_\xc3\xb0 p_\xc9\xb9_\xc9\x99_v_\xcb\x88a\xc9\xaa_d_\xc9\xaa_\xc5\x8b \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc3\xa6_n_d \xcb\x88\xc3\xa6_n_s_\xc9\x9a_\xc9\xb9_\xc9\xaa_\xc5\x8b k_w_\xcb\x88\xc9\x9b_s_t\xca\x83_\xc9\x99_n_z\n'
2025-06-09 20:50:07,656 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:50:07,656 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:50:07,656 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:50:07,657 - jarvis_app - INFO - Full response: I'm an AI designed to assist with providing information and answering questions. I can help with a wide range of topics, from general knowledge to specific inquiries. How can I assist you today?
2025-06-09 20:50:07,657 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:50:07] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:50:08,101 - jarvis_app - INFO - TTS generated 90128 samples
2025-06-09 20:50:08,383 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm an AI designed to assist with providing information and answering questions. I can help with a wide range of topics, from general knowledge to specific inquiries. How can I assist you today?"}
2025-06-09 20:50:12,302 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:50:12,302 - jarvis_app - INFO - TTS processing phrase: 'I can help with a wide range of topics, from general knowledge to specific inquiries.'
2025-06-09 20:50:12,308 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I can help with a wide range of topics']
2025-06-09 20:50:12,510 - root - DEBUG - line: b'a\xc9\xaa k_\xc3\xa6_n h_\xcb\x88\xc9\x9b_l_p w_\xc9\xaa_\xc3\xb0 \xc9\x90 w_\xcb\x88a\xc9\xaa_d \xc9\xb9_\xcb\x88e\xc9\xaa_n_d\xca\x92 \xca\x8c_v t_\xcb\x88\xc9\x91\xcb\x90_p_\xc9\xaa_k_s\n'
2025-06-09 20:50:12,510 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'from general knowledge to specific inquiries']
2025-06-09 20:50:12,644 - root - DEBUG - line: b'f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x9b_n_\xc9\x9a_\xc9\xb9_\xc9\x99l n_\xcb\x88\xc9\x91\xcb\x90_l_\xc9\xaa_d\xca\x92 t_\xc9\x99 s_p_\xc9\x99_s_\xcb\x88\xc9\xaa_f_\xc9\xaa_k \xcb\x88\xc9\xaa_\xc5\x8b_k_w_\xc9\x9a_\xc9\xb9_i_z\n'
2025-06-09 20:50:13,309 - jarvis_app - INFO - TTS generated 92432 samples
2025-06-09 20:50:17,601 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:50:17,601 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:50:17,603 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:50:17,780 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:50:18,046 - jarvis_app - INFO - TTS generated 37648 samples
2025-06-09 20:50:19,836 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:50:19,904 - jarvis_app - DEBUG - Sending message to client: 'I can help with a wide range of topics, from general knowledge to specific inquiries.'
2025-06-09 20:50:20,108 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:51:10,848 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:51:10] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:51:10,851 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:51:10] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:51:10,852 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:51:10,853 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:51:11,857 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:51:11] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:51:11,858 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:51:11] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:51:20,022 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:51:20,022 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarynUvAyA1V9NEfyuIB
2025-06-09 20:51:20,024 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:51:20,024 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 41888
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarynUvAyA1V9NEfyuIB
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:51:20,024 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:51:20,028 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:51:21,323 - jarvis_app - INFO - Transcription result: Hey, Javes, who are you?
2025-06-09 20:51:21,325 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:51:21] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:51:21,325 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javes, who are you?'}
2025-06-09 20:51:25,973 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:51:25,974 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryShR0gQDBAhAGQAht
2025-06-09 20:51:25,976 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:51:25,976 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 42854
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryShR0gQDBAhAGQAht
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:51:25,977 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:51:25,979 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:51:27,055 - jarvis_app - INFO - Transcription result: Hey Jarvis, tell me a bit about yourself.
2025-06-09 20:51:27,056 - jarvis_app - INFO - Sending prompt to OpenAI: , tell me a bit about yourself
2025-06-09 20:51:27,056 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:51:27,057 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e958d89b-049e-4a67-a837-0d1646f9afb9', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', tell me a bit about yourself'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:51:27,058 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:51:27,059 - httpcore.connection - DEBUG - close.started
2025-06-09 20:51:27,059 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:51:27,059 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:51:27,086 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d6830>
2025-06-09 20:51:27,086 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16993f2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:51:27,107 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d7190>
2025-06-09 20:51:27,107 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:51:27,108 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:51:27,108 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:51:27,108 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:51:27,108 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:51:27,344 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, tell me a bit about yourself.'}
2025-06-09 20:51:27,813 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:51:27 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'573'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'595'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199960'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'12ms'), (b'x-request-id', b'req_de8b27c158fb646f4ca18f876b1e95d9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5e90a8c48fa1e-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:51:27,815 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:51:27,815 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:51:27 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '573', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '595', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199960', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_de8b27c158fb646f4ca18f876b1e95d9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5e90a8c48fa1e-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:51:27,815 - openai._base_client - DEBUG - request_id: req_de8b27c158fb646f4ca18f876b1e95d9
2025-06-09 20:51:27,815 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:51:28,188 - jarvis_app - DEBUG - Sending message to client: 'I'm an AI developed to assist with information and answer questions.'
2025-06-09 20:51:28,188 - jarvis_app - INFO - TTS processing phrase: 'I'm an AI developed to assist with information and answer questions.'
2025-06-09 20:51:28,193 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "I'm an AI developed to assist with information and answer questions"]
2025-06-09 20:51:28,396 - root - DEBUG - line: b'a\xc9\xaa_m \xc9\x90_n \xcb\x8ce\xc9\xaa_\xcb\x88a\xc9\xaa d_\xc9\xaa_v_\xcb\x88\xc9\x9b_l_\xc9\x99_p_t t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t w_\xc9\xaa_\xc3\xb0 \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc3\xa6_n_d \xcb\x88\xc3\xa6_n_s_\xc9\x9a k_w_\xcb\x88\xc9\x9b_s_t\xca\x83_\xc9\x99_n_z\n'
2025-06-09 20:51:28,704 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:51:28,704 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:51:28,704 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:51:28,704 - jarvis_app - INFO - Full response: I'm an AI developed to assist with information and answer questions. I can help with a variety of topics, providing concise and clear responses. How can I assist you today?
2025-06-09 20:51:28,705 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:51:28] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:51:28,879 - jarvis_app - INFO - TTS generated 78352 samples
2025-06-09 20:51:29,351 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I'm an AI developed to assist with information and answer questions. I can help with a variety of topics, providing concise and clear responses. How can I assist you today?"}
2025-06-09 20:51:32,524 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:51:32,524 - jarvis_app - INFO - TTS processing phrase: 'I can help with a variety of topics, providing concise and clear responses.'
2025-06-09 20:51:32,534 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I can help with a variety of topics']
2025-06-09 20:51:32,737 - root - DEBUG - line: b'a\xc9\xaa k_\xc3\xa6_n h_\xcb\x88\xc9\x9b_l_p w_\xc9\xaa_\xc3\xb0 \xc9\x90 v_\xc9\x9a_\xc9\xb9_\xcb\x88a\xc9\xaa\xc9\x99_\xc9\xbe_i_ \xca\x8c_v t_\xcb\x88\xc9\x91\xcb\x90_p_\xc9\xaa_k_s\n'
2025-06-09 20:51:32,738 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'providing concise and clear responses']
2025-06-09 20:51:32,876 - root - DEBUG - line: b'p_\xc9\xb9_\xc9\x99_v_\xcb\x88a\xc9\xaa_d_\xc9\xaa_\xc5\x8b k_\xc9\x99_n_s_\xcb\x88a\xc9\xaa_s__ \xc3\xa6_n_d k_l_\xcb\x88\xc9\xaa\xc9\xb9 \xc9\xb9_\xe1\xb5\xbb_s_p_\xcb\x88\xc9\x91\xcb\x90_n_s_\xe1\xb5\xbb_z\n'
2025-06-09 20:51:33,469 - jarvis_app - INFO - TTS generated 91152 samples
2025-06-09 20:51:37,722 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:51:37,722 - jarvis_app - INFO - TTS processing phrase: 'How can I assist you today?'
2025-06-09 20:51:37,724 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'How can I assist you today']
2025-06-09 20:51:37,882 - root - DEBUG - line: b'h_\xcb\x8ca\xca\x8a k_\xc3\xa6_n a\xc9\xaa \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 t_\xc9\x99_d_\xcb\x88e\xc9\xaa\n'
2025-06-09 20:51:38,151 - jarvis_app - INFO - TTS generated 37648 samples
2025-06-09 20:51:39,941 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:51:40,006 - jarvis_app - DEBUG - Sending message to client: 'I can help with a variety of topics, providing concise and clear responses.'
2025-06-09 20:51:40,212 - jarvis_app - DEBUG - Sending message to client: 'How can I assist you today?'
2025-06-09 20:52:14,995 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:14] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:52:14,997 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:14] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:52:14,999 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:52:14,999 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:52:16,004 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:16] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:52:16,005 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:16] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:52:18,439 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:52:18,439 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryHE3BlWkRBdm5ruBa
2025-06-09 20:52:18,440 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:52:18,440 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 33194
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHE3BlWkRBdm5ruBa
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:52:18,440 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:52:18,442 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:52:19,465 - jarvis_app - INFO - Transcription result: Hey, Javes, who are you?
2025-06-09 20:52:19,466 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:19] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:52:19,466 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javes, who are you?'}
2025-06-09 20:52:25,123 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:52:25,124 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary52lsNqyWIKjhygDY
2025-06-09 20:52:25,125 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:52:25,126 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 69902
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary52lsNqyWIKjhygDY
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:52:25,126 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:52:25,129 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:52:26,136 - jarvis_app - INFO - Transcription result: Hey, Javes, who are you?
2025-06-09 20:52:26,137 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:26] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:52:26,137 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javes, who are you?'}
2025-06-09 20:52:27,423 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:52:27,424 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarykU7Cngp4sQskl0T5
2025-06-09 20:52:27,427 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:52:27,427 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 1316
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarykU7Cngp4sQskl0T5
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:52:27,427 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:52:27,430 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:52:28,286 - jarvis_app - INFO - Transcription result: 
2025-06-09 20:52:28,287 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:28] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:52:29,857 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:52:29,857 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundarytANxDQrgfOCjw5FE
2025-06-09 20:52:29,859 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:52:29,859 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 31262
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundarytANxDQrgfOCjw5FE
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:52:29,859 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:52:29,861 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:52:30,815 - jarvis_app - INFO - Transcription result: Hey Jarvis, who are you?
2025-06-09 20:52:30,816 - jarvis_app - INFO - Sending prompt to OpenAI: , who are you
2025-06-09 20:52:30,816 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, who are you?'}
2025-06-09 20:52:30,817 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c3687a78-f86b-4fff-b747-dfe22c5492d4', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', who are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:52:30,818 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:52:30,819 - httpcore.connection - DEBUG - close.started
2025-06-09 20:52:30,819 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:52:30,819 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:52:30,851 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d7070>
2025-06-09 20:52:30,851 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16993f2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:52:30,870 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d6bf0>
2025-06-09 20:52:30,870 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:52:30,870 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:52:30,870 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:52:30,870 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:52:30,870 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:52:31,047 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:52:31,678 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:52:31 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'743'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'749'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_8d589ec80d085968bac9fb3da5e2f2a8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5ea990f258075-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:52:31,680 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:52:31,680 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:52:31 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '743', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '749', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199965', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_8d589ec80d085968bac9fb3da5e2f2a8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5ea990f258075-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:52:31,680 - openai._base_client - DEBUG - request_id: req_8d589ec80d085968bac9fb3da5e2f2a8
2025-06-09 20:52:31,681 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:52:31,944 - jarvis_app - INFO - TTS processing phrase: 'I am Jarvis, a virtual assistant here to help you with information and tasks.'
2025-06-09 20:52:31,944 - jarvis_app - DEBUG - Sending message to client: 'I am Jarvis, a virtual assistant here to help you with information and tasks.'
2025-06-09 20:52:31,950 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I am Jarvis']
2025-06-09 20:52:31,953 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:52:31,974 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:52:31,975 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:52:31,976 - jarvis_app - INFO - Full response: I am Jarvis, a virtual assistant here to help you with information and tasks.
2025-06-09 20:52:31,978 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:52:31] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:52:32,140 - root - DEBUG - line: b'a\xc9\xaa_\xc9\x90_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s\n'
2025-06-09 20:52:32,141 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'a virtual assistant here to help you with information and tasks']
2025-06-09 20:52:32,276 - root - DEBUG - line: b'\xc9\x90 v_\xcb\x88\xc9\x9c\xcb\x90_t\xca\x83_u\xcb\x90_\xc9\x99l \xc9\x90_s_\xcb\x88\xc9\xaa_s_t_\xc9\x99_n_t h_\xcb\x88\xc9\xaa\xc9\xb9 t_\xc9\x99 h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90 w_\xc9\xaa_\xc3\xb0 \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc3\xa6_n_d t_\xcb\x88\xc3\xa6_s_k_s\n'
2025-06-09 20:52:32,824 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'I am Jarvis, a virtual assistant here to help you with information and tasks.'}
2025-06-09 20:52:32,827 - jarvis_app - INFO - TTS generated 89872 samples
2025-06-09 20:52:36,984 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:53:36,406 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:53:36] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:53:36,414 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:53:36] "GET /api/status HTTP/1.1" 200 -
2025-06-09 20:53:36,414 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 20:53:36,415 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 20:53:37,417 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:53:37] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 20:53:37,420 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:53:37] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 20:53:39,530 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:53:39,531 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary504GGUEG4Erh9X9W
2025-06-09 20:53:39,532 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:53:39,532 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 36092
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary504GGUEG4Erh9X9W
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:53:39,532 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:53:39,534 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:53:40,601 - jarvis_app - INFO - Transcription result: Hey Jarvis, who are you?
2025-06-09 20:53:40,602 - jarvis_app - INFO - Sending prompt to OpenAI: , who are you
2025-06-09 20:53:40,602 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, who are you?'}
2025-06-09 20:53:40,602 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:53:40,603 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-080ac5ef-048d-4ed5-8e24-41a78f7a1d64', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', who are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:53:40,604 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:53:40,605 - httpcore.connection - DEBUG - close.started
2025-06-09 20:53:40,605 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:53:40,605 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:53:40,649 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d54e0>
2025-06-09 20:53:40,649 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16993f2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:53:40,667 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x16a1d6230>
2025-06-09 20:53:40,667 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:53:40,668 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:53:40,668 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:53:40,668 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:53:40,668 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:53:40,878 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:53:40 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'145'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'149'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_0cf1daf62140755d33b5c327c4bbc7f4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5ec4d4b993c35-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:53:40,879 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:53:40,879 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:53:40 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '145', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '149', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199965', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_0cf1daf62140755d33b5c327c4bbc7f4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5ec4d4b993c35-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:53:40,880 - openai._base_client - DEBUG - request_id: req_0cf1daf62140755d33b5c327c4bbc7f4
2025-06-09 20:53:40,880 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:53:41,166 - jarvis_app - DEBUG - Sending message to client: 'I am Jarvis, an AI designed to assist you with information and tasks.'
2025-06-09 20:53:41,166 - jarvis_app - INFO - TTS processing phrase: 'I am Jarvis, an AI designed to assist you with information and tasks.'
2025-06-09 20:53:41,171 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I am Jarvis']
2025-06-09 20:53:41,195 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:53:41,197 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:53:41,197 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:53:41,197 - jarvis_app - INFO - Full response: I am Jarvis, an AI designed to assist you with information and tasks.
2025-06-09 20:53:41,198 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'I am Jarvis, an AI designed to assist you with information and tasks.'}
2025-06-09 20:53:41,200 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:53:41] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:53:41,362 - root - DEBUG - line: b'a\xc9\xaa_\xc9\x90_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s\n'
2025-06-09 20:53:41,362 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'an AI designed to assist you with information and tasks']
2025-06-09 20:53:41,497 - root - DEBUG - line: b'\xc9\x90_n \xcb\x8ce\xc9\xaa_\xcb\x88a\xc9\xaa d_\xc9\xaa_z_\xcb\x88a\xc9\xaa_n_d t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 w_\xc9\xaa_\xc3\xb0 \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc3\xa6_n_d t_\xcb\x88\xc3\xa6_s_k_s\n'
2025-06-09 20:53:42,007 - jarvis_app - INFO - TTS generated 86032 samples
2025-06-09 20:53:46,020 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:53:51,961 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 20:53:51,961 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryycDkIVy6kYTyPAud
2025-06-09 20:53:51,964 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 20:53:51,964 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 97916
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryycDkIVy6kYTyPAud
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 20:53:51,964 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 20:53:51,967 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 20:53:52,908 - jarvis_app - INFO - Transcription result: Hey Jarvis fetch me something
2025-06-09 20:53:52,909 - jarvis_app - INFO - Sending prompt to OpenAI: fetch me something
2025-06-09 20:53:52,909 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 20:53:52,910 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1863a281-1271-44b7-8b8a-751a8225d65c', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': 'fetch me something'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 20:53:52,911 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 20:53:52,911 - httpcore.connection - DEBUG - close.started
2025-06-09 20:53:52,912 - httpcore.connection - DEBUG - close.complete
2025-06-09 20:53:52,912 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 20:53:52,944 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17c68dc30>
2025-06-09 20:53:52,944 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16993f2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 20:53:53,035 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17c68d330>
2025-06-09 20:53:53,035 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 20:53:53,036 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 20:53:53,036 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 20:53:53,036 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 20:53:53,036 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 20:53:53,246 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis fetch me something'}
2025-06-09 20:53:53,491 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 03:53:53 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'156'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'159'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199962'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'11ms'), (b'x-request-id', b'req_00344ce5c20ba5483ba7448a0c86c504'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'CF-Cache-Status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5ec9a89eb17dc-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 20:53:53,492 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 20:53:53,493 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 03:53:53 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '156', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '159', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199962', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '11ms', 'x-request-id': 'req_00344ce5c20ba5483ba7448a0c86c504', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5ec9a89eb17dc-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 20:53:53,493 - openai._base_client - DEBUG - request_id: req_00344ce5c20ba5483ba7448a0c86c504
2025-06-09 20:53:53,493 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 20:53:53,606 - jarvis_app - DEBUG - Sending message to client: 'I cannot fetch physical items.'
2025-06-09 20:53:53,606 - jarvis_app - INFO - TTS processing phrase: 'I cannot fetch physical items.'
2025-06-09 20:53:53,611 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I cannot fetch physical items']
2025-06-09 20:53:53,789 - root - DEBUG - line: b'a\xc9\xaa k_\xc3\xa6_n_\xcb\x88\xc9\x91\xcb\x90_t f_\xcb\x88\xc9\x9b_t\xca\x83 f_\xcb\x88\xc9\xaa_z_\xc9\xaa_k_\xc9\x99l \xcb\x88a\xc9\xaa_\xc9\xbe_\xc9\x99_m_z\n'
2025-06-09 20:53:53,814 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 20:53:53,815 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 20:53:53,815 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 20:53:53,815 - jarvis_app - INFO - Full response: I cannot fetch physical items. Please specify what information or assistance you need, and I'll help you with that.
2025-06-09 20:53:53,815 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': "I cannot fetch physical items. Please specify what information or assistance you need, and I'll help you with that."}
2025-06-09 20:53:53,816 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 20:53:53] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 20:53:54,107 - jarvis_app - INFO - TTS generated 46608 samples
2025-06-09 20:53:56,318 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:53:56,318 - jarvis_app - INFO - TTS processing phrase: 'Please specify what information or assistance you need, and I'll help you with that.'
2025-06-09 20:53:56,323 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Please specify what information or assistance you need']
2025-06-09 20:53:56,486 - root - DEBUG - line: b'p_l_\xcb\x88i\xcb\x90_z s_p_\xcb\x88\xc9\x9b_s_\xe1\xb5\xbb_f_\xcb\x8ca\xc9\xaa w_\xca\x8c_t \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc9\x94\xcb\x90_\xc9\xb9 \xc9\x90_s_\xcb\x88\xc9\xaa_s_t_\xc9\x99_n_s j_u\xcb\x90 n_\xcb\x88i\xcb\x90_d\n'
2025-06-09 20:53:56,486 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', "and I'll help you with that"]
2025-06-09 20:53:56,615 - root - DEBUG - line: b'\xc3\xa6_n_d a\xc9\xaa_l h_\xcb\x88\xc9\x9b_l_p j_u\xcb\x90 w_\xc9\xaa_\xc3\xb0 \xc3\xb0_\xcb\x88\xc3\xa6_t\n'
2025-06-09 20:53:57,246 - jarvis_app - INFO - TTS generated 91408 samples
2025-06-09 20:54:01,499 - jarvis_app - INFO - TTS playback completed
2025-06-09 20:54:01,527 - jarvis_app - DEBUG - Sending message to client: 'Please specify what information or assistance you need, and I'll help you with that.'
2025-06-09 21:01:24,731 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:24] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:01:24,732 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 21:01:24,733 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 21:01:24,735 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:24] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:01:25,736 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:25] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 21:01:25,738 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:25] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 21:01:32,028 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 21:01:32,028 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary0mCHd9nafgML6qSi
2025-06-09 21:01:32,031 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 21:01:32,031 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 29330
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary0mCHd9nafgML6qSi
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3002
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3002/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 21:01:32,031 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 21:01:32,034 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 21:01:33,556 - jarvis_app - INFO - Transcription result: Hi Jarvis, who are you?
2025-06-09 21:01:33,557 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:33] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 21:01:33,557 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi Jarvis, who are you?'}
2025-06-09 21:01:37,402 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:01:37,404 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:37] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:01:37,405 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 21:01:37,406 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 21:01:38,409 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:38] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 21:01:38,413 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:01:38] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 21:02:08,467 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:08] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:02:08,470 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:08] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:02:08,471 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 21:02:08,472 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 21:02:09,477 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:09] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 21:02:09,477 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:09] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 21:02:13,662 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 21:02:13,662 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary9n4M572nJyzviqAU
2025-06-09 21:02:13,664 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 21:02:13,665 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 34160
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary9n4M572nJyzviqAU
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3001
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3001/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 21:02:13,665 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 21:02:13,667 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 21:02:14,926 - jarvis_app - INFO - Transcription result: Hi Jarvis, who are you?
2025-06-09 21:02:14,927 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:14] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 21:02:14,927 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi Jarvis, who are you?'}
2025-06-09 21:02:28,296 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:28] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:02:28,298 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:28] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:02:28,315 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 21:02:28,316 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 21:02:29,316 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:29] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 21:02:29,320 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:29] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 21:02:34,474 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 21:02:34,474 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryLGfEXDhoBAxtGtk9
2025-06-09 21:02:34,476 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 21:02:34,476 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 32228
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryLGfEXDhoBAxtGtk9
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3003
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3003/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 21:02:34,476 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 21:02:34,478 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 21:02:35,768 - jarvis_app - INFO - Transcription result: Hi Jarvis, who are you?
2025-06-09 21:02:35,769 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:35] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 21:02:36,344 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi Jarvis, who are you?'}
2025-06-09 21:02:42,867 - jarvis_app - INFO - TTS test endpoint called
2025-06-09 21:02:42,869 - jarvis_app - INFO - TTS test message queued: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 21:02:42,869 - jarvis_app - INFO - TTS processing phrase: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 21:02:42,869 - jarvis_app - DEBUG - Sending message to client: 'This is a test message from Jarvis text-to-speech. Can you hear me?'
2025-06-09 21:02:42,869 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'This is a test message from Jarvis text-to-speech. Can you hear me?'}
2025-06-09 21:02:42,870 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:42] "GET /api/tts-test HTTP/1.1" 200 -
2025-06-09 21:02:42,875 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'This is a test message from Jarvis text to speech']
2025-06-09 21:02:43,047 - root - DEBUG - line: b'\xc3\xb0_\xc9\xaa_s \xc9\xaa_z \xc9\x90 t_\xcb\x88\xc9\x9b_s_t m_\xcb\x88\xc9\x9b_s_\xc9\xaa_d\xca\x92 f_\xc9\xb9_\xca\x8c_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s t_\xcb\x88\xc9\x9b_k_s_t t_\xc9\x99 s_p_\xcb\x88i\xcb\x90_t\xca\x83\n'
2025-06-09 21:02:43,537 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'Can you hear me']
2025-06-09 21:02:43,689 - root - DEBUG - line: b'k_\xc3\xa6_n j_u\xcb\x90 h_\xcb\x88\xc9\xaa\xc9\xb9 m_\xcb\x8ci\xcb\x90\n'
2025-06-09 21:02:43,951 - jarvis_app - INFO - TTS generated 93472 samples
2025-06-09 21:02:47,851 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:47] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:02:47,853 - jarvis_app - INFO - Stream response endpoint connected
2025-06-09 21:02:47,854 - jarvis_app - INFO - Stream transcription endpoint connected
2025-06-09 21:02:47,855 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:47] "GET /api/status HTTP/1.1" 200 -
2025-06-09 21:02:48,294 - jarvis_app - INFO - TTS playback completed
2025-06-09 21:02:48,857 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:48] "GET /api/stream-response HTTP/1.1" 200 -
2025-06-09 21:02:48,858 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:48] "GET /api/stream-transcription HTTP/1.1" 200 -
2025-06-09 21:02:50,778 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 21:02:50,778 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryVRdi1RX0a2ZJGI4r
2025-06-09 21:02:50,779 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 21:02:50,779 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 33194
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryVRdi1RX0a2ZJGI4r
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3003
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3003/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 21:02:50,779 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 21:02:50,795 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 21:02:51,828 - jarvis_app - INFO - Transcription result: Hi, Javis. Who are you?
2025-06-09 21:02:51,829 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:02:51] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 21:02:51,871 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi, Javis. Who are you?'}
2025-06-09 21:03:53,539 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 21:03:53,540 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundary1y3w1IKbSKKXAoNj
2025-06-09 21:03:53,542 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 21:03:53,543 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 34160
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1y3w1IKbSKKXAoNj
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3003
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3003/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 21:03:53,543 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 21:03:53,544 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 21:03:54,725 - jarvis_app - INFO - Transcription result: Hi Javis, who are you?
2025-06-09 21:03:54,726 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:03:54] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 21:03:54,726 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hi Javis, who are you?'}
2025-06-09 21:03:59,141 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 21:03:59,142 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryluktHBgHNHvhOwgI
2025-06-09 21:03:59,144 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 21:03:59,144 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 38024
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryluktHBgHNHvhOwgI
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3003
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3003/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 21:03:59,144 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 21:03:59,146 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 21:04:00,165 - jarvis_app - INFO - Transcription result: Hey, Javes, who are you?
2025-06-09 21:04:00,166 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:04:00] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 21:04:00,737 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey, Javes, who are you?'}
2025-06-09 21:04:04,273 - jarvis_app - INFO - Transcribe endpoint called
2025-06-09 21:04:04,273 - jarvis_app - DEBUG - Request content type: multipart/form-data; boundary=----WebKitFormBoundaryAYuEXsji1CT4RPUz
2025-06-09 21:04:04,275 - jarvis_app - DEBUG - Request files: ImmutableMultiDict([('audio', <FileStorage: 'recording.webm' ('audio/webm')>)])
2025-06-09 21:04:04,275 - jarvis_app - DEBUG - Request headers: Host: localhost:5002
Connection: keep-alive
Content-Length: 39956
Sec-Ch-Ua-Platform: "macOS"
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36
Accept: application/json, text/plain, */*
Sec-Ch-Ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryAYuEXsji1CT4RPUz
Sec-Ch-Ua-Mobile: ?0
Origin: http://localhost:3003
Sec-Fetch-Site: same-site
Sec-Fetch-Mode: cors
Sec-Fetch-Dest: empty
Referer: http://localhost:3003/
Accept-Encoding: gzip, deflate, br, zstd
Accept-Language: en-US,en;q=0.9


2025-06-09 21:04:04,275 - jarvis_app - INFO - Received audio file: recording.webm
2025-06-09 21:04:04,278 - jarvis_app - INFO - Audio file saved to temp_audio.wav
2025-06-09 21:04:05,275 - jarvis_app - INFO - Transcription result: Hey Jarvis, who are you?
2025-06-09 21:04:05,276 - jarvis_app - INFO - Sending prompt to OpenAI: , who are you
2025-06-09 21:04:05,276 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'user', 'content': 'Hey Jarvis, who are you?'}
2025-06-09 21:04:05,277 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ca66020d-5feb-4605-93bb-be47e2ff86b8', 'json_data': {'messages': [{'role': 'system', 'content': 'You are Jarvis. Keep responses short and only use plain text formatting. Do not use markdown or special formatting.'}, {'role': 'user', 'content': ', who are you'}], 'model': 'gpt-4o-mini', 'max_tokens': 150, 'stream': True}}
2025-06-09 21:04:05,279 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 21:04:05,279 - httpcore.connection - DEBUG - close.started
2025-06-09 21:04:05,280 - httpcore.connection - DEBUG - close.complete
2025-06-09 21:04:05,280 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 21:04:05,313 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17c68e3b0>
2025-06-09 21:04:05,313 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x16993f2c0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 21:04:05,331 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x17c68e9e0>
2025-06-09 21:04:05,331 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-06-09 21:04:05,332 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-06-09 21:04:05,332 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-06-09 21:04:05,332 - httpcore.http11 - DEBUG - send_request_body.complete
2025-06-09 21:04:05,332 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-06-09 21:04:05,784 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 04:04:05 GMT'), (b'Content-Type', b'text/event-stream; charset=utf-8'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'personal-tqzlct'), (b'openai-processing-ms', b'367'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'374'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199965'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'10ms'), (b'x-request-id', b'req_31e7eaff6b861fe3d1ad28022f862fd4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=72YgAOER_Hb35mp7w1ucjOSh.joTOAao5MZFZ2iLtts-1749528245-1.0.1.1-VHc1ENIdvsovtfJcdknWrrafPfUZ9n1EpMkpziANd3l7zV6xaSgY0I6SsrzwaGosqfE_XbcvvZHmQqbMm7kdS1MVohK2c9ira0kM8XHN2xg; path=/; expires=Tue, 10-Jun-25 04:34:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5fb8d6feccf55-SJC'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 21:04:05,788 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 21:04:05,788 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 04:04:05 GMT', 'content-type': 'text/event-stream; charset=utf-8', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'personal-tqzlct', 'openai-processing-ms': '367', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '374', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '199965', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_31e7eaff6b861fe3d1ad28022f862fd4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=72YgAOER_Hb35mp7w1ucjOSh.joTOAao5MZFZ2iLtts-1749528245-1.0.1.1-VHc1ENIdvsovtfJcdknWrrafPfUZ9n1EpMkpziANd3l7zV6xaSgY0I6SsrzwaGosqfE_XbcvvZHmQqbMm7kdS1MVohK2c9ira0kM8XHN2xg; path=/; expires=Tue, 10-Jun-25 04:34:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5fb8d6feccf55-SJC', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 21:04:05,788 - openai._base_client - DEBUG - request_id: req_31e7eaff6b861fe3d1ad28022f862fd4
2025-06-09 21:04:05,789 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-06-09 21:04:05,992 - jarvis_app - INFO - TTS processing phrase: 'I am Jarvis, an AI designed to assist you with information and tasks.'
2025-06-09 21:04:05,996 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'I am Jarvis']
2025-06-09 21:04:05,997 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-06-09 21:04:06,013 - httpcore.http11 - DEBUG - response_closed.started
2025-06-09 21:04:06,014 - httpcore.http11 - DEBUG - response_closed.complete
2025-06-09 21:04:06,015 - jarvis_app - INFO - Full response: I am Jarvis, an AI designed to assist you with information and tasks.
2025-06-09 21:04:06,015 - jarvis_app - DEBUG - Sending transcription to client: {'role': 'assistant', 'content': 'I am Jarvis, an AI designed to assist you with information and tasks.'}
2025-06-09 21:04:06,017 - werkzeug - INFO - 127.0.0.1 - - [09/Jun/2025 21:04:06] "POST /api/transcribe HTTP/1.1" 200 -
2025-06-09 21:04:06,076 - jarvis_app - DEBUG - Sending message to client: 'Just a moment...'
2025-06-09 21:04:06,169 - root - DEBUG - line: b'a\xc9\xaa_\xc9\x90_m d\xca\x92_\xcb\x88\xc9\x91\xcb\x90\xc9\xb9_v_\xc9\xaa_s\n'
2025-06-09 21:04:06,169 - root - DEBUG - espeakng: executing ['espeak-ng', '-q', '-b', '1', '-v', 'en-us', '--ipa=1', 'an AI designed to assist you with information and tasks']
2025-06-09 21:04:06,295 - root - DEBUG - line: b'\xc9\x90_n \xcb\x8ce\xc9\xaa_\xcb\x88a\xc9\xaa d_\xc9\xaa_z_\xcb\x88a\xc9\xaa_n_d t_\xca\x8a \xc9\x90_s_\xcb\x88\xc9\xaa_s_t j_u\xcb\x90 w_\xc9\xaa_\xc3\xb0 \xcb\x8c\xc9\xaa_n_f_\xc9\x9a_m_\xcb\x88e\xc9\xaa_\xca\x83_\xc9\x99_n__ \xc3\xa6_n_d t_\xcb\x88\xc3\xa6_s_k_s\n'
2025-06-09 21:04:06,835 - jarvis_app - INFO - TTS generated 86288 samples
2025-06-09 21:04:10,854 - jarvis_app - INFO - TTS playback completed
